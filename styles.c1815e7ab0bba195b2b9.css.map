{"version":3,"sources":["/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/perfect-scrollbar/css/perfect-scrollbar.css","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/filepond/dist/filepond.min.css","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/animations/line-scale.scss","./src/styles.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/_mixins.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/_variables.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/loaders.css/src/animations/line-scale-pulse-out.scss","./src/styles/_preloader.scss","./src/styles/_constants.scss","./src/styles/_base.scss","./src/styles/_global.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/_theming.scss","./src/_app-theme.scss","./src/styles/_svg-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/components/footer/footer.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/containers/landing/landing.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/components/header/header.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/home/src/lib/containers/about/about.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/sidenav/src/lib/sidenav.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/chat-box/src/lib/chat-box.component.scss-theme.scss","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/grid/src/lib/containers/accounts-grid-list/accounts-grid-list.component.scss-theme.scss","./src/styles/_global.scss-theme.scss"],"names":[],"mappings":"AAGA,IACE,yBAA2B,CAC3B,oBAAqB,CACrB,uBAAwB,CACxB,iBAAkB,CAClB,qBACF,CAKA,YAKE,WAAY,CAEZ,QAGF,CAEA,wBAXE,YAAa,CACb,SAAU,CACV,yDAA2D,CAC3D,iEAAmE,CAKnE,iBAaF,CAVA,YAKE,UAAW,CAEX,OAGF,CAEA,oDAEE,aAAc,CACd,4BACF,CAEA,oJAME,UACF,CAEA,kJAME,qBAAsB,CACtB,UACF,CAKA,aAGE,6DAA+D,CAC/D,qEAAuE,CACvE,UAAW,CAEX,UAGF,CAEA,0BAXE,qBAAsB,CACtB,iBAAkB,CAOlB,iBAaF,CAVA,aAGE,4DAA8D,CAC9D,oEAAsE,CACtE,SAAU,CAEV,SAGF,CAEA,oGAGE,qBAAsB,CACtB,WACF,CAEA,oGAGE,qBAAsB,CACtB,UACF,CAGA,oCACE,IACE,uBACF,CACF,CAEA,sEACE,IACE,uBACF,CACF;ACnHA;;;;EAIE,CAGF,qBAAqB,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,qCAAqC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,gBAAkC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAqB,cAAc,CAAC,gCAAvH,iBAAiB,CAAmE,mBAA+L,CAA5J,gBAAkC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAqB,kBAAkB,CAAC,0BAA0B,CAAC,qBAA4D,8BAA8B,CAAC,SAAS,CAAC,UAAU,CAAC,gBAAgB,CAAC,eAAe,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,2CAA2C,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,sBAAsB,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,iDAAiD,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAA4B,cAAc,CAAC,gBAAgB,CAAC,eAAe,CAAC,iBAAiB,CAAC,eAAe,CAAC,wBAAwB,yBAAyB,CAAC,gCAAgC,CAAC,6BAA6B,CAAC,qCAAqC,CAAC,6BAA6B,CAAC,cAAc,CAAC,2DAA2D,UAAU,CAAC,2DAA2D,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,6BAA6B,CAAC,gEAAgE,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,+DAA+D,UAAU,CAAC,WAAW,CAAC,iEAAiE,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,8BAA8B,WAAW,CAAC,UAAU,CAAC,iBAAiB,CAAC,+BAA+B,CAAC,qBAAqB,CAAC,oCAAoC,CAAC,kCAAkC,CAAC,wEAAwE,0CAA0C,CAAC,wCAAwC,wBAAwB,CAAC,gCAAgC,CAAC,qBAAqB,eAAe,CAAC,YAAY,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC,6BAA6B,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,uBAAuB,QAAQ,CAAC,+CAA+C,eAAe,CAAC,eAAe,CAAC,sBAAsB,CAAC,eAAe,CAAC,kBAAkB,CAAC,UAAU,CAAC,8CAA8C,gBAAgB,CAAC,UAAU,CAAC,mCAAmC,CAAC,kBAAkB,CAAC,oDAAoD,YAAY,CAAC,uBAAuB,eAAe,CAAC,YAAY,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,yBAAyB,QAAQ,CAAC,kBAAkB,CAAC,mDAAmD,eAAe,CAAC,eAAe,CAAC,kDAAkD,gBAAgB,CAAC,UAAU,CAAC,mCAAmC,CAAC,+CAA+C,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,sDAAsD,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,CAAC,4BAA4B,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,gBAAgB,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,eAAe,CAAC,UAAU,CAAC,kBAAkB,CAAC,uCAAuC,gBAAgB,CAAC,mBAAmB,CAAC,yDAAyD,mBAAmB,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CAAC,qJAAqJ,iBAAiB,CAAC,mCAAmC,YAAY,CAAC,oCAAoC,aAAa,CAAC,qCAAqC,wBAAwB,CAAC,qCAAqC,cAAc,CAAC,oCAAoC,uBAAuB,CAAC,8CAA8C,kBAAkB,CAAC,iEAAiE,oBAAoB,CAAC,gEAAgE,mBAAmB,CAAC,0KAA0K,mBAAmB,CAAC,4FAA4F,4CAA4C,CAAC,oCAAoC,CAAC,0EAA0E,UAAU,CAAC,uOAAuO,SAAS,CAAC,sIAAsI,UAAU,CAAC,8NAA8N,wCAAwC,CAAC,gCAAgC,CAAC,mEAAmE,yCAAyC,CAAC,iCAAiC,CAAC,wBAAwB,GAAkC,sBAAsB,CAAC,GAAmC,uBAAuB,CAAC,CAAC,gBAAgB,GAAkC,sBAAsB,CAAC,GAAmC,uBAAuB,CAAC,CAAC,yBAAyB,QAA+C,8BAA8B,CAAC,QAA6C,4BAA4B,CAAC,YAAiD,4BAA4B,CAAC,QAA4C,2BAA2B,CAAC,CAAC,iBAAiB,QAA+C,8BAA8B,CAAC,QAA6C,4BAA4B,CAAC,YAAiD,4BAA4B,CAAC,QAA4C,2BAA2B,CAAC,CAAC,wBAAwB,GAAG,SAAS,CAA6B,mBAAmB,CAAC,0CAA0C,CAAC,kCAAkC,CAAC,IAAI,SAAS,CAA8B,oBAAoB,CAAC,6CAA6C,CAAC,qCAAqC,CAAC,GAA8B,kBAAkB,CAAC,0CAA0C,CAAC,kCAAkC,CAAC,CAAC,gBAAgB,GAAG,SAAS,CAA6B,mBAAmB,CAAC,0CAA0C,CAAC,kCAAkC,CAAC,IAAI,SAAS,CAA8B,oBAAoB,CAAC,6CAA6C,CAAC,qCAAqC,CAAC,GAA8B,kBAAkB,CAAC,0CAA0C,CAAC,kCAAkC,CAAC,CAAC,iDAAiD,mBAAmB,CAAC,qDAAqD,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,8BAA8B,WAAW,CAAC,8BAA8B,WAAW,CAAC,uBAAuB,WAAW,CAAC,qBAAqB,WAAW,CAAC,gBAAgB,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,6BAA6B,CAAC,iCAAiC,UAAU,CAAC,yDAAyD,oDAAoD,CAAC,yEAAyE,gCAAgC,CAAC,iCAAiC,mBAAmB,CAAC,WAAW,CAAC,kDAAkD,uCAAuC,CAAC,4BAA4B,CAAC,sCAAsC,uBAAuB,CAAC,eAAe,CAAC,uDAAuD,4CAA4C,CAAC,6DAA6D,SAAS,CAAC,sBAAsB,wBAAwB,CAAC,qEAAqE,wBAAwB,CAAC,kHAAkH,wBAAwB,CAAC,sBAAsB,kBAAkB,CAAC,gCAAgC,CAAC,yBAAyB,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,8CAA8C,iBAAiB,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,uEAAuE,CAAC,+DAA+D,CAAC,8DAA8D,QAAQ,CAAC,OAAO,CAAC,4CAA4C,sBAAsB,CAAC,qDAAqD,SAAS,CAAC,uDAAuD,QAAQ,CAAC,kDAAkD,+BAA+B,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,2BAA2B,CAAC,+BAA+B,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,gBAAgB,UAAU,CAAC,WAAW,CAAC,qDAAqD,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,kJAAkJ,eAAe,CAAC,sJAAsJ,YAAY,CAAC,kJAAkJ,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,SAAS,CAAC,kJAAkJ,YAAY,CAAC,yJAAyJ,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,uIAAuI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,uIAAuI,QAAQ,CAAC,uJAAuJ,WAAW,CAAC,mJAAmJ,SAAS,CAAC,iDAAiD,sBAAsB,CAAC,eAAe,CAAC,kEAAkE,qBAAqB,CAAC,kNAAkN,YAAY,CAAC,sBAAsB,kBAAkB,CAAC,wBAAwB,CAAC,iBAAiB,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,2CAA2C,qBAAqB,CAAC,0CAA0C,YAAY,CAAC,qCAAyE,2BAA2B,CAAC,sCAAsC,CAAC,qBAAqB,CAAC,qEAAqE,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,6CAA6C,WAAW,CAAC,qBAAqB,qCAAqC,CAAC,sCAAsC,CAAC,4BAA4B,CAAC,2BAA2B,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,wBAAwB,CAAC,gDAAgD,qBAAqB,CAAC,kCAAkC,CAAC,0BAA0B,CAAmC,yBAAyB,CAAyC,+BAA+B,CAAC,wBAAwB,kCAAkC,CAAC,mCAAmC,CAAC,yBAAyB,CAAC,+BAA+B,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,sBAAsB,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,qCAAqC,iBAAiB,CAAC,8BAA8B,eAAe,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,6BAA6B,CAAC,kCAAkC,UAAU,CAAC,WAAW,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,mCAAmC,SAAS,CAAC,mBAAmB,CAAC,yBAAyB,SAAS,CAAC,sBAAsB,SAAS,CAAC,gBAAgB,SAAS,CAAC,iCAAiC,SAAS,CAAC,mBAAmB,SAAS,CAAC,gBAAgB,qBAAqB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,kBAAkB,CAAC,wIAAwI,CAAC,eAAe,CAAC,eAAe,CAAC,iCAAiC,CAAC,aAAa,CAAC,yBAAyB,CAAC,kBAAkB,kBAAkB,CAAC,mBAAmB,CAAC,2BAA2B,iBAAiB,CAAC,+BAA+B,mBAAmB,CAAC,wDAAwD,kBAAkB,CAAC,+CAA+C,mBAAmB,CAAC,sCAAsC,iBAAiB,CAAC,yCAAyC,cAAc,CAAC,iBAAiB;ACP5ve;;;;EAIE,CAGF,gCACE,iBAAkB,CAClB,MAAO,CACP,KACF,CAEA,iCACE,SACF,CAEA,iCACE,aAAc,CACd,iBAAkB,CAClB,MAAO,CACP,KAAM,CACN,UAAW,CACX,eAAgB,CAChB,eAAgB,CAChB,QAAS,CACT,SAAU,CACV,SAAU,CACV,mBAAoB,CACpB,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBACF,CACA,qCACE,UAAW,CACX,WAAY,CACZ,aAAc,CACd,kBACF,CAEA,sCACE,uBAAwB,CACxB,wBACF,CAEA,yCACE,qBAAsB,CACtB,aACF,CAEA,yCACE,qBAAsB,CACtB,aACF,CAEA,gGAEE,sCACE,qBACF,CACF,CAEA,iCACE,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,gBAAiB,CACjB,iBAAkB,CAClB,MAAO,CACP,KAAM,CACN,OAAQ,CACR,WAAY,CACZ,QAAS,CACT,mBAAqB,CACrB,eAAgB,CAChB,0BACF,CAEA,yBACE,iBAAkB,CAClB,MAAO,CACP,KAAM,CACN,SAAU,CACV,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,UAAW,CACX,mBAAoB,CACpB,eAAgB,CAChB,6BACF,CACA,iIAEE,qBAAsB,CACtB,8LAAyM,CACzM,6BACF,CAEA,sBACE,iBAAkB,CAClB,eAAgB,CAChB,aACF,CAEA,gDAEE,iBAAkB,CAClB,MAAO,CACP,KAAM,CACN,qBACF,CAEA,sFAEE,eACF,CAEA,8EAEE,WAAY,CACZ,YAAa,CACb,sBAAuB,CACvB,kBACF,CAEA,kFAEE,sBACF,CAEA,kFAEE,QAAS,CACT,QAAS,CAET,oBACF,CAEA,6IAGE,oBACF,CAEA,oFAGE,oBACF,CAEA,qFAGE,qBACF,CAEA,2OAIE,qBACF,CAEA,uHAEE,YAAa,CACb,qBAAuB,CACvB,mBACF,CCrKA,8BACE,GACE,mBCqDF,CDnDA,IACE,oBCqDF,CDnDA,GACE,mBCqDF,CACF,CD9DA,sBACE,GACE,mBCqDF,CDnDA,IACE,oBCqDF,CDnDA,GACE,mBCqDF,CACF,CDhDI,4BACE,+ICkDN,CDnDI,6BACE,+ICqDN,CDtDI,6BACE,+ICwDN,CDzDI,6BACE,+IC2DN,CD5DI,6BACE,2IC8DN,CDtDE,gBE1BA,qBCDc,CDoBd,SChBW,CDiBX,WClBY,CDmBZ,kBACA,UCrBO,CDGP,0DF0BE,oBC2DJ,CGtFA,wCACE,GACE,mBHyFF,CGvFA,IACE,oBHyFF,CGvFA,GACE,mBHyFF,CACF,CGlGA,gCACE,GACE,mBHyFF,CGvFA,IACE,oBHyFF,CGvFA,GACE,mBHyFF,CACF,CGpFE,0BFjBA,qBCDc,CDoBd,SChBW,CDiBX,WClBY,CDmBZ,kBACA,UCrBO,CDGP,0DEiBE,qBACA,qKHyFJ,CGvFI,8EACE,qEHyFN,CGtFI,6EACE,qEHwFN,CI/GA,QAEE,kBCgBU,CDfV,cACA,YACA,eACA,kBACA,WACA,aJiHF,CI/GE,sBACE,8DACA,mBACA,gBACA,kBACA,qBJiHJ,CMnIA,UAEE,SACA,UACA,WNyIF,CMvIA,KACE,4CN0IF,COrJA,+DAEE,wBPwJF,COrJA,wBACE,iBPwJF,COtJE,2BACE,gBACA,SACA,iBACA,wBPwJJ,COpJA,KACE,mBACA,mBACA,iBPuJF,COpJA,2BACE,cPuJF,COlJA,gDACE,UPqJF,COlJA,iCACE,WPqJF,COlJA,0BACE,YACA,mBACA,qBPqJF,COlJA,iDACE,SPqJF,CQkzDE,mBACE,eArLoB,CAsLpB,cAvLkB,CAwLlB,4CR7yDJ,CQgzDE,oCAEE,aR9yDJ,CQizDE,oCACE,cR9yDJ,CQm/CE,yCA9NE,oDAYF,sBAoNE,eR/+CJ,CQk/CE,sCAnOE,oDAYF,sBAyNE,eR9+CJ,CQi/CE,6CAxOE,oDAYF,sBA8NE,eR7+CJ,CQg/CE,6CA7OE,oDAYF,sBAmOE,eR5+CJ,CQk/CE,2BArPE,uDA8PA,eRt/CJ,CQy/CE,2BAjQE,sDA0QA,eR7/CJ,CQggDE,6BA7QE,oDAYF,qBR1vCF,CQ+/CE,sCAjRE,oDAYF,qBRrvCF,CQ6/CI,4CACE,eR3/CN,CQ+/CE,wBAzRE,oDAYF,qBR7uCF,CQ8/CE,8CA7RE,sDAYF,sBAmRE,eR1/CJ,CQ6/CE,8CAlSE,oDAYF,sBAwRE,eRz/CJ,CQ4/CE,8CAvSE,oDAYF,uBA6RE,eRx/CJ,CQ2/CE,8CA5SE,oDAYF,sBAkSE,eRv/CJ,CQsvDE,4BA7iBE,oDAYF,qBRhtCF,CQu5DE,4GAGI,6CACA,eACA,eRr5DN,CQ6gEE,6BACE,4CRtgEJ,CQygEE,gBAEI,eACA,eRvgEN,CQ2gEE,iCACE,cRxgEJ,CQ2gEE,qCAEE,cRxgEJ,CQ6mEE,cACE,4CR1mEJ,CQ8mEE,yCACE,gBR3mEJ,CQusEE,UACE,eACA,eRpsEJ,CQssEI,+EAEE,cRpsEN,CQ2uEE,WACE,4CRxuEJ,CQ2uEE,iBACE,eACA,eRxuEJ,CQ2uEE,2BACE,cRxuEJ,CQq3EE,cACE,4CRl3EJ,CQq3EE,mBACE,cRl3EJ,CQq3EE,qDAGI,eACA,eRn3EN,CQu3EE,8BAEI,cAjJiC,CAkJjC,eRr3EN,CQ44EE,kBAtxCE,oDAYF,qBR7nCF,CQs8EE,4BAEI,6CACA,eACA,eRp8EN,CQw8EE,6BA71CE,oDAYF,qBRlnCF,CQ04IE,gBA7yGE,iBAeU,CAdV,eAeY,CAdZ,iBAeY,CAdZ,4CAeY,CAGd,qBR1mCF,CQs4IE,wBACE,wBRn4IJ,CQy4II,kEACE,cAvB2B,CAwB3B,iBRr4IN,CQy4II,gFACE,aACA,WRt4IN,CQw4IM,oGACE,eACA,iBRr4IR,CQ04IE,sBACE,eAEA,qCRx4IJ,CQ44II,kLArEF,4CAEA,qBRn0IF,CQ84II,yHA7EF,4CAEA,qBR/zIF,CQi5IE,8BACE,cACA,oBR94IJ,CQi5IE,sBACE,aR94IJ,CQi5IE,0BAGE,gBRh5IJ,CQm5IE,kCACE,aA/EoB,CAgFpB,wBAzEqB,CA6ErB,0BRn5IJ,CQ08HI,0DACE,qBRv8HN,CQ08HI,wDACE,iBRx8HN,CQ48HM,oPAzDJ,kFAIA,gDAGA,qBRp5HF,CQ68HM,iKAhEJ,oFAIA,gDAGA,qBR/4HF,CQg9HM,0JAxEJ,oFAIA,gDAGA,qBR14HF,CQk9HI,wDACE,aRh9HN,CQm9HI,4DAGE,aRn9HN,CQs9HI,oEACE,wBAjDmB,CAqDnB,0BRv9HN,CQ69HE,aAGM,oPAvFN,2CRn4HA,CQi+HM,iKA9FN,2CRh4HA,CQs+HM,0JAtGN,0CR73HA,CACF,CQiyHI,sDACE,qBR/xHN,CQkyHI,sDACE,cACA,gBRhyHN,CQoyHM,gPAhCJ,2CAEA,qBRjwHF,CQwyHM,wJAzCJ,2CAEA,qBR7vHF,CQkkII,yDACE,aR/jIN,CQkkII,yDACE,cACA,iBRhkIN,CQokIM,sPAvCJ,4CAEA,qBR1hIF,CQwkIM,2JAhDJ,4CAEA,qBRthIF,CQs3EE,4CAGE,cRp3EJ,CQo0EE,gEARA,mBACA,gBACA,uBAQE,cACA,qBR/zEJ,CQk0EI,8FACE,cR/zEN,CQygFE,wBACE,mBRtgFJ,CQipFE,eAEI,6CACA,eACA,eR/oFN,CQ4rFE,4DAGI,6CACA,cR1rFN,CQ45FE,8BACE,4CRr5FJ,CQw5FE,oBACE,cRr5FJ,CQ0tGE,uDAzKE,4CRviGJ,CQgtGE,6BAGI,eACA,eRptGN,CQsyGE,8CACE,4CRnyGJ,CQsyGE,gBAEI,eACA,eRpyGN,CQwyGE,0BACE,eRryGJ,CQwyGE,sBACE,cRryGJ,CQwyGE,yBAEI,eACA,eRtyGN,CQy8GE,4CAHE,4CR57GJ,CQ+7GE,6BAGI,eACA,eRn8GN,CQkgHE,6GAhoFE,oDAYF,sBA4nFE,QR9/GJ,CQwhHE,aACE,6CACA,cAnBoB,CAoBpB,eAnB2B,CAoB3B,kBRrhHJ,CQwhHE,qBACE,cArB4B,CAsB5B,eApBA,CAqBA,kBRrhHJ,CQi+EE,gCACE,4CR19EJ,CQ+9EI,8BACE,cR59EN,CQ6sEE,wCARA,mBACA,gBACA,uBAQE,cACA,qBRzsEJ,CQ4sEI,uDACE,cR1sEN,CQs9EI,gCACE,cRp9EN,CQgsEE,0CARA,mBACA,gBACA,uBAQE,cACA,qBR5rEJ,CQ+rEI,yDACE,cR7rEN,CQ88EI,8BACE,6CACA,eACA,eR58EN,CQk9EI,qCACE,cR/8EN,CQ6qEE,+CARA,mBACA,gBACA,uBAQE,cACA,qBRzqEJ,CQ48EI,qGACE,cRv8EN,CQgqEE,iDARA,mBACA,gBACA,uBAQE,cACA,qBR5pEJ,CQ+pEI,gEACE,cR7pEN,CQi8EI,qCACE,4CA1CU,CA2CV,eACA,eR/7EN,CQ61BE,YAEI,6CACA,cR31BN,CQi3BE,oBArFE,oDAYF,qBRnyBF,CQ89GE,qBAEI,6CACA,cR59GN,CQg+GE,4BACE,cAEE,oBACA,kBACA,eR99GN,CQkpIE,UACE,4CR/oIJ,CQkpIE,qCAEE,gBACA,cR/oIJ,CQ6oBE,YACE,gBAIA,iBR7oBJ,CQopBI,wBACE,uBRlpBN,CQspBE,iCACE,gBRnpBJ,CQspBE,oBACE,kBACA,kBACA,oBAEA,wDACA,kBRppBJ,CQ7kBI,8CAquCE,YRrpBN,CQ3mBE,qBACE,SACA,mBACA,WACA,YACA,gBACA,UACA,kBACA,UAGA,UAGA,wBACA,oBR0mBJ,CQxvBE,mDAEE,oBAGA,MACA,OACA,YACA,URwvBJ,CQpvBE,uBACE,eACA,YRuvBJ,CQrvBI,6BAGE,YRqvBN,CQtuBE,8CANE,aACA,kBACA,YR0vBJ,CQtvBE,kBAIE,oBACA,sBAMA,eACA,eR0uBJ,CQvuBE,sBAEE,kBACA,MACA,SACA,OACA,QAEA,YApE2B,CAqE3B,oBACA,wCACA,kDACA,SRwuBJ,CQtuBI,mDACE,SRwuBN,CQluBM,6CAPF,mDAQI,URquBN,CACF,CQjuBE,2BACE,0BRouBJ,CQ5tBI,iGACE,SR+tBN,CQztBE,6CACE,kBACA,YA1GkB,CA+GlB,aAIA,sBAGA,cACA,cRmtBJ,CQ/sBE,wBACE,eAKA,WAKA,iBR0sBJ,CQjnBE;EAA0C,KRqnB5C,CQrnBE;EAA0C,KRqnB5C,CQpnBE;EAAwC,KRunB1C,CQvnBE;EAAwC,KRunB1C,CQrnBE,oDAEE,qGRsnBJ,CQnnBE,0DAEE,iGRqnBJ,CQhnBE,+BACE,WRmnBJ,CQ7mBE,yCACE,sBACA,0BAGA,wBACA,gCR8mBJ,CQ4iBE,oBAII,+BR1iBN,CQwoBE,YACE,qBRroBJ,CQipBI,4LAHE,0BRpoBN,CQuoBI,uBAEE,qBRzoBN,CQ4oBI,gCACE,qBR1oBN,CQ8oBE,gEACE,aR3oBJ,CQ8oBE,+DACE,aR3oBJ,CQ8oBE,6DACE,aR3oBJ,CQ+pBE,oBACE,qBR5pBJ,CQ+pBE,2CACE,qBR5pBJ,CQurBE,qBACE,qBRprBJ,CQsrBI,2BACE,aRprBN,CQwrBE,8BACE,aRrrBJ,CQwrBE,0FAEE,kBRrrBJ,CQ6rBE,wJAIE,kBR1rBJ,CQ6rBE,oFAEE,kBR1rBJ,CQ+rBI,0HACE,kBR3rBN,CQggII,kBAj9IF,iFRqdF,CQ4/HI,kBAj9IF,gGRydF,CQw/HI,kBAj9IF,gGR6dF,CQo/HI,kBAj9IF,gGRieF,CQg/HI,kBAj9IF,iGRqeF,CQ4+HI,kBAj9IF,iGRyeF,CQw+HI,kBAj9IF,kGR6eF,CQo+HI,kBAj9IF,sGRifF,CQg+HI,kBAj9IF,sGRqfF,CQ49HI,kBAj9IF,sGRyfF,CQw9HI,mBAj9IF,uGR6fF,CQo9HI,mBAj9IF,uGRigBF,CQg9HI,mBAj9IF,uGRqgBF,CQ48HI,mBAj9IF,uGRygBF,CQw8HI,mBAj9IF,uGR6gBF,CQo8HI,mBAj9IF,uGRihBF,CQg8HI,mBAj9IF,wGRqhBF,CQ47HI,mBAj9IF,wGRyhBF,CQw7HI,mBAj9IF,wGR6hBF,CQo7HI,mBAj9IF,wGRiiBF,CQg7HI,mBAj9IF,yGRqiBF,CQ46HI,mBAj9IF,yGRyiBF,CQw6HI,mBAj9IF,yGR6iBF,CQo6HI,mBAj9IF,yGRijBF,CQg6HI,mBAj9IF,yGRqjBF,CQo6HE,oBAIE,yBACA,qBRp6HJ,CQ2vBE,wBAEE,gBACA,qBRrvBJ,CQhjBE,sDAnBA,iGRskBF,CQyvBI,8EACE,eRvvBN,CQyvBM,wGACE,qBRvvBR,CQg2BE,mBACE,WACA,kBR71BJ,CQ/4BI,6CA+uDE,kBACA,eR71BN,CQk2BI,qCACE,mBACA,UR/1BN,CQo2BI,mCACE,WACA,kBRj2BN,CQq2BE,WACE,iBRl2BJ,CQs2BI,qCACE,YRn2BN,CQw2BI,uCAWI,mBAMF,qBRp3BN,CQw3BE,mBACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBRr3BJ,CQw3BE,mFAEE,eRr3BJ,CQ03BE,oCAEE,cRx3BJ,CQ0tBE,oCACE,UANmB,CAOnB,WAPmB,CAQnB,gBRvtBJ,CQ2tBI,oDACE,QRztBN,CQ8tBI,oDACE,WR5tBN,CQiuBI,qDACE,UR/tBN,CQouBI,+DACE,UACA,WRluBN,CQuuBI,oDACE,WRruBN,CQ0uBI,8DACE,WACA,URxuBN,CQ8uBM,uEACE,SR5uBR,CQivBM,iFACE,UACA,UR/uBR,CQovBM,sEACE,URlvBR,CQuvBM,gFACE,WACA,SRrvBR,CQkrBE,qCACE,UAPqB,CAQrB,WARqB,CASrB,gBR/qBJ,CQmrBI,qDACE,SRjrBN,CQsrBI,qDACE,YRprBN,CQyrBI,sDACE,URvrBN,CQ4rBI,gEACE,UACA,WR1rBN,CQ+rBI,qDACE,WR7rBN,CQksBI,+DACE,WACA,URhsBN,CQssBM,wEACE,URpsBR,CQysBM,kFACE,UACA,WRvsBR,CQ4sBM,uEACE,WR1sBR,CQ+sBM,iFACE,WACA,UR7sBR,CQ0oBE,oCACE,UALmB,CAMnB,WANmB,CAOnB,gBRvoBJ,CQ2oBI,oDACE,SRzoBN,CQ8oBI,oDACE,YR5oBN,CQipBI,qDACE,UR/oBN,CQopBI,+DACE,UACA,WRlpBN,CQupBI,oDACE,WRrpBN,CQ0pBI,8DACE,WACA,URxpBN,CQ8pBM,uEACE,UR5pBR,CQiqBM,iFACE,UACA,WR/pBR,CQoqBM,sEACE,WRlqBR,CQuqBM,gFACE,WACA,URrqBR,CQuyBE,4BAjiDA,yGAmiDE,gBACA,qBRpyBJ,CQy4BE,iDAKE,cACA,sBR14BJ,CQ22BE,qFACE,aRz2BJ,CQ22BE,kFACE,aRz2BJ,CQ22BE,4EACE,aRz2BJ,CQ62BI,0bAEE,qBR52BN,CQyyBE,mKACE,wBRvyBJ,CQ0yBE,gKACE,wBRxyBJ,CQ2yBE,0JACE,wBRzyBJ,CQ4yBE,6JACE,4BR1yBJ,CQ03BI,6GACE,UAtGuB,CAuGvB,6BRx3BN,CQ43BE,0BACE,eRz3BJ,CQ83BE,oCACE,4BR33BJ,CQ83BE,2DAEE,sBACA,qBR53BJ,CQw0BE,iTACE,URh0BJ,CQo0BI,ojBAEE,qBRn0BN,CQszBE,2GACE,wBRpzBJ,CQszBE,uGACE,wBRpzBJ,CQszBE,+FACE,wBRpzBJ,CQwzBI,ojBAEE,gCRvzBN,CQ6xBE,iiBAnBA,mCRjwBF,CQ5zBE,iGAnBA,iFRm1BF,CQh0BE,iDAnBA,gGRu1BF,CQp0BE,wEAnBA,sGR01BF,CQv0BE,2DAnBA,iFR61BF,CQ10BE,mFAnBA,kGRi2BF,CQ90BE,iIAnBA,uGRo2BF,CQj1BE,uGAnBA,iFRu2BF,CQ43BE,uDAnuDA,gGR42BF,CQ43BE,iHAEE,eRz3BJ,CQ43BE,mBACE,qBRz3BJ,CQ23BI,oDACE,gCRz3BN,CQ63BE,uCACE,sBACA,eR13BJ,CQ43BI,wEACE,qBR13BN,CQ83BE,mFACE,qCR33BJ,CQ83BE,6FACE,iBACA,sCR33BJ,CQ+3BI,8GACE,iBACA,kBACA,oCR53BN,CQg4BE,2BACE,yBACA,qBR73BJ,CQ+3BI,iEACE,qBR73BN,CQi4BE,4BACE,sBACA,qBR93BJ,CQg4BI,kEACE,eR93BN,CQi4BI,sDACE,wBR/3BN,CQm4BE,iHAEE,gCRh4BJ,CQo5BE,UAEE,gBACA,qBRl5BJ,CQz5BE,wCAnBA,gGR+6BF,CQ55BE,sDAnBA,iFRk7BF,CQo5BE,mBACE,qBRj5BJ,CQk8BE,oBACE,4BR/7BJ,CQk8BE,wBACE,YR/7BJ,CQk8BE,6BAGE,wBRj8BJ,CQo8BE,wBACE,wBRj8BJ,CQq8BI,4HACE,wBRl8BN,CQq8BI,0HACE,wBRn8BN,CQs8BI,sHACE,wBRp8BN,CQ28BM,gJACE,wBRx8BR,CQ68BM,sEACE,oBR38BR,CQ+8BI,2CACE,qBR78BN,CQm9BE,kCACE,qBRh9BJ,CQq9BI,mKACE,kBRj9BN,CQo9BI,iKACE,kBRj9BN,CQo9BI,6JACE,kBRj9BN,CQmhCE,4BA1CA,wBAuCwB,CAtCxB,qBRr+BF,CQu+BE,6CACE,qBAoCsB,CAnCtB,URr+BJ,CQ8gCM,2DAlgEJ,gGRu/BF,CQ+gCM,2EACE,WR7gCR,CQihCI,8CACE,UR/gCN,CQkhCI,kCACE,eRhhCN,CQqhCI,0DAjEF,wBAwBgE,CAvBhE,URh9BF,CQk9BE,2EACE,UAoBuB,CAnBvB,URh9BJ,CQq+BE,8EATA,mCRz9BF,CQ6gCI,uDArEF,wBAwBgE,CAvBhE,URr8BF,CQu8BE,wEACE,UAoBuB,CAnBvB,URr8BJ,CQ09BE,2EATA,mCR98BF,CQsgCI,yDAzEF,wBAwBgE,CAvBhE,UR17BF,CQ47BE,0EACE,UAoBuB,CAnBvB,UR17BJ,CQ+8BE,6EATA,mCRn8BF,CQqhCE,WACE,eRlhCJ,CQqhCE,uJAIE,kBRlhCJ,CQqhCE,wFAEE,mCRlhCJ,CQqhCE,iBACE,qBRlhCJ,CQqhCE,2BACE,qBRlhCJ,CQ8kCE,oBACE,gCR3kCJ,CQglCE,+HAGE,qBR7kCJ,CQglCE,2BACE,qBR7kCJ,CQglCE,yCACE,0BR7kCJ,CQglCE,yBACE,qBR7kCJ,CQglCE,gCACE,sBACA,wBR7kCJ,CQglCE,6FACE,qBR7kCJ,CQmlCI,iWACE,gCR9kCN,CQklCE,0DAGE,4BRjlCJ,CQolCE,sFAII,4BRplCN,CQqgCE,4BACE,yBACA,URlgCJ,CQqgCE,wDAII,mCRrgCN,CQ8gCE,oDACE,+BR3gCJ,CQolCE,wBAxsEA,kGA0sEE,sBACA,qBRjlCJ,CQk/BE,+DACE,yBACA,URh/BJ,CQm/BE,2FAII,oCRp/BN,CQ6/BE,uFACE,+BR3/BJ,CQw+BE,6DACE,yBACA,URt+BJ,CQy+BE,yFAII,mCR1+BN,CQm/BE,qFACE,+BRj/BJ,CQwkCE,8BAttEA,iFRkpCF,CQwkCE,8BACE,aRrkCJ,CQukCI,yCACE,aRrkCN,CQwkCI,uCACE,aRtkCN,CQ8mCE,sBA1wEA,0GA4wEE,gBACA,qBR3mCJ,CQy1GE,aACE,gCRt1GJ,CQy1GE,sBACE,kCRt1GJ,CQsnCE,qBAEE,gBACA,qBRpnCJ,CQ5pCE,mDAnBA,gGRkrCF,CQonCE,gBACE,gCRjnCJ,CQwnCM,mSACE,0BRrnCR,CQ4nCE,oBACE,oGAEE,eR1nCJ,CACF,CQ6nCE,kCACE,qBR3nCJ,CQ8nCE,uEAEE,qBR3nCJ,CQ8nCE,gDACE,qBR3nCJ,CQ6nCI,0KAEE,aR3nCN,CQq9FE,gCACE,oBR98FJ,CQi9FE,kDACE,aR98FJ,CQg9FI,6DACE,aR98FN,CQi9FI,2DACE,aR/8FN,CQm9FE,6CACE,aRh9FJ,CQm9FE,uBACE,gCRh9FJ,CQo9FI,mDACE,wBRj9FN,CQm9FM,8DACE,wBRj9FR,CQo9FM,4DACE,wBRl9FR,CQw9FI,4GACE,aRr9FN,CQw9FI,uHACE,aRt9FN,CQq+FM,uVAEE,aR59FR,CQg+FI,uIAEE,wBR99FN,CQk+FE,WACE,aR/9FJ,CQskFI,oGACE,qBRhkFN,CQmkFI,4DACE,gCRjkFN,CQokFI,oFAx5CF,4FACA,yBACA,0BRzqCF,CQm2FI,8DACE,gCRh2FN,CQm2FI,sFAhsDF,4FACA,yBACA,0BRhqCF,CQu8EI,qDACE,gCRp8EN,CQu8EI,6EACE,gCRr8EN,CQw8EI,iEACE,gCRt8EN,CQ08EM,8EACE,qBRx8ER,CQ28EM,yFACE,4BRz8ER,CQgtFI,2DACE,qBR7sFN,CQgtFI,iEACE,qBR9sFN,CQktFM,6EACE,aRhtFR,CQmtFM,wFACE,aRjtFR,CQ2tFM,qMACE,aRttFR,CQ2tFM,iFACE,qBRztFR,CQ4tFM,mFACE,qBR1tFR,CQ6lCI,sBACE,aR1lCN,CQ6lCI,qBACE,aR3lCN,CQ8lCI,mBACE,aR5lCN,CQ4qCE,mEACE,qBRzqCJ,CQ4qCE,uHAEE,qBRzqCJ,CQ4qCE,mBACE,mBRzqCJ,CQsnCE,0CAsDI,qBRzqCN,CQmnCE,gCAsDI,qBRzqCN,CQunCE,qCAkDI,qBRtqCN,CQwnCE,8CA8CI,qBRnqCN,CQynCE,yCA0CI,qBRhqCN,CQmrCE,+BACE,mBRhrCJ,CQmrCE,wEAEE,mBRhrCJ,CQmrCE,0FACE,aRhrCJ,CQktCI,8DACE,qBR5sCN,CQ+sCI,8BACE,qBR7sCN,CQitCE,wBACE,qBR9sCJ,CQotCI,gMACE,0BR7sCN,CQktCI,+GACE,0BR/sCN,CQgxCE,gBAEE,eR9wCJ,CQ14CE,8CAnBA,iGRg6CF,CQ8wCE,eACE,uBACA,qBR3wCJ,CQ8wCM,wDACE,qBR5wCR,CQixCE,uEAEE,qBR9wCJ,CQqxCI,uLACE,0BR/wCN,CQuyCE,eACE,eRpyCJ,CQuyCE,4DAEE,qBRpyCJ,CQuyCE,kDAEE,qCACA,sCRpyCJ,CQuyCE,yCAEE,oCRpyCJ,CQwyCI,uMAIE,4BRryCN,CQ6zCE,6BACE,YR1zCJ,CQ6zCE,yBACE,wBR1zCJ,CQ6zCE,6BACE,wBR1zCJ,CQ8zCI,0DACE,YR3zCN,CQ8zCI,sDACE,wBR5zCN,CQ+zCI,0DACE,wBR7zCN,CQk0CI,wDACE,YR/zCN,CQk0CI,oDACE,wBRh0CN,CQm0CI,wDACE,wBRj0CN,CQm1CI,iDACE,cRh1CN,CQm1CI,uEACE,cRj1CN,CQo1CI,mEACE,cRl1CN,CQi3CE,wBACE,4BR92CJ,CQ01CE,wEACE,oBRv1CJ,CQ01CE,2SAIE,wBR11CJ,CQk1CE,uEACE,oBRh1CJ,CQm1CE,uSAIE,wBRn1CJ,CQ20CE,qEACE,oBRz0CJ,CQ40CE,+RAIE,wBR50CJ,CQ42CM,4IAEE,4BR12CR,CQ62CM,wIAEE,gCR32CR,CQ82CM,8DACE,qBR52CR,CQk3CI,sCACE,qBRh3CN,CQy4CE,kBACE,qBRt4CJ,CQy4CE,wBACE,qBRt4CJ,CQy4CE,uCACE,qBRt4CJ,CQy4CE,kBACE,qBRt4CJ,CQy4CE,kBACE,eRt4CJ,CQliDE,gDAnBA,iGRwjDF,CQs4CI,qEACE,0BRp4CN,CQ04CM,0DACE,aRv4CR,CQ04CM,yDACE,aRx4CR,CQg5CI,wHACE,aR34CN,CQ84CI,kEACE,qBR54CN,CQ+6CE,sBACE,wBALmC,CAMnC,qBR56CJ,CQ+6CE,YAEE,qBR56CJ,CQ86CI,wCAHA,qBRx6CJ,CQ+6CI,kCAvgGF,wGR2lDF,CQm7CE,iBACE,sCRh7CJ,CQw7CE,2DACE,qCAhCmB,CAiCnB,iBRj7CJ,CQm7CI,0CACE,iBACA,sCRj7CN,CQq7CE,sCAQI,+BRz7CN,CQ68CI,sDACE,wBR18CN,CQ68CI,oDAGE,qCR78CN,CQg9CI,kDAGE,wBRh9CN,CQm8CI,kEACE,wBRj8CN,CQo8CI,gEAGE,oCRp8CN,CQu8CI,8DAGE,wBRv8CN,CQ07CI,+DACE,wBRx7CN,CQ27CI,6DAGE,oCR37CN,CQ87CI,2DAGE,wBR97CN,CQk+CI,wDAGE,qBRl+CN,CQs+CE,wBArnGA,iGAunGE,wBRn+CJ,CQs+CE,sBACE,gCRn+CJ,CQ6gDE,6BACE,gCR1gDJ,CQ8+CE,wGAGE,wBR3+CJ,CQ8+CE,0CACE,UR5+CJ,CQq+CE,qGAGE,wBRl+CJ,CQq+CE,yCACE,URn+CJ,CQ49CE,+FAGE,wBRz9CJ,CQ49CE,uCACE,UR19CJ,CQ8/CE,uBAGE,oCR7/CJ,CQwgDI,yFACE,gCRpgDN,CQghDM,6LACE,gCRxgDR,CQ8gDI,6CAGE,gCR7gDN,CQuhDM,oJAEE,gCRrhDR,CQyhDQ,4KAEE,gCRvhDV,CQ6hDM,6EACE,4BAvFiB,CAwFjB,4BR3hDR,CQgiDQ,4KACE,4BR9hDV,CQiiDQ,oNACE,4BR/hDV,CQqiDE,gDACE,2BRliDJ,CQ2iDE,yCACE,8GAIA,qHR3iDJ,CQqjDE,uCACE,8GRljDJ,CQklDI,kGAGE,gCRjlDN,CQulDI,oBACE,uBACE,eRrlDN,CACF,CQwlDI,qEAIE,qBRxlDN,CQ2lDI,gCAGE,iCACA,UR3lDN,CQ8lDI,+HAGE,yBACA,UR5lDN,CQ+lDI,4CACE,6BACA,aR7lDN,CQgmDI,uDACE,qBR9lDN,CQimDI,sDACE,aR/lDN,CQmmDE,8CACE,qBRhmDJ,CQmmDE,kCACE,iCRhmDJ,CQmmDE,wGAGE,gCRhmDJ,CQooDE,uBAYI,aR5oDN,CQkqDE,iCAEE,uCR/pDJ,CQmqDI,+FAEE,oCAVY,CAWZ,kBRhqDN,CQoqDE,6BACE,qBRjqDJ,CQmqDI,+DACE,qBRjqDN,CQqqDE,mCACE,4BRlqDJ,CQqqDE,uEACE,4BRlqDJ,CQsqDE,gGAEE,mBACA,eRnqDJ,CQ+sDM,grBACE,qCRxsDR,CQ6rDE,kFACE,wBR3rDJ,CQ0rDE,gIACE,qBRxrDJ,CQisDM,wqBACE,qCR3rDR,CQgrDE,gFACE,wBR9qDJ,CQ6qDE,4HACE,qBR3qDJ,CQorDM,wpBACE,qCR9qDR,CQmqDE,4EACE,wBRjqDJ,CQgqDE,oHACE,qBR9pDJ,CQuqDM,wwBACE,qCRjqDR,CQyqDE,8VACE,wBRvqDJ,CQ2qDE,sNACE,URzqDJ,CQ2qDI,0RACE,wBRzqDN,CQ8qDE,oJACE,iBR5qDJ,CQ+qDE,4NACE,+BR7qDJ,CQkrDE,sHACE,oCRhrDJ,CQ8oDM,gwBACE,qCRxoDR,CQgpDE,wVACE,wBR9oDJ,CQkpDE,kNACE,URhpDJ,CQkpDI,sRACE,wBRhpDN,CQqpDE,kJACE,iBRnpDJ,CQspDE,0NACE,+BRppDJ,CQypDE,oHACE,oCRvpDJ,CQqnDM,gvBACE,qCR/mDR,CQunDE,4UACE,wBRrnDJ,CQynDE,0MACE,URvnDJ,CQynDI,8QACE,wBRvnDN,CQ4nDE,8IACE,iBR1nDJ,CQ6nDE,sNACE,+BR3nDJ,CQgoDE,gHACE,oCR9nDJ,CQqrDE,aACE,mBACA,qBRlrDJ,CQorDI,yBAnCF,mBACA,UR9oDF,CQorDI,wBAvCF,mBACA,UR1oDF,CQorDI,sBA3CF,mBACA,URtoDF,CQ0oDE,4HAGE,6BRxoDJ,CQ2oDE,4MAKE,aRzoDJ,CQ4oDE,gCACE,wBR1oDJ,CQssDE,aACE,4BRnsDJ,CQk6EE,UACE,eR/5EJ,CQk6EE,qCAEE,qBR/5EJ,CQqtDE,yBAGE,yBACA,mBAxrHF,kGRq+DF,CQwtDE,4BACE,aRrtDJ,CSv7EE,oBACE,kBT07EJ,CSv7EE,wBACE,kBT07EJ,CSx7EI,2BACE,UT07EN,CUz9EE,uBACE,YV49EJ,CUz9EE,yBACE,cV49EJ,CUz9EE,6BACE,kBV49EJ,CUr+EE,sBACE,YVw+EJ,CUr+EE,wBACE,cVw+EJ,CUr+EE,4BACE,kBVw+EJ,CUj/EE,+BACE,YVo/EJ,CUj/EE,iCACE,cVo/EJ,CUj/EE,qCACE,kBVo/EJ,CU7/EE,+BACE,YVggFJ,CU7/EE,iCACE,cVggFJ,CU7/EE,qCACE,kBVggFJ,CUzgFE,gCACE,YV4gFJ,CUzgFE,kCACE,cV4gFJ,CUzgFE,sCACE,kBV4gFJ,CUrhFE,gCACE,YVwhFJ,CUrhFE,kCACE,cVwhFJ,CUrhFE,sCACE,kBVwhFJ,CUjiFE,gCACE,YVoiFJ,CUjiFE,kCACE,cVoiFJ,CUjiFE,sCACE,kBVoiFJ,CU7iFE,gCACE,YVgjFJ,CU7iFE,kCACE,cVgjFJ,CU7iFE,sCACE,kBVgjFJ,CUzjFE,gCACE,YV4jFJ,CUzjFE,kCACE,cV4jFJ,CUzjFE,sCACE,kBV4jFJ,CUrkFE,gCACE,YVwkFJ,CUrkFE,kCACE,cVwkFJ,CUrkFE,sCACE,kBVwkFJ,CW5kFE,gBACE,mBACA,UX+kFJ,CW3kFI,mCACE,UX8kFN,CYtlFI,uCACE,kBZylFN,CYtlFI,qCACE,UZwlFN,CYrlFI,kCACE,aZulFN,CYplFI,kCACE,qBZslFN,Ca/lFM,mCAGE,abgmFR,CctmFI,sBACE,sBACA,wBdymFN,CctmFQ,uCACE,6DdwmFV,Ce5mFI,uBP09CA,oDAYF,sBOp+CI,efgnFN,Ce7mFI,6CAEE,qBAXmB,CAYnB,qBACA,gDACA,yBPg9CF,oDAYF,qBRqpCF,Ce7mFM,yDACE,qBfgnFR,Ce5mFI,sBACE,cf8mFN,Ce3mFI,yBACE,eACA,YACA,WACA,gBACA,gBf6mFN,Ce1mFI,oEAEE,qBf4mFN,CgB/oFI,yBACE,sBACA,qBhBkpFN,CgB5oFM,yCACE,qBhB8oFR,CiBtpFI,qBACE,kBjBypFN,CkB3pFI,yBACE,sBACA,wBlB8pFN,CmB5pFI,0CACE,yBACA,UnB+pFN,CmB5pFI,kDACE,yBACA,UnB8pFN,CoB3qFE,KACE,sBACA,wBpB8qFJ,CQ7xCE,iCAII,mCR+xCN,CQjsCE,yBACE,URmsCJ,CQ3rCI,4MACE,8BRgsCN,CQ7rCI,oCACE,+BACA,UR+rCN,CQ5rCI,6CACE,wBR8rCN,CQ1rCE,6EACE,aR4rCJ,CQzrCE,4EACE,UR2rCJ,CQxrCE,0EACE,aR0rCJ,CQtqCE,iCACE,wBRwqCJ,CQrqCE,wDACE,wBRuqCJ,CQ5oCE,kCACE,wBR8oCJ,CQ5oCI,wCACE,aR8oCN,CQ1oCE,2CACE,aR4oCJ,CQzoCE,oHAEE,kBR2oCJ,CQnoCE,4MAIE,eRqoCJ,CQloCE,8GAEE,kBRooCJ,CQ/nCI,oJACE,kBRkoCN,CQmsEI,+BAj9IF,iFRixEF,CQgsEI,+BAj9IF,gGRoxEF,CQ6rEI,+BAj9IF,gGRuxEF,CQ0rEI,+BAj9IF,gGR0xEF,CQurEI,+BAj9IF,iGR6xEF,CQorEI,+BAj9IF,iGRgyEF,CQirEI,+BAj9IF,kGRmyEF,CQ8qEI,+BAj9IF,sGRsyEF,CQ2qEI,+BAj9IF,sGRyyEF,CQwqEI,+BAj9IF,sGR4yEF,CQqqEI,gCAj9IF,uGR+yEF,CQkqEI,gCAj9IF,uGRkzEF,CQ+pEI,gCAj9IF,uGRqzEF,CQ4pEI,gCAj9IF,uGRwzEF,CQypEI,gCAj9IF,uGR2zEF,CQspEI,gCAj9IF,uGR8zEF,CQmpEI,gCAj9IF,wGRi0EF,CQgpEI,gCAj9IF,wGRo0EF,CQ6oEI,gCAj9IF,wGRu0EF,CQ0oEI,gCAj9IF,wGR00EF,CQuoEI,gCAj9IF,yGR60EF,CQooEI,gCAj9IF,yGRg1EF,CQioEI,gCAj9IF,yGRm1EF,CQ8nEI,gCAj9IF,yGRs1EF,CQ2nEI,gCAj9IF,yGRy1EF,CQgoEE,iEAIE,yBACA,URjoEJ,CQsoEI,yBACE,YRpoEN,CQ3iCE,qCAEE,mBACA,UR6iCJ,CQl1EE,mEAnBA,iGRw2EF,CQziCI,2FACE,kBR2iCN,CQziCM,qHACE,UR2iCR,CQl8BE,gCACE,sBACA,kBRo8BJ,CQhrFI,0DA+uDE,kBACA,eRo8BN,CQ/7BI,kDACE,gBACA,qBRk8BN,CQ77BI,gDACE,WACA,kBR+7BN,CQ37BE,wBACE,iBR67BJ,CQz7BI,kDACE,YR27BN,CQt7BI,oDAWI,mBAMF,wBRy6BN,CQr6BE,gCACE,kBACA,kBACA,qBACA,kBACA,qCACA,oBACA,gBACA,mBACA,uBACA,mBRu6BJ,CQp6BE,6GAEE,eRs6BJ,CQj6BE,iDAEE,cRk6BJ,CQhkCE,iDACE,UANmB,CAOnB,WAPmB,CAQnB,gBRkkCJ,CQ9jCI,iEACE,QRgkCN,CQ3jCI,iEACE,WR6jCN,CQxjCI,kEACE,UR0jCN,CQrjCI,4EACE,UACA,WRujCN,CQljCI,iEACE,WRojCN,CQ/iCI,2EACE,WACA,URijCN,CQ3iCM,oFACE,SR6iCR,CQxiCM,8FACE,UACA,UR0iCR,CQriCM,mFACE,URuiCR,CQliCM,6FACE,WACA,SRoiCR,CQvmCE,kDACE,UAPqB,CAQrB,WARqB,CASrB,gBRymCJ,CQrmCI,kEACE,SRumCN,CQlmCI,kEACE,YRomCN,CQ/lCI,mEACE,URimCN,CQ5lCI,6EACE,UACA,WR8lCN,CQzlCI,kEACE,WR2lCN,CQtlCI,4EACE,WACA,URwlCN,CQllCM,qFACE,URolCR,CQ/kCM,+FACE,UACA,WRilCR,CQ5kCM,oFACE,WR8kCR,CQzkCM,8FACE,WACA,UR2kCR,CQ9oCE,iDACE,UALmB,CAMnB,WANmB,CAOnB,gBRgpCJ,CQ5oCI,iEACE,SR8oCN,CQzoCI,iEACE,YR2oCN,CQtoCI,kEACE,URwoCN,CQnoCI,4EACE,UACA,WRqoCN,CQhoCI,iEACE,WRkoCN,CQ7nCI,2EACE,WACA,UR+nCN,CQznCM,oFACE,UR2nCR,CQtnCM,8FACE,UACA,WRwnCR,CQnnCM,mFACE,WRqnCR,CQhnCM,6FACE,WACA,URknCR,CQh/BE,yCAjiDA,yGAmiDE,mBACA,URk/BJ,CQ74BE,wFAKE,cACA,sBR24BJ,CQ16BE,4HACE,aR46BJ,CQ16BE,yHACE,UR46BJ,CQ16BE,mHACE,aR46BJ,CQx6BI,slBAEE,wBRy6BN,CQ5+BE,0MACE,wBR8+BJ,CQ3+BE,uMACE,qBR6+BJ,CQ1+BE,iMACE,wBR4+BJ,CQz+BE,oMACE,4BR2+BJ,CQ35BI,oJACE,UAtGuB,CAuGvB,6BR65BN,CQz5BE,uCACE,eR25BJ,CQt5BE,iDACE,gCRw5BJ,CQr5BE,+GAEE,WACA,wBRs5BJ,CQ78BE,0TACE,qBRk9BJ,CQh9BE,mJACE,URk9BJ,CQ98BI,owBAEE,wBR+8BN,CQ59BE,+JACE,wBR89BJ,CQ59BE,2JACE,qBR89BJ,CQ59BE,mJACE,wBR89BJ,CQ19BI,owBAEE,oCR29BN,CQz/BE,0dAfA,+BR8gCF,CQ3/BE,mOAnBA,mCRihCF,CQ9kFE,2HAnBA,iFRomFF,CQjlFE,8DAnBA,gGRumFF,CQplFE,qFAnBA,sGR0mFF,CQvlFE,wEAnBA,iFR6mFF,CQ1lFE,6GAnBA,kGRgnFF,CQ7lFE,2JAnBA,uGRmnFF,CQhmFE,iIAnBA,iFRsnFF,CQn5BE,iFAnuDA,gGR0nFF,CQl5BE,2IAEE,eRo5BJ,CQj5BE,gCACE,wBRm5BJ,CQj5BI,iEACE,oCRm5BN,CQ/4BE,oDACE,WACA,kBRi5BJ,CQ/4BI,qFACE,qBRi5BN,CQ74BE,gGACE,yCR+4BJ,CQ54BE,0GACE,iBACA,0CR84BJ,CQ14BI,2HACE,iBACA,kBACA,wCR44BN,CQx4BE,wCACE,yBACA,wBR04BJ,CQx4BI,8EACE,UR04BN,CQt4BE,yCACE,yBACA,qBRw4BJ,CQt4BI,+EACE,kBRw4BN,CQr4BI,mEACE,wBRu4BN,CQn4BE,2IAEE,oCRq4BJ,CQj3BE,uBAEE,mBACA,URk3BJ,CQ7pFE,qDAnBA,gGRmrFF,CQhqFE,mEAnBA,iFRsrFF,CQh3BE,gCACE,wBRk3BJ,CQj0BE,iCACE,+BRm0BJ,CQh0BE,qCACE,YRk0BJ,CQ/zBE,0CAGE,wBR+zBJ,CQ5zBE,qCACE,wBR8zBJ,CQ1zBI,sJACE,wBR4zBN,CQzzBI,oJACE,qBR2zBN,CQxzBI,gJACE,wBR0zBN,CQnzBM,0KACE,wBRqzBR,CQhzBM,mFACE,oBRkzBR,CQ9yBI,wDACE,wBRgzBN,CQ1yBE,+CACE,qBR4yBJ,CQvyBI,6LACE,kBR0yBN,CQvyBI,2LACE,eR0yBN,CQvyBI,uLACE,kBR0yBN,CQxuBE,yCA1CA,wBAuCwB,CAtCxB,URqxBF,CQnxBE,0DACE,UAoCsB,CAnCtB,URqxBJ,CQ5uBM,wEAlgEJ,gGRivFF,CQ3uBM,wFACE,WR6uBR,CQzuBI,2DACE,UR2uBN,CQxuBI,+CACE,eR0uBN,CQruBI,uEAjEF,wBAwBgE,CAvBhE,qBRyyBF,CQvyBE,wFACE,qBAoBuB,CAnBvB,URyyBJ,CQpxBE,2FATA,+BRgyBF,CQ5uBI,oEArEF,wBAwBgE,CAvBhE,URozBF,CQlzBE,qFACE,UAoBuB,CAnBvB,URozBJ,CQ/xBE,wFATA,mCR2yBF,CQnvBI,sEAzEF,qBAwBgE,CAvBhE,qBR+zBF,CQ7zBE,uFACE,qBAoBuB,CAnBvB,UR+zBJ,CQ1yBE,0FATA,+BRszBF,CQpuBE,wBACE,kBRsuBJ,CQnuBE,yRAIE,kBRquBJ,CQluBE,sKAEE,uCRouBJ,CQjuBE,8BACE,wBRmuBJ,CQhuBE,qDACE,URkuBJ,CQtqBE,iCACE,qBRwqBJ,CQnqBE,sKAGE,URqqBJ,CQlqBE,wCACE,wBRoqBJ,CQjqBE,sDACE,8BRmqBJ,CQhqBE,sCACE,wBRkqBJ,CQ/pBE,6CACE,WACA,wBRiqBJ,CQ9pBE,0GACE,wBRgqBJ,CQ1pBI,wYACE,oCR8pBN,CQ1pBE,uEAGE,+BR0pBJ,CQvpBE,mGAII,+BRspBN,CQruBE,yCACE,yBACA,qBRuuBJ,CQpuBE,qEAII,oCRmuBN,CQ1tBE,iEACE,0CR4tBJ,CQnpBE,qCAxsEA,kGA0sEE,yBACA,URqpBJ,CQpvBE,4EACE,sBACA,qBRsvBJ,CQnvBE,wGAII,oCRkvBN,CQzuBE,oGACE,0CR2uBJ,CQ9vBE,0EACE,yBACA,URgwBJ,CQ7vBE,sGAII,mCR4vBN,CQnvBE,kGACE,+BRqvBJ,CQ9pBE,2CAttEA,iFRu3FF,CQ7pBE,2CACE,aR+pBJ,CQ7pBI,sDACE,UR+pBN,CQ5pBI,oDACE,aR8pBN,CQtnBE,mCA1wEA,0GA4wEE,mBACA,URwnBJ,CQsnDE,0BACE,oCRpnDJ,CQunDE,mCACE,sCRrnDJ,CQ3mBE,kCAEE,mBACA,UR4mBJ,CQ53FE,gEAnBA,gGRk5FF,CQ5mBE,6BACE,oCR8mBJ,CQvmBM,0UACE,8BRymBR,CQlmBE,oBACE,iHAEE,kBRmmBJ,CACF,CQhmBE,+CACE,URkmBJ,CQ/lBE,iGAEE,wBRimBJ,CQ9lBE,6DACE,wBRgmBJ,CQ9lBI,oMAEE,aRgmBN,CQ0vCE,0DACE,wBRrvCJ,CQwvCE,+DACE,aRtvCJ,CQwvCI,0EACE,URtvCN,CQyvCI,wEACE,aRvvCN,CQ2vCE,0DACE,URzvCJ,CQ4vCE,oCACE,qBR1vCJ,CQ8vCI,gEACE,wBR5vCN,CQ8vCM,2EACE,qBR5vCR,CQ+vCM,yEACE,wBR7vCR,CQmwCI,yHACE,aRjwCN,CQowCI,oIACE,URlwCN,CQixCM,2YAEE,aRzwCR,CQ6wCI,iKAEE,wBR3wCN,CQ+wCE,wBACE,aR7wCJ,CQo3BI,8HACE,wBR/2BN,CQk3BI,yEACE,mCRh3BN,CQm3BI,iGAx5CF,kGACA,yBACA,0BRwiBF,CQkpCI,2EACE,mCRhpCN,CQmpCI,mGAhsDF,kGACA,yBACA,0BRgjBF,CQuvBI,kEACE,mCRrvBN,CQwvBI,0FACE,oCRtvBN,CQyvBI,8EACE,mCRvvBN,CQ2vBM,2FACE,wBRzvBR,CQ4vBM,sGACE,4BR1vBR,CQigCI,wEACE,wBR//BN,CQkgCI,8EACE,URhgCN,CQogCM,0FACE,aRlgCR,CQqgCM,qGACE,URngCR,CQ6gCM,+NACE,aRxgCR,CQ6gCM,8FACE,wBR3gCR,CQ8gCM,gGACE,yBR5gCR,CQjnBI,mCACE,aRmnBN,CQhnBI,kCACE,URknBN,CQ/mBI,gCACE,aRinBN,CQjiBE,gFACE,wBRmiBJ,CQhiBE,iJAEE,wBRkiBJ,CQ/hBE,gCACE,mBRiiBJ,CQplBE,uDAsDI,wBRiiBN,CQvlBE,6CAsDI,wBRiiBN,CQnlBE,kDAkDI,wBRoiBN,CQllBE,2DA8CI,wBRuiBN,CQjlBE,sDA0CI,wBR0iBN,CQjiBM,uCACE,qBRmiBR,CQhiBM,gDACE,qBRkiBR,CQ7hBE,4CACE,gBR+hBJ,CQ5hBE,kGAEE,mBR8hBJ,CQ3hBE,uGACE,aR6hBJ,CQ3fI,wFACE,URggBN,CQ7fI,2CACE,wBR+fN,CQ3fE,qCACE,qBR6fJ,CQvfI,8QACE,8BR6fN,CQxfI,sJACE,8BR0fN,CQzbE,6BAEE,kBR0bJ,CQllGE,2DAnBA,iGRwmGF,CQ1bE,4BACE,uBACA,UR4bJ,CQzbM,kFACE,wBR2bR,CQtbE,iGAEE,URwbJ,CQjbI,2OACE,8BRsbN,CQ9ZE,4BACE,kBRgaJ,CQ7ZE,sFAEE,wBR+ZJ,CQ5ZE,4EAEE,0BACA,2BR8ZJ,CQ3ZE,mEAEE,yBR6ZJ,CQzZI,2PAIE,+BR2ZN,CQnYE,0CACE,YRqYJ,CQlYE,sCACE,wBRoYJ,CQjYE,0CACE,wBRmYJ,CQ/XI,uEACE,YRiYN,CQ9XI,mEACE,wBRgYN,CQ7XI,uEACE,qBR+XN,CQ1XI,qEACE,YR4XN,CQzXI,iEACE,wBR2XN,CQxXI,qEACE,wBR0XN,CQxWI,2EACE,cR0WN,CQvWI,iGACE,WRyWN,CQtWI,6FACE,cRwWN,CQzUE,qCACE,+BR2UJ,CQ/VE,qFACE,oBRiWJ,CQ9VE,+VAIE,wBR8VJ,CQtWE,oFACE,iBRwWJ,CQrWE,2VAIE,qBRqWJ,CQ7WE,kFACE,oBR+WJ,CQ5WE,mVAIE,wBR4WJ,CQ5UM,sKAEE,+BR8UR,CQ3UM,kKAEE,mCR6UR,CQ1UM,2EACE,wBR4UR,CQtUI,mDACE,qBRwUN,CQ/SE,+BACE,URiTJ,CQ1SE,yFACE,wBR+SJ,CQ5SE,+BACE,wBR8SJ,CQ3SE,+BACE,kBR6SJ,CQrtGE,6DAnBA,iGR2uGF,CQ7SI,kFACE,8BR+SN,CQzSM,uEACE,aR2SR,CQxSM,sEACE,UR0SR,CQlSI,kJACE,aRuSN,CQpSI,+EACE,wBRsSN,CQnQE,mCACE,wBALmC,CAMnC,URqQJ,CQlQE,yBACE,wBAXwB,CAYxB,URoQJ,CQlQI,yCACE,wBRoQN,CQjQI,+CAvgGF,wGR2wGF,CQ7PE,8BACE,0CR+PJ,CQvPE,qFACE,yCAhCmB,CAiCnB,iBR6PJ,CQ3PI,uDACE,iBACA,0CR6PN,CQzPE,mDAQI,oCRoPN,CQhOI,mEACE,qBRkON,CQ/NI,iEAGE,qCR+NN,CQ5NI,+DAGE,qBR4NN,CQzOI,+EACE,wBR2ON,CQxOI,6EAGE,qCRwON,CQrOI,2EAGE,wBRqON,CQlPI,4EACE,wBRoPN,CQjPI,0EAGE,oCRiPN,CQ9OI,wEAGE,wBR8ON,CQ1MI,qEAGE,qBR0MN,CQtME,qCArnGA,iGAunGE,wBRwMJ,CQrME,mCACE,mCRuMJ,CQ7JE,0CACE,mCR+JJ,CQ3LE,+IAGE,wBR6LJ,CQ1LE,uDACE,qBR4LJ,CQnME,4IAGE,qBRqMJ,CQlME,sDACE,qBRoMJ,CQ3ME,sIAGE,wBR6MJ,CQ1ME,oDACE,UR4MJ,CQxKE,oCAGE,oCRwKJ,CQhJM,oWACE,mCR2JR,CQrJI,0DAGE,oCRqJN,CQ3IM,8KAEE,qBR6IR,CQzIQ,sMAEE,mCR2IV,CQrIM,0FACE,+BAvFiB,CAwFjB,4BRuIR,CQ9HQ,obACE,+BRmIV,CQ7HE,6DACE,+BR+HJ,CQtHE,sDACE,sHAIA,6HRqHJ,CQ3GE,oDACE,sHR6GJ,CQ7EI,yIAGE,oCR6EN,CQvEI,oBACE,oCACE,eRyEN,CACF,CQtEI,+FAIE,wBRsEN,CQnEI,6CAGE,oCACA,qBRmEN,CQhEI,sKAGE,yBACA,qBRkEN,CQ/DI,yDACE,6BACA,aRiEN,CQ9DI,oEACE,URgEN,CQ7DI,mEACE,aR+DN,CQ3DE,wEACE,wBR6DJ,CQ1DE,+CACE,qCR4DJ,CQzDE,+IAGE,oCR2DJ,CQvBE,oCAYI,aRcN,CQQE,2DAEE,2CRNJ,CQUI,yHAEE,wCAVY,CAWZ,kBRRN,CQYE,uDACE,URVJ,CQYI,yFACE,wBRVN,CQcE,gDACE,iBRZJ,CQeE,oFACE,+BRbJ,CQiBE,0HAEE,mBACA,eRfJ,CQ2DM,wxBACE,qCRrDR,CQ0CE,4GACE,wBRxCJ,CQuCE,0JACE,gCRrCJ,CQ8CM,gxBACE,oCRxCR,CQ6BE,0GACE,qBR3BJ,CQ0BE,sJACE,gCRxBJ,CQiCM,gwBACE,qCR3BR,CQgBE,sGACE,wBRdJ,CQaE,8IACE,qBRXJ,CQoBM,g3BACE,qCRdR,CQsBE,4aACE,wBRpBJ,CQwBE,0QACE,qBRtBJ,CQwBI,8UACE,oBRtBN,CQ2BE,8KACE,4BRzBJ,CQ4BE,sPACE,2BR1BJ,CQ+BE,gJACE,gCR7BJ,CQLM,w2BACE,oCRWR,CQHE,saACE,qBRKJ,CQDE,sQACE,qBRGJ,CQDI,0UACE,oBRGN,CQEE,4KACE,4BRAJ,CQGE,oPACE,2BRDJ,CQME,8IACE,gCRJJ,CQ9BM,w1BACE,qCRoCR,CQ5BE,0ZACE,wBR8BJ,CQ1BE,8PACE,UR4BJ,CQ1BI,kUACE,wBR4BN,CQvBE,wKACE,iBRyBJ,CQtBE,gPACE,+BRwBJ,CQnBE,0IACE,oCRqBJ,CQkCE,0BACE,mBACA,URhCJ,CQkCI,sCAnCF,mBACA,qBRIF,CQkCI,qCAvCF,gBACA,qBRQF,CQkCI,mCA3CF,mBACA,URYF,CQRE,mKAGE,6BRUJ,CQPE,6QAKE,aRSJ,CQNE,6CACE,wBRQJ,CQoDE,0BACE,4BRlDJ,CQixBE,uBACE,kBR/wBJ,CQkxBE,+DAEE,URhxBJ,CQsEE,sCAGE,sBACA,mBAxrHF,kGRmnHF,CQ0EE,yCACE,aRxEJ","file":"styles.c1815e7ab0bba195b2b9.css","sourcesContent":["/*\n * Container style\n */\n.ps {\n  overflow: hidden !important;\n  overflow-anchor: none;\n  -ms-overflow-style: none;\n  touch-action: auto;\n  -ms-touch-action: auto;\n}\n\n/*\n * Scrollbar rail styles\n */\n.ps__rail-x {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  height: 15px;\n  /* there must be 'bottom' or 'top' for ps__rail-x */\n  bottom: 0px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-y {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  width: 15px;\n  /* there must be 'right' or 'left' for ps__rail-y */\n  right: 0;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps--active-x > .ps__rail-x,\n.ps--active-y > .ps__rail-y {\n  display: block;\n  background-color: transparent;\n}\n\n.ps:hover > .ps__rail-x,\n.ps:hover > .ps__rail-y,\n.ps--focus > .ps__rail-x,\n.ps--focus > .ps__rail-y,\n.ps--scrolling-x > .ps__rail-x,\n.ps--scrolling-y > .ps__rail-y {\n  opacity: 0.6;\n}\n\n.ps .ps__rail-x:hover,\n.ps .ps__rail-y:hover,\n.ps .ps__rail-x:focus,\n.ps .ps__rail-y:focus,\n.ps .ps__rail-x.ps--clicking,\n.ps .ps__rail-y.ps--clicking {\n  background-color: #eee;\n  opacity: 0.9;\n}\n\n/*\n * Scrollbar thumb styles\n */\n.ps__thumb-x {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, height .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\n  height: 6px;\n  /* there must be 'bottom' for ps__thumb-x */\n  bottom: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__thumb-y {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, width .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\n  width: 6px;\n  /* there must be 'right' for ps__thumb-y */\n  right: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-x:hover > .ps__thumb-x,\n.ps__rail-x:focus > .ps__thumb-x,\n.ps__rail-x.ps--clicking .ps__thumb-x {\n  background-color: #999;\n  height: 11px;\n}\n\n.ps__rail-y:hover > .ps__thumb-y,\n.ps__rail-y:focus > .ps__thumb-y,\n.ps__rail-y.ps--clicking .ps__thumb-y {\n  background-color: #999;\n  width: 11px;\n}\n\n/* MS supports */\n@supports (-ms-overflow-style: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n","/*!\n * FilePond 4.13.0\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n.filepond--assistant{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.filepond--browser.filepond--browser{position:absolute;margin:0;padding:0;left:1em;top:1.75em;width:calc(100% - 2em);opacity:0;font-size:0}.filepond--data{position:absolute;width:0;height:0;padding:0;margin:0;border:none;visibility:hidden;pointer-events:none;contain:strict}.filepond--drip{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;opacity:.1;pointer-events:none;border-radius:.5em;background:rgba(0,0,0,.01)}.filepond--drip-blob{-webkit-transform-origin:center center;transform-origin:center center;width:8em;height:8em;margin-left:-4em;margin-top:-4em;background:#292625;border-radius:50%}.filepond--drip-blob,.filepond--drop-label{position:absolute;top:0;left:0;will-change:transform,opacity}.filepond--drop-label{right:0;margin:0;color:#4f4f4f;display:flex;justify-content:center;align-items:center;height:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--drop-label.filepond--drop-label label{display:block;margin:0;padding:.5em}.filepond--drop-label label{cursor:default;font-size:.875em;font-weight:400;text-align:center;line-height:1.5}.filepond--label-action{text-decoration:underline;-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto;-webkit-text-decoration-color:#a7a4a4;text-decoration-color:#a7a4a4;cursor:pointer}.filepond--root[data-disabled] .filepond--drop-label label{opacity:.5}.filepond--file-action-button.filepond--file-action-button{font-size:1em;width:1.625em;height:1.625em;font-family:inherit;line-height:inherit;margin:0;padding:0;border:none;outline:none;will-change:transform,opacity}.filepond--file-action-button.filepond--file-action-button span{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.filepond--file-action-button.filepond--file-action-button svg{width:100%;height:100%}.filepond--file-action-button.filepond--file-action-button:after{position:absolute;left:-.75em;right:-.75em;top:-.75em;bottom:-.75em;content:\"\"}.filepond--file-action-button{cursor:auto;color:#fff;border-radius:50%;background-color:rgba(0,0,0,.5);background-image:none;box-shadow:0 0 0 0 hsla(0,0%,100%,0);transition:box-shadow .25s ease-in}.filepond--file-action-button:focus,.filepond--file-action-button:hover{box-shadow:0 0 0 .125em hsla(0,0%,100%,.9)}.filepond--file-action-button[disabled]{color:hsla(0,0%,100%,.5);background-color:rgba(0,0,0,.25)}.filepond--file-info{position:static;display:flex;flex-direction:column;align-items:flex-start;flex:1;margin:0 .5em 0 0;min-width:0;will-change:transform,opacity;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--file-info *{margin:0}.filepond--file-info .filepond--file-info-main{font-size:.75em;line-height:1.2;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%}.filepond--file-info .filepond--file-info-sub{font-size:.625em;opacity:.5;transition:opacity .25s ease-in-out;white-space:nowrap}.filepond--file-info .filepond--file-info-sub:empty{display:none}.filepond--file-status{position:static;display:flex;flex-direction:column;align-items:flex-end;flex-grow:0;flex-shrink:0;margin:0;min-width:2.25em;text-align:right;will-change:transform,opacity;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.filepond--file-status *{margin:0;white-space:nowrap}.filepond--file-status .filepond--file-status-main{font-size:.75em;line-height:1.2}.filepond--file-status .filepond--file-status-sub{font-size:.625em;opacity:.5;transition:opacity .25s ease-in-out}.filepond--file-wrapper.filepond--file-wrapper{border:none;margin:0;padding:0;min-width:0;height:100%}.filepond--file-wrapper.filepond--file-wrapper>legend{position:absolute;overflow:hidden;height:1px;width:1px;padding:0;border:0;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);white-space:nowrap}.filepond--file{position:static;display:flex;height:100%;align-items:flex-start;padding:.5625em;color:#fff;border-radius:.5em}.filepond--file .filepond--file-status{margin-left:auto;margin-right:2.25em}.filepond--file .filepond--processing-complete-indicator{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:3}.filepond--file .filepond--file-action-button,.filepond--file .filepond--processing-complete-indicator,.filepond--file .filepond--progress-indicator{position:absolute}.filepond--file [data-align*=left]{left:.5625em}.filepond--file [data-align*=right]{right:.5625em}.filepond--file [data-align*=center]{left:calc(50% - .8125em)}.filepond--file [data-align*=bottom]{bottom:1.125em}.filepond--file [data-align=center]{top:calc(50% - .8125em)}.filepond--file .filepond--progress-indicator{margin-top:.1875em}.filepond--file .filepond--progress-indicator[data-align*=right]{margin-right:.1875em}.filepond--file .filepond--progress-indicator[data-align*=left]{margin-left:.1875em}[data-filepond-item-state*=error] .filepond--file-info,[data-filepond-item-state*=invalid] .filepond--file-info,[data-filepond-item-state=cancelled] .filepond--file-info{margin-right:2.25em}[data-filepond-item-state=processing-complete] .filepond--action-revert-item-processing svg{-webkit-animation:fall .5s linear .125s both;animation:fall .5s linear .125s both}[data-filepond-item-state=processing-complete] .filepond--file-status-sub{opacity:.5}[data-filepond-item-state=processing-complete] .filepond--file-info-sub,[data-filepond-item-state=processing-complete] .filepond--processing-complete-indicator:not([style*=hidden])~.filepond--file-status .filepond--file-status-sub{opacity:0}[data-filepond-item-state=processing-complete] .filepond--action-revert-item-processing~.filepond--file-info .filepond--file-info-sub{opacity:.5}[data-filepond-item-state*=error] .filepond--file-wrapper,[data-filepond-item-state*=error] .filepond--panel,[data-filepond-item-state*=invalid] .filepond--file-wrapper,[data-filepond-item-state*=invalid] .filepond--panel{-webkit-animation:shake .65s linear both;animation:shake .65s linear both}[data-filepond-item-state*=busy] .filepond--progress-indicator svg{-webkit-animation:spin 1s linear infinite;animation:spin 1s linear infinite}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes shake{10%,90%{-webkit-transform:translateX(-.0625em);transform:translateX(-.0625em)}20%,80%{-webkit-transform:translateX(.125em);transform:translateX(.125em)}30%,50%,70%{-webkit-transform:translateX(-.25em);transform:translateX(-.25em)}40%,60%{-webkit-transform:translateX(.25em);transform:translateX(.25em)}}@keyframes shake{10%,90%{-webkit-transform:translateX(-.0625em);transform:translateX(-.0625em)}20%,80%{-webkit-transform:translateX(.125em);transform:translateX(.125em)}30%,50%,70%{-webkit-transform:translateX(-.25em);transform:translateX(-.25em)}40%,60%{-webkit-transform:translateX(.25em);transform:translateX(.25em)}}@-webkit-keyframes fall{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}70%{opacity:1;-webkit-transform:scale(1.1);transform:scale(1.1);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}to{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes fall{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}70%{opacity:1;-webkit-transform:scale(1.1);transform:scale(1.1);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}to{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.filepond--hopper[data-hopper-state=drag-over]>*{pointer-events:none}.filepond--hopper[data-hopper-state=drag-over]:after{content:\"\";position:absolute;left:0;top:0;right:0;bottom:0;z-index:100}.filepond--progress-indicator{z-index:103}.filepond--file-action-button{z-index:102}.filepond--file-status{z-index:101}.filepond--file-info{z-index:100}.filepond--item{position:absolute;top:0;left:0;right:0;z-index:1;padding:0;margin:.25em;will-change:transform,opacity}.filepond--item>.filepond--panel{z-index:-1}.filepond--item>.filepond--panel .filepond--panel-bottom{box-shadow:0 .0625em .125em -.0625em rgba(0,0,0,.25)}.filepond--item>.filepond--file-wrapper,.filepond--item>.filepond--panel{transition:opacity .15s ease-out}.filepond--item[data-drag-state]{cursor:-webkit-grab;cursor:grab}.filepond--item[data-drag-state]>.filepond--panel{transition:box-shadow .125s ease-in-out;box-shadow:0 0 0 transparent}.filepond--item[data-drag-state=drag]{cursor:-webkit-grabbing;cursor:grabbing}.filepond--item[data-drag-state=drag]>.filepond--panel{box-shadow:0 .125em .3125em rgba(0,0,0,.325)}.filepond--item[data-drag-state]:not([data-drag-state=idle]){z-index:2}.filepond--item-panel{background-color:#64605e}[data-filepond-item-state=processing-complete] .filepond--item-panel{background-color:#369763}[data-filepond-item-state*=error] .filepond--item-panel,[data-filepond-item-state*=invalid] .filepond--item-panel{background-color:#c44e47}.filepond--item-panel{border-radius:.5em;transition:background-color .25s}.filepond--list-scroller{position:absolute;top:0;left:0;right:0;margin:0;will-change:transform}.filepond--list-scroller[data-state=overflow]{overflow-y:scroll;overflow-x:hidden;-webkit-overflow-scrolling:touch;-webkit-mask:linear-gradient(180deg,#000 calc(100% - .5em),transparent);mask:linear-gradient(180deg,#000 calc(100% - .5em),transparent)}.filepond--list-scroller[data-state=overflow] .filepond--list{bottom:0;right:0}.filepond--list-scroller::-webkit-scrollbar{background:transparent}.filepond--list-scroller::-webkit-scrollbar:vertical{width:1em}.filepond--list-scroller::-webkit-scrollbar:horizontal{height:0}.filepond--list-scroller::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.3);border-radius:99999px;border:.3125em solid transparent;background-clip:content-box}.filepond--list.filepond--list{position:absolute;top:0;margin:0;padding:0;list-style-type:none;will-change:transform}.filepond--list{left:.75em;right:.75em}.filepond--root[data-style-panel-layout~=integrated]{width:100%;height:100%;max-width:none;margin:0}.filepond--root[data-style-panel-layout~=circle] .filepond--panel-root,.filepond--root[data-style-panel-layout~=integrated] .filepond--panel-root{border-radius:0}.filepond--root[data-style-panel-layout~=circle] .filepond--panel-root>*,.filepond--root[data-style-panel-layout~=integrated] .filepond--panel-root>*{display:none}.filepond--root[data-style-panel-layout~=circle] .filepond--drop-label,.filepond--root[data-style-panel-layout~=integrated] .filepond--drop-label{bottom:0;height:auto;display:flex;justify-content:center;align-items:center;z-index:7}.filepond--root[data-style-panel-layout~=circle] .filepond--item-panel,.filepond--root[data-style-panel-layout~=integrated] .filepond--item-panel{display:none}.filepond--root[data-style-panel-layout~=compact] .filepond--list-scroller,.filepond--root[data-style-panel-layout~=integrated] .filepond--list-scroller{overflow:hidden;height:100%;margin-top:0;margin-bottom:0}.filepond--root[data-style-panel-layout~=compact] .filepond--list,.filepond--root[data-style-panel-layout~=integrated] .filepond--list{left:0;right:0;height:100%}.filepond--root[data-style-panel-layout~=compact] .filepond--item,.filepond--root[data-style-panel-layout~=integrated] .filepond--item{margin:0}.filepond--root[data-style-panel-layout~=compact] .filepond--file-wrapper,.filepond--root[data-style-panel-layout~=integrated] .filepond--file-wrapper{height:100%}.filepond--root[data-style-panel-layout~=compact] .filepond--drop-label,.filepond--root[data-style-panel-layout~=integrated] .filepond--drop-label{z-index:7}.filepond--root[data-style-panel-layout~=circle]{border-radius:99999rem;overflow:hidden}.filepond--root[data-style-panel-layout~=circle]>.filepond--panel{border-radius:inherit}.filepond--root[data-style-panel-layout~=circle] .filepond--file-info,.filepond--root[data-style-panel-layout~=circle] .filepond--file-status,.filepond--root[data-style-panel-layout~=circle]>.filepond--panel>*{display:none}.filepond--panel-root{border-radius:.5em;background-color:#f1f0ef}.filepond--panel{position:absolute;left:0;top:0;right:0;margin:0;height:100%!important;pointer-events:none}.filepond-panel:not([data-scalable=false]){height:auto!important}.filepond--panel[data-scalable=false]>div{display:none}.filepond--panel[data-scalable=true]{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;background-color:transparent!important;border:none!important}.filepond--panel-bottom,.filepond--panel-center,.filepond--panel-top{position:absolute;left:0;top:0;right:0;margin:0;padding:0}.filepond--panel-bottom,.filepond--panel-top{height:.5em}.filepond--panel-top{border-bottom-left-radius:0!important;border-bottom-right-radius:0!important;border-bottom:none!important}.filepond--panel-top:after{content:\"\";position:absolute;height:2px;left:0;right:0;bottom:-1px;background-color:inherit}.filepond--panel-bottom,.filepond--panel-center{will-change:transform;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform-origin:left top;transform-origin:left top;-webkit-transform:translate3d(0,.5em,0);transform:translate3d(0,.5em,0)}.filepond--panel-bottom{border-top-left-radius:0!important;border-top-right-radius:0!important;border-top:none!important}.filepond--panel-bottom:before{content:\"\";position:absolute;height:2px;left:0;right:0;top:-1px;background-color:inherit}.filepond--panel-center{height:100px!important;border-top:none!important;border-bottom:none!important;border-radius:0!important}.filepond--panel-center:not([style]){visibility:hidden}.filepond--progress-indicator{position:static;width:1.25em;height:1.25em;color:#fff;margin:0;pointer-events:none;will-change:transform,opacity}.filepond--progress-indicator svg{width:100%;height:100%;vertical-align:top;transform-box:fill-box}.filepond--progress-indicator path{fill:none;stroke:currentColor}.filepond--list-scroller{z-index:6}.filepond--drop-label{z-index:5}.filepond--drip{z-index:3}.filepond--root>.filepond--panel{z-index:2}.filepond--browser{z-index:1}.filepond--root{box-sizing:border-box;position:relative;margin-bottom:1em;font-size:1rem;line-height:normal;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:450;text-align:left;text-rendering:optimizeLegibility;direction:ltr;contain:layout style size}.filepond--root *{box-sizing:inherit;line-height:inherit}.filepond--root :not(text){font-size:inherit}.filepond--root[data-disabled]{pointer-events:none}.filepond--root[data-disabled] .filepond--list-scroller{pointer-events:all}.filepond--root[data-disabled] .filepond--list{pointer-events:none}.filepond--root .filepond--drop-label{min-height:4.75em}.filepond--root .filepond--list-scroller{margin-top:1em;margin-bottom:1em}","/*!\n * FilePondPluginImagePreview 4.6.1\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n.filepond--image-preview-markup {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n\n.filepond--image-preview-wrapper {\n  z-index: 2;\n}\n\n.filepond--image-preview-overlay {\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  min-height: 5rem;\n  max-height: 7rem;\n  margin: 0;\n  opacity: 0;\n  z-index: 2;\n  pointer-events: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.filepond--image-preview-overlay svg {\n  width: 100%;\n  height: auto;\n  color: inherit;\n  max-height: inherit;\n}\n\n.filepond--image-preview-overlay-idle {\n  mix-blend-mode: multiply;\n  color: rgba(40, 40, 40, 0.85);\n}\n\n.filepond--image-preview-overlay-success {\n  mix-blend-mode: normal;\n  color: #369763;\n}\n\n.filepond--image-preview-overlay-failure {\n  mix-blend-mode: normal;\n  color: #c44e47;\n}\n\n@supports (-webkit-marquee-repetition: infinite) and\n  ((-o-object-fit: fill) or (object-fit: fill)) {\n  .filepond--image-preview-overlay-idle {\n    mix-blend-mode: normal;\n  }\n}\n\n.filepond--image-preview-wrapper {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  height: 100%;\n  margin: 0;\n  border-radius: 0.45em;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.01);\n}\n\n.filepond--image-preview {\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  pointer-events: none;\n  background: #222;\n  will-change: transform, opacity;\n}\n.filepond--image-preview[data-transparency-indicator='grid'] img,\n.filepond--image-preview[data-transparency-indicator='grid'] canvas {\n  background-color: #fff;\n  background-image: url(\"data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg' fill='%23eee'%3E%3Cpath d='M0 0 H50 V50 H0'/%3E%3Cpath d='M50 50 H100 V100 H50'/%3E%3C/svg%3E\");\n  background-size: 1.25em 1.25em;\n}\n\n.filepond--image-clip {\n  position: relative;\n  overflow: hidden;\n  margin: 0 auto;\n}\n\n.filepond--image-bitmap,\n.filepond--image-vector {\n  position: absolute;\n  left: 0;\n  top: 0;\n  will-change: transform;\n}\n\n.filepond--root[data-style-panel-layout~='integrated']\n  .filepond--image-preview-wrapper {\n  border-radius: 0;\n}\n\n.filepond--root[data-style-panel-layout~='integrated']\n  .filepond--image-preview {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--image-preview-wrapper {\n  border-radius: 99999rem;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--image-preview-overlay {\n  top: auto;\n  bottom: 0;\n  -webkit-transform: scaleY(-1);\n  transform: scaleY(-1);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  .filepond--file-action-button[data-align*='bottom']:not([data-align*='center']) {\n  margin-bottom: 0.325em;\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  [data-align*='left'] {\n  left: calc(50% - 3em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--file\n  [data-align*='right'] {\n  right: calc(50% - 3em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='left'],\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='right'] {\n  margin-bottom: calc(0.325em + 0.1875em);\n}\n\n.filepond--root[data-style-panel-layout~='circle']\n  .filepond--progress-indicator[data-align*='bottom'][data-align*='center'] {\n  margin-top: 0;\n  margin-bottom: 0.1875em;\n  margin-left: 0.1875em;\n}\n","@import '../variables';\n@import '../mixins';\n@import '../functions';\n\n@keyframes line-scale {\n  0% {\n    transform: scaley(1.0);\n  }\n  50% {\n    transform: scaley(0.4);\n  }\n  100% {\n    transform: scaley(1.0);\n  }\n}\n\n@mixin line-scale($n:5) {\n  @for $i from 1 through $n {\n    > div:nth-child(#{$i}) {\n      animation: line-scale 1s delay(0.1s, $n, $i) infinite cubic-bezier(.2,.68,.18,1.08);\n    }\n  }\n}\n\n.line-scale {\n  @include line-scale();\n\n  > div {\n    @include lines();\n    @include global-animation();\n\n    display: inline-block;\n  }\n}\n","/* You can add global styles to this file, and also import other style files */\n\n@import '~@angular/material/theming';\n@import './styles/typography';\n@import './app-theme';\n@import './styles/preloader';\n@import './styles/base';\n@import './styles/global';\n\n/* Include material core styles.\n-------------------------------------------------- */\n@include mat-core($custom-typography);\n\n/* Define the light theme.\n-------------------------------------------------- */\n$primary: mat-palette($mat-indigo);\n$accent: mat-palette($mat-pink, A200, A100, A400);\n\n$theme: mat-light-theme($primary, $accent);\n@include angular-material-theme($theme);\n@include custom-components-theme($theme);\n\n/* Used by Home only\n-------------------------------------------------- */\n$alt-primary: mat-palette($mat-yellow);\n$alt-accent: mat-palette($mat-grey, 200);\n$alt-theme: mat-dark-theme($alt-primary, $alt-accent);\n\n.alternative {\n  @include angular-material-theme($alt-theme);\n  //@include custom-components-theme($alt-theme);\n}\n\n/* 3rd party\n-------------------------------------------------- */\n@import '~perfect-scrollbar/css/perfect-scrollbar.css';\n@import '~filepond/dist/filepond.min.css';\n@import '~filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n","@mixin global-bg() {\n  background-color: $primary-color;\n}\n\n@mixin global-animation() {\n  animation-fill-mode: both;\n}\n\n@mixin balls() {\n  @include global-bg();\n\n  width: $ball-size;\n  height: $ball-size;\n  border-radius: 100%;\n  margin: $margin;\n}\n\n@mixin lines() {\n  @include global-bg();\n\n  width: $line-width;\n  height: $line-height;\n  border-radius: 2px;\n  margin: $margin;\n}\n","$primary-color: #fff !default;\n$ball-size: 15px !default;\n$margin: 2px !default;\n$line-height: 35px !default;\n$line-width: 4px !default;\n\n","@import '../variables';\n@import '../mixins';\n@import '../functions';\n\n@keyframes line-scale-pulse-out {\n  0% {\n    transform: scaley(1.0);\n  }\n  50% {\n    transform: scaley(0.4);\n  }\n  100% {\n    transform: scaley(1.0);\n  }\n}\n\n.line-scale-pulse-out {\n\n  > div {\n    @include lines();\n    @include global-animation();\n\n    display: inline-block;\n    animation: line-scale-pulse-out 0.9s delay(0.2s, 3, 0) infinite cubic-bezier(.85,.25,.37,.85);\n\n    &:nth-child(2), &:nth-child(4) {\n      animation-delay: delay(0.2s, 3, 1) !important;\n    }\n\n    &:nth-child(1), &:nth-child(5) {\n      animation-delay: delay(0.2s, 3, 2) !important;\n    }\n\n  }\n}\n","@import 'constants';\n\n/* PRE LOADER\n-------------------------------------------------- */\n@import '~loaders.css/src/animations/line-scale';\n@import '~loaders.css/src/animations/line-scale-pulse-out';\n\n.loader {\n  //background: $auxiliary;\n  background: $loader_bg;\n  display: table;\n  height: 100%;\n  max-width: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 99999;\n\n  .loader-inner {\n    backface-visibility: hidden;\n    display: table-cell;\n    overflow: hidden;\n    text-align: center;\n    vertical-align: middle;\n  }\n}\n","@import '~@angular/material/theming';\n\n$small-breakpoint-width: 720px;\n\n/* For desktop, the content should be aligned with the page title. */\n$content-padding-side: 70px;\n$content-padding-side-xs: 15px;\n\n/* material unexposed constants*/\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-height-mobile-portrait: 56px !default;\n$mat-toolbar-height-mobile-landscape: 48px !default;\n\n/* Form-Control\n-------------------------------------------------- */\n//** Placeholder text color\n//$input-color-placeholder:       #636c72 !default;\n\n/* PRE LOADER\n-------------------------------------------------- */\n//$primary-color: #fff !default;\n//$ball-size: 15px !default;\n//$margin: 2px !default;\n//$line-height: 35px !default;\n//$line-width: 4px !default;\n$loader_bg: #303030;\n\n/* Form-Control\n-------------------------------------------------- */\n//** Placeholder text color\n$input-color-placeholder: #636c72 !default;\n\n/* btn\n-------------------------------------------------- */\n","@import '~@angular/material/theming';\n\n$config: mat-typography-config();\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\nbody {\n  font-family: mat-font-family($config);\n}\n",".default-button[mat-button],\n.default-button[mat-raised-button] {\n  text-transform: uppercase;\n}\n\n.default-primary-header {\n  padding-left: 20px;\n\n  h1 {\n    font-weight: 300;\n    margin: 0;\n    padding: 28px 8px;\n    font-size: 20px !important;\n  }\n}\n\ncode {\n  white-space: nowrap;\n  border-radius: 10px;\n  padding: 0 8px 1px 8px;\n}\n\n.default-markdown-pre code {\n  font-size: 100%;\n}\n\n// These styles are for controlling SVGs without using the ::ng-deep selector\n\n.default-component-category-list-card-image svg {\n  width: 100%;\n}\n\n.default-footer-angular-logo svg {\n  height: 50px;\n}\n\n.default-angular-logo svg {\n  height: 26px;\n  margin: 0 4px 3px 0;\n  vertical-align: middle;\n}\n\n.mylogin-no-padding-dialog .mat-dialog-container {\n  padding: 0;\n}\n","// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map_get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', text);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map_get(map-get($theme, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n   @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    $color: mat-color($foreground, hint-text);\n\n    @if (type-of($color) == color) {\n      border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n    }\n    @else {\n      // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n      // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n      // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n      // to it already and we don't want them to stack on top of each other.\n      opacity: 0.5;\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn), text);\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($accent, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  $background: map-get($theme, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n","//Ref: https://github.com/angular/material.angular.io/blob/master/src/_app-theme.scss\n@import '~@angular/material/theming';\n\n@import '../../../libs/sidenav/src/lib/components/menu-item/menu-item.component.scss-theme';\n@import '../../../libs/home/src/lib/containers/landing/landing.component.scss-theme';\n@import '../../../libs/home/src/lib/components/footer/footer.component.scss-theme';\n@import '../../../libs/home/src/lib/components/header/header.component.scss-theme';\n@import '../../../libs/home/src/lib/containers/about/about.component.scss-theme';\n@import '../../../libs/breadcrumbs/src/lib/breadcrumbs.component-theme';\n@import '../../../libs/toolbar/src/lib/toolbar.component.scss-theme';\n@import '../../../libs/sidenav/src/lib/sidenav.component.scss-theme';\n@import '../../../libs/chat-box/src/lib/chat-box.component.scss-theme';\n@import '../../../libs/grid/src/lib/containers/accounts-grid-list/accounts-grid-list.component.scss-theme';\n\n@import './styles/global.scss-theme';\n@import './styles/svg-theme';\n\n//@import './styles/tables-theme';\n\n// Styles for the default app that are based on the current theme.\n@mixin custom-components-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-app-background {\n    background: mat-color($background, background);\n  }\n\n  .default-primary-header {\n    background: mat-color($primary);\n\n    h1 {\n      color: mat-color($primary, default-contrast);\n    }\n  }\n\n  @include ngx-site-svg-theme($theme);\n  //@include default-site-tables-theme($theme);\n  @include ngx-footer-component-theme($theme);\n  @include ngx-landing-component-theme($theme);\n  @include ngx-header-component-theme($theme);\n\n  @include ngx-about-component-theme($theme);\n  @include ngx-breadcrumbs-component-theme($theme);\n  @include ngx-toolbar-component-theme($theme);\n  @include ngx-sidenav-component-theme($theme);\n  @include ngx-chat-box-component-theme($theme);\n  @include ngx-accounts-grid-list-component-theme($theme);\n\n  @include ngx-global-theme($theme);\n}\n","@import '~@angular/material/theming';\n\n// Mixin to create a css class for each fill, stroke, and stop-color for a given color.\n@mixin _svgColorProperties($className, $color) {\n  .docs-svg-#{$className}-fill {\n    fill: $color;\n  }\n\n  .docs-svg-#{$className}-stroke {\n    stroke: $color;\n  }\n\n  .docs-svg-#{$className}-stop-color {\n    stop-color: $color;\n  }\n}\n\n// Mixin to apply theme colors for generated API docs.\n@mixin ngx-site-svg-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  @include _svgColorProperties(primary, mat-color($primary));\n  @include _svgColorProperties(accent, mat-color($accent));\n\n  // Use sass's `lighten` and `darken` to create gradient colors for the docs SVGs.\n  // This is specifically tailored to the SVGs in this app and is not a general approach.\n  $base: mat-color($primary);\n  @include _svgColorProperties(primary-dark-30, scale_color($base, $lightness: -30%));\n  @include _svgColorProperties(primary-dark-40, scale_color($base, $lightness: -40%));\n  @include _svgColorProperties(primary-light-20, scale_color($base, $lightness: +20%));\n  @include _svgColorProperties(primary-light-30, scale_color($base, $lightness: +30%));\n  @include _svgColorProperties(primary-light-40, scale_color($base, $lightness: +40%));\n  @include _svgColorProperties(primary-light-60, scale_color($base, $lightness: +60%));\n  @include _svgColorProperties(primary-light-80, scale_color($base, $lightness: +80%));\n  @include _svgColorProperties(primary-light-85, scale_color($base, $lightness: +85%));\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-footer-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .default-footer {\n    background: mat-color($primary);\n    color: mat-color($primary, default-contrast);\n  }\n\n  ngx-footer {\n    .default-footer-links a {\n      color: mat-color($primary, default-contrast);\n    }\n  }\n}\n","@mixin ngx-landing-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-landing {\n    .default-header-background {\n      background: mat-color($primary);\n    }\n\n    .default-header-headline {\n      color: mat-color($primary, default-contrast);\n    }\n\n    .default-header-start {\n      color: mat-color($primary);\n    }\n\n    .default-homepage-row {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n}\n","@mixin ngx-header-component-theme($theme) {\n  // retrieve variables from theme\n  // (all possible variables, use only what you really need)\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  // all of these variables contain many additional variables\n\n  ngx-home-header {\n    .mat-button {\n      &.active {\n        //color: mat-color($accent, default-contrast);\n        //background-color: mat-color($accent);\n        color: mat-color($accent);\n      }\n      //&:active {\n      //}\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-about-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  ngx-about {\n    .background {\n      color: mat-color($foreground, text);\n      background-color: mat-color($background, background);\n\n      .gradient {\n        &::before {\n          background: linear-gradient(\n            to bottom,\n            mat-color($background, background, 0) 0%,\n            mat-color($background, background, 1) 100%\n          );\n        }\n      }\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-breadcrumbs-component-theme($theme) {\n  $config: mat-typography-config();\n\n  $spacing: 24px;\n  $theme-foreground-map: map-get($theme, foreground);\n  $theme-secondary-text: mat-color($theme-foreground-map, secondary-text);\n  $theme-text: mat-color($theme-foreground-map, text);\n\n  ngx-breadcrumbs {\n    .title {\n      @include mat-typography-level-to-styles($config, title);\n      font-weight: 400;\n    }\n\n    .crumb,\n    .link {\n      color: $theme-secondary-text;\n      text-decoration: none;\n      transition: color $swift-ease-out-duration $swift-ease-out-timing-function;\n      text-transform: uppercase;\n\n      @include mat-typography-level-to-styles($config, caption);\n\n      &:hover {\n        color: $theme-text;\n      }\n    }\n\n    .link {\n      cursor: pointer;\n    }\n\n    .chevron {\n      font-size: 18px;\n      height: 18px;\n      width: 18px;\n      margin-left: $spacing/4;\n      margin-right: $spacing/4;\n    }\n\n    .crumb.current,\n    .crumb.current .link {\n      color: $theme-text;\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-toolbar-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-toolbar {\n    .mat-toolbar {\n      color: rgba(0, 0, 0, 0.87);\n      background-color: #ffffff;\n      //color: mat-color($foreground, text);\n      //background-color: mat-color($background, background, 0.6);\n    }\n\n    .mat-nav-list {\n      .mat-list-item {\n        color: rgba(0, 0, 0, 0.87);\n      }\n    }\n  }\n}\n","@import 'var';\n@import '~@angular/material/theming';\n\n@mixin ngx-sidenav-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-sidenav {\n    .sidenav {\n      background: $background-color__sidenav-list;\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-chat-box-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  ngx-chat-box {\n    .chat-input {\n      color: mat-color($foreground, text);\n      background-color: mat-color($background, background);\n      //background-color: mat-color($background, background, 0.6);\n    }\n\n    //.chat-input {\n    //\n    //  &:hover, &:active, &:focus {\n    //    background-color: mat-color($background, hover);\n    //  }\n    //\n    //  &.selected {\n    //    background-color: mat-color($primary, lighter, 0.5);\n    //    color: mat-color($foreground, text);\n    //  }\n    //}\n  }\n}\n","@import 'var';\n@import '~@angular/material/theming';\n\n@mixin ngx-accounts-grid-list-component-theme($app-theme) {\n  $primary: map-get($app-theme, primary);\n  $accent: map-get($app-theme, accent);\n\n  ngx-accounts-grid-list {\n    //.mat-toolbar {\n    //  background-color: $background-color__sidenav-list ;\n    //  color: mat-color($primary, default-contrast);\n    //}\n\n    .mat-button-toggle {\n      background-color: lighten($background-color__sidenav-list, 20);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-button-toggle-checked {\n      background-color: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin ngx-global-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n\n  code {\n    color: mat-color($accent, lighter-contrast);\n    background-color: mat-color($accent, lighter);\n  }\n}\n"],"sourceRoot":"webpack:///"}