{"version":3,"sources":["webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/viewport.service.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/operators/untilDestroy.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/observable/interval.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-flex-layout.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-perfect-scrollbar.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/shared-material-date.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity-form.component.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.component.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.service.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/shared/src/lib/containers/entity/entity.model.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/mapTo.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/theme-picker/src/lib/theme-picker-service.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/isValid/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/format/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/compareAsc/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInCalendarMonths/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMonths/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInSeconds/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/assign/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/formatDistance/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/in-viewport/in-viewport.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/router-link-match/router-link-match.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/mask/mask.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/helper/helper.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/truncate/truncate.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/date-fns.module.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/pipes/date-fns/format-time-in-words.pipe.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/delayWhen.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/differenceInMinutes/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/perfect-scrollbar/dist/perfect-scrollbar.esm.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/ngx-perfect-scrollbar/__ivy_ngcc__/fesm2015/ngx-perfect-scrollbar.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/toDate/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/toInteger/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/animations.service.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/keyframes.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/card.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/fade.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/expand.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/list.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/route.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/rotate.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll-fab.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/scroll.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/router.transition.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/animations/src/lib/sidenav.animation.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/rxjs/_esm2015/internal/operators/retry.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/ng-let/ng-let.directive.ts","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/date-fns/esm/parseISO/index.js","webpack:///Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js"],"names":["ViewportService","options","rootMargin","threshold","callback$","this","observer","IntersectionObserver","handler","bind","element","observe","asObservable","pipe","entry","target","unobserve","entries","forEach","next","ThemePickerModule","destroy$","Symbol","untilDestroy","component","orignalDestroy","ngOnDestroy","Error","complete","call","_","interval","period","scheduler","a","schedule","subscriber","add","dispatch","counter","state","SharedFlexLayoutModule","SharedModule","SharedPerfectScrollbarModule","SharedMaterialDateModule","EntityFormComponent","EntitiesComponent","withConfig","useColumnBasisZero","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelPropagation","provide","useValue","DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","data","dialogRef","title","entity","payload","buildForm","close","entityForm","value","entityService","dataSource","selection","showToolbar","showColumnFilter","showActionColumn","maxSelectable","actionColumn","selectColumn","loading$","update","subscribe","filterPredicate","changed","sc","added","length","selected","deselect","shift","sort","paginator","id","getById","item","concatMap","put","post","getAll","getData","map","result","filteredData","every","isSelected","hasValue","isAllFilteredRowsSelected","isMasterToggleChecked","clear","select","filterValue","trim","toLowerCase","filter","toggle","showDetails","outlet","activatedRouteData","depth","column","event","stopPropagation","stopImmediatePropagation","visible","date","Object","prototype","toString","parseISO","displayedColumns","columns","x","property","unshift","concat","httpClient","baseUrl","environment","API_BASE_URL","loadingSubject","BehaviorSubject","get","entityPath","catchError","handleError","order","skip","take","params","set","retry","finalize","console","log","error","errorMessage","ErrorEvent","message","status","throwError","body","temporalFunctionToJson","Date","toJSON","format","jsonBody","JSON","stringify","Entity","init","assign","EntityColumnDef","header","displayFn","mapTo","source","lift","MapToOperator","MapToSubscriber","destination","super","ThemePickerServiceModule","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","getTime","isValid","dirtyDate","requiredArgs","toDate","isNaN","subMilliseconds","dirtyAmount","amount","toInteger","addMilliseconds","addLeadingZeros","number","targetLength","sign","output","Math","abs","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","dirtyOptions","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","floor","minutes","String","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","token","localize","era","width","y","signedYear","ordinalNumber","unit","Y","signedWeekYear","weekYear","R","u","Q","quarter","ceil","getUTCMonth","context","q","M","month","L","w","week","round","I","isoWeek","d","D","dayOfYear","timestamp","setUTCMonth","startOfYearTimestamp","difference","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","dayPeriodEnumValue","getUTCHours","dayPeriod","b","B","h","H","K","k","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","t","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","originalDate","getTimezoneOffsetInMilliseconds","utcDate","formatterOptions","substring","firstCharacter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","input","_c0","_c1","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CdkFooterCellDef","CdkHeaderCellDef","CdkCellDef","CdkColumnDef","BaseRowDef","CdkCell","CdkHeaderCell","CdkHeaderRowDef","CdkRow","CdkHeaderRow","CdkCellOutlet","CdkRowDef","CdkFooterRowDef","CDK_TABLE","template","ɵfac","ɵdir","type","selectors","_CdkColumnDefBase","_table","_stickyEnd","_name","name","cssClassFriendlyName","contentQueries","rf","ctx","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","useExisting","BaseCdkCell","columnDef","elementRef","nativeElement","classList","hostAttrs","_differs","changes","_columnsDiffer","currentValue","find","create","_CdkHeaderRowDefBase","_CdkFooterRowDefBase","when","_viewContainer","mostRecentCellOutlet","ɵcmp","decls","vars","consts","directives","encapsulation","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","children","stickyStartStates","stickyEndStates","hasStickyColumns","some","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","dir","style","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","widths","positions","nextPosition","getTableUnknownColumnError","CdkTable","FooterRowOutlet","HeaderRowOutlet","DataRowOutlet","viewContainer","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","Subject","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","view","move","_updateRowIndexContext","forEachIdentityChange","$implicit","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isObservable","isArray","of","takeUntil","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","renderIndex","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","tag","section","createElement","appendChild","stickyCheckReducer","isBrowser","change","items","_trackByFn","fn","warn","_switchDataSource","viewQuery","exportAs","ngContentSelectors","array","CdkTableModule","MatTable","MatCellDef","MatHeaderCellDef","MatColumnDef","MatHeaderRowDef","MatCell","MatHeaderCell","MatRowDef","MatHeaderRow","MatRow","MatTableModule","ɵmod","ɵinj","factory","ɵMatTable_BaseFactory","styles","ɵMatCellDef_BaseFactory","ɵMatHeaderCellDef_BaseFactory","ɵMatColumnDef_BaseFactory","ɵMatHeaderRowDef_BaseFactory","ɵMatRowDef_BaseFactory","ɵMatHeaderRow_BaseFactory","ɵMatRow_BaseFactory","imports","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","valueA","valueB","comparatorResult","dataStr","keys","currentTerm","key","transformedFilter","_updateChangeSubscription","sortChange","_sort","merge","initialized","pageChange","_paginator","page","combineLatest","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","slice","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","newPageIndex","min","compareAsc","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","differenceInMonths","setMonth","isLastMonthNotFull","differenceInSeconds","cloneObject","dirtyObject","TypeError","hasOwnProperty","formatDistance","dirtyBaseDate","comparison","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","InViewportModule","RouterLinkMatchModule","NgLetModule","MaskModule","ClickOutsideModule","TruncateModule","HelperModule","DateFnsModule","RepeatWhenOperator","notifier","sourceIsBeingSubscribedTo","outerValue","innerValue","outerIndex","innerIndex","innerSub","isStopped","retries","subscribeToRetries","retriesSubscription","closed","_unsubscribeAndRecycle","notifications","_unsubscribe","subscribeToResult","OuterSubscriber","FormatTimeInWordsPipe","DelayWhenOperator","delayDurationSelector","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","_error","delayNotifier","tryDelay","err","subscription","subscriptionIdx","splice","notifierSubscription","TakeWhileOperator","predicate","inclusive","nextOrComplete","predicateResult","Subscriber","defaultConfig","cdr","isDestroyed","async","NO_ARGS_ERROR","agoExpression","timeAgo","transform","nextBackoff","backoff","notify","stringToDate","tap","backoffAmountInSeconds","minutesElapsed","getComputedStyle","val","div","className","document","elMatches","Element","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","parentNode","removeChild","queryChildren","selector","child","cls","scrollingClassTimeout","addScrollingClass","contains","clearTimeout","removeScrollingClass","setTimeout","isAlive","settings","scrollingThreshold","EventElement","handlers","prototypeAccessors","isEmpty","configurable","eventName","addEventListener","unbind","this$1","removeEventListener","unbindAll","defineProperties","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","processScrollDiff","axis","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","scrollTop","up","down","reach","dispatchEvent","toInt","parseInt","eventElement","ee","once","onceHandler","env","isWebKit","documentElement","supportsTouch","navigator","maxTouchPoints","DocumentTouch","supportsIePointer","msMaxTouchPoints","isChrome","test","userAgent","updateGeometry","roundedScrollTop","rect","containerWidth","contentWidth","scrollWidth","scrollHeight","scrollbarXRail","el","scrollbarYRail","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isScrollbarXUsingBottom","scrollbarXBottom","scrollbarXTop","yRailOffset","isScrollbarYUsingRight","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","scrollbarX","railBorderXWidth","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","max","maxScrollbarLength","bindMouseScrollHandler","pageY","startingScrollTop","startingMousePageY","scrollBy","mouseMoveHandler","touches","preventDefault","mouseUpHandler","ownerDocument","bindMoves","touchMode","positionTop","pageYOffset","positionLeft","pageX","pageXOffset","keyboard","isDefaultPrevented","defaultPrevented","activeElement","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","altKey","shiftKey","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","cursor","overflowY","maxScrollTop","clientHeight","overflowX","maxScrollLeft","clientWidth","shouldPrevent","useBothWheelAxes","wheelSpeed","isTop","isBottom","offsetHeight","isLeft","isRight","offsetWidth","ctrlKey","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","getTouch","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","scrollY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","originalScrollLeft","focus","blur","isNegativeScroll","railXStyle","borderLeftWidth","borderRightWidth","marginLeft","marginRight","railYStyle","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","destroy","removePsClasses","split","MapShim","getIndex","arr","class_1","__entries__","defineProperty","enumerable","callback","_a","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","props","writable","getWindowOf","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","size","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","bbox","paddings","positions_1","horizPad","vertPad","boxSizing","vertScrollbar","horizScrollbar","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","observations","clearActive","_this","observation","ResizeObserver","method","apply","PerfectScrollbarComponent_div_3_Template","ctx_r33","states","indicatorY","interaction","indicatorX","PerfectScrollbarModule","PerfectScrollbarComponent","PerfectScrollbarDirective","PERFECT_SCROLLBAR_CONFIG","Geometry","Position","PerfectScrollbarEvents","PerfectScrollbarConfig","config","zone","differs","platformId","defaults","instance","ro","timeout","animation","configDiff","ngDestroy","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","runOutsideAngular","eventType","fromEvent","auditTime","emit","ngOnInit","isFirstChange","previousValue","prefix","absolute","animateScrolling","qs","elementPos","scrollerPos","cancelAnimationFrame","newValue","scrollCount","oldTimestamp","performance","oldValue","cosParameter","newTimestamp","step","PI","cos","outputs","cdRef","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","distinctUntilChanged","detectChanges","directiveRef","checkPropagation","clientX","clientY","hostVars","hostBindings","_MatMenu_ng_template_0_Template","_r10","$event","_handleKeydown","_onAnimationStart","_onAnimationDone","ctx_r8","panelId","_classList","_panelAnimationState","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_attached","_portal","detach","_outlet","insertBefore","outletElement","attach","isAttached","dispose","MAT_MENU_PANEL","_MatMenuItemMixinBase","MatMenuItem","_focusMonitor","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","addItem","origin","focusVia","_getHostElement","stopMonitoring","removeItem","textNodeType","TEXT_NODE","childNodes","textContent","_checkDisabled","_handleMouseEnter","_getTabIndex","disableRipple","attrs","changeDetection","MAT_MENU_DEFAULT_OPTIONS","providedIn","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","setPositionClasses","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","tabOut","focusedItem","updateActiveItem","_item","keyCode","manager","parentMenu","setFirstItemActive","setLastItemActive","setFocusOrigin","onKeydown","lazyContent","onStable","_focusFirstItem","activeItem","parentElement","getAttribute","setActiveItem","newElevation","customElevation","startsWith","_previousElevation","posX","posY","classes","_isAnimating","toState","activeItemIndex","_allItems","reset","notifyOnChanges","previousPanelClass","_previousPanelClass","panelClass","templateRef","MatMenu","ɵMatMenu_BaseFactory","_MatMenu","ngZone","defaultOptions","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_scrollStrategy","_checkMenu","_handleHover","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_restoreFocus","_resetAnimation","_setIsMenuOpen","_setMenuElevation","focusFirstItem","setElevation","isOpen","_getOverlayConfig","_subscribeToPositions","keydownEvents","positionStrategy","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","button","toggleMenu","_menu","reason","_destroyMenu","_handleMousedown","_handleClick","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","providers","MatMenuModule","argument","argStr","stack","NaN","dirtyNumber","AnimationsService","wobble","jello","swing","slideOutLeft","zoomOutRight","rotateOutUpRight","flipOutY","cardAnimation","fadeAnimation","optional","listFadeAnimation","flex","hierarchicalRouteAnimation","scrollFabAnimation","pageAnimations","elementsAnimations","routeAnimationType","ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","STEPS_PAGE","STEPS_ELEMENTS","routerTransition","isRouteAnimationsType","Collapsed","CollapsedHover","Expanded","Mobile","visibility","MobileOpen","MatSelect_span_4_Template","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","_panelDoneAnimatingStream","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","_c2","_c3","matSelectAnimations","transformPanelWrap","transformPanel","minWidth","nextUniqueId","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MatSelectTrigger","MatSelect","_viewportRuler","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","_disableOptionCentering","controlType","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","removed","_resetOptions","_initializeSelection","updateErrorState","_typeaheadDebounceInterval","open","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayElement","_isRtl","_setSelectionByValue","isDisabled","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","isTyping","previouslySelectedOption","selectedOption","announce","viewValue","hasDeselectedOptions","opt","previouslyFocusedIndex","_selectViaInteraction","positionChange","_calculateOverlayOffsetX","panel","color","_value","_selectValue","_sortValues","correspondingOption","withVerticalOrientation","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","_propagateChanges","toArray","sortComparator","fallbackValue","valueToEmit","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","current","undefined","itemHeight","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","group","leftOverflow","rightOverflow","updatePosition","optionOffsetFromPanelTop","optionHeightAdjustment","maxOptionsDisplayed","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","writeValue","_id","selectedOptions","_onFocus","_onBlur","_getAriaLabelledby","required","errorState","_getAriaActiveDescendant","compareWith","errorStateMatcher","_onAttached","_r0","MatSelectModule","RetryOperator","RetrySubscriber","MatSortHeader_div_3_Template","_r5","_disableViewStateAnimation","_getArrowViewState","_getArrowDirectionState","_MatSortMixinBase","MatSort","sortables","_direction","sortable","getNextSortDirection","disableClear","sortOrder","sortDirectionCycle","nextDirectionIndex","_markInitialized","_disableClear","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","MatSortHeaderIntl","sortButtonLabel","ɵprov","MAT_SORT_HEADER_INTL_PROVIDER","parentIntl","_MatSortHeaderMixinBase","MatSortHeader","_intl","changeDetectorRef","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","_setAnimationTransitionState","fromState","_setIndicatorHintVisible","register","deregister","_isDisabled","viewState","_getAriaSortAttribute","_renderArrow","MatSortModule","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","defaultWidth","formats","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchFn","dirtyString","string","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","object","valueCallback","rest","code","full","long","medium","short","formatRelative","_date","_baseDate","_options","_dirtyOptions","rem100","narrow","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","matchPattern","parsePattern","parseResult","any","MatCalendarBody_tr_0_Template","_cellPadding","numCols","label","MatCalendarBody_tr_1_td_1_Template","ctx_r12","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r17","item_r14","_cellClicked","colIndex_r15","rowIndex_r11","ctx_r13","_cellWidth","enabled","_isActiveCell","cssClasses","selectedValue","todayValue","displayValue","MatCalendarBody_tr_1_Template","row_r10","ctx_r9","MatMonthView_th_3_Template","day_r20","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r26","activeDate","_dateSelected","_userSelected","ctx_r22","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","_r30","_monthSelectedInYearView","_goToDateInView","ctx_r23","MatCalendar_mat_multi_year_view_4_Template","_r34","_yearSelectedInMultiYearView","ctx_r24","MatDatepickerToggle__svg_svg_2_Template","_c4","createMissingDateImplError","provider","MatDatepickerIntl","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","MatCalendarCell","MatCalendarBody","activeCell","cellAspectRatio","selectedValueChange","columnChanges","colIndex","cellNumber","MatMonthView","_dateFormats","_dateAdapter","selectedChange","_userSelection","activeDateChange","_activeDate","localeChanges","_init","_selectedDate","selectedYear","getYear","selectedMonth","selectedDate","createDate","oldActiveDate","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","compareDate","_focusActiveCell","_getDateInCurrentMonth","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","weekdays","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","cellClasses","_hasSameMonthAndYear","d1","d2","isDateInstance","validDate","_getValidDateOrNull","deserialize","clampDate","_selected","_minDate","_maxDate","_handleCalendarBodyKeydown","MatMultiYearView","yearSelected","_todayYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","yearsPerPage","_yearSelected","yearName","getYearName","_shouldEnableYear","isSameMultiYearView","_selectedYear","_getActiveCell","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","MatYearView","monthSelected","normalizedDate","_monthSelected","_selectedMonth","_getMonthInCurrentYear","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","_shouldEnableMonth","activeYear","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","MatCalendarHeader","calendar","currentView","_isSameView","maxYearOfPage","minYearName","maxYearName","formatYearRange","MatCalendar","currentPeriodClicked","previousClicked","nextClicked","periodButtonLabel","periodButtonText","previousEnabled","prevButtonLabel","nextEnabled","nextButtonLabel","_moveFocusOnNextTick","startView","_intlChanges","_calendarHeaderPortal","headerComponent","startAt","_currentView","focusActiveCell","firstChange","_getCurrentViewComponent","monthView","yearView","multiYearView","ngAfterContentInit","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","matDatepickerAnimations","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","_MatDatepickerContentMixinBase","MatDatepickerContent","_animationState","_calendar","datepicker","touchUi","_selectYear","_selectMonth","_dateFilter","calendarHeaderComponent","MatDatepicker","_dialog","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_disabledChange","_selectedChanged","_destroyPopup","_datepickerInput","_valueChange","_openAsDialog","_openAsPopup","_popupComponentRef","_popupRef","_startExitAnimation","_dialogRef","completeClose","viewContainerRef","disableClose","minHeight","maxWidth","maxHeight","autoFocus","afterClosed","componentInstance","portal","_createPopup","_createPopupPositionStrategy","getConnectedOverlayOrigin","withFlexibleDimensions","withViewportMargin","_color","_getThemePalette","_disabled","opened","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","targetElement","_formField","dateChange","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","control","controlValue","_maxValidator","_filterValidator","_validator","compose","_datepicker","readOnly","lastValueWasValid","_formatValue","_registerInput","oldDate","_min","_max","_onInput","_onKeydown","toIso8601","matDatepicker","matDatepickerFilter","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","_watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","_customIcon","_button","_open","MatDatepickerModule","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r17","MatPaginator_div_2_mat_form_field_3_Template","_r19","_changePageSize","ctx_r14","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r15","MatPaginator_div_2_Template","ctx_r11","MatPaginator_button_6_Template","_r21","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r23","lastPage","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","MAT_PAGINATOR_INTL_PROVIDER","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorBase","MatPaginator","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","hasNextPage","previousPageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","previousPage","nextPage","MatPaginatorModule","NgLetContext","ngLet","NgLetDirective","vcr","MAT_GRID_LIST","MatGridTile","_gridList","_rowspan","_colspan","rowspan","colspan","TileCoordinator","columnIndex","numColumns","tiles","tracker","fill","tile","_trackTile","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","lastRowMax","rowCount","col","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","sizePercent","gutterFraction","baseSize","calc","span","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","RatioTileStyler","_parseRatio","baseTileHeight","rowHeightRatio","ratioParts","FitTileStyler","exp","MatGridList","_gutter","_checkCols","_checkRowHeight","_layoutTiles","_rowHeight","_setTileStyler","rowHeight","_tileStyler","_tileCoordinator","pos","setStyle","getComputedHeight","MatGridListModule","_MatListMixinBase","_MatListItemMixinBase","MatNavList","ɵMatNavList_BaseFactory","MatList","_getListType","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","navList","_isInteractiveList","_destroyed","_list","hasAttribute","_lines","_avatar","_icon","_isRippleDisabled","MatListModule","getDateMillisecondsPart","baseTimezoneOffset","setSeconds","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","setFullYear","parseTimezone","dateString","timeString","substr","exec","regex","RegExp","captures","century","isWeekDate","parseDateUnit","_year","isoWeekYear","daysInMonths","isLeapYearIndex","parseTimeUnit","timezoneString","_hours","MatDivider","_vertical","_inset","vertical","inset","MatDividerModule"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { finalize, filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService {\n  private readonly options: IntersectionObserverInit = {\n    rootMargin: '0px 0px 0px 0px',\n    threshold: [0.5],\n  };\n  private observer: IntersectionObserver;\n  private callback$: Subject<IntersectionObserverEntry> = new Subject();\n\n  constructor() {\n    this.observer = new IntersectionObserver(this.handler.bind(this), this.options);\n  }\n\n  observe(element: Element): Observable<IntersectionObserverEntry> {\n    this.observer.observe(element);\n\n    return this.callback$.asObservable().pipe(\n      filter((entry: IntersectionObserverEntry) => entry.target === element),\n      finalize(() => this.observer.unobserve(element)),\n    );\n  }\n\n  private handler(entries: Array<IntersectionObserverEntry>): void {\n    entries.forEach(entry => this.callback$.next(entry));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerServiceModule } from './theme-picker-service.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatTooltipModule,\n    ThemePickerServiceModule,\n  ],\n  exports: [ThemePickerComponent],\n  declarations: [ThemePickerComponent],\n})\nexport class ThemePickerModule {}\n","import { MonoTypeOperatorFunction, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// create a symbol identify the observable I add to\n// the component so it doesn't conflict with anything.\n// I need this so I'm able to add the desired behaviour to the component.\nexport const destroy$ = Symbol('destroy$');\n\n/**\n * An operator that takes until destroy it takes a components this a parameter\n * returns a pipeable RxJS operator.\n */\nexport const untilDestroy = <T>(component: any): MonoTypeOperatorFunction<T> => {\n  if (component[destroy$] === undefined) {\n    // only hookup each component once.\n    addDestroyObservableToComponent(component);\n  }\n\n  // pipe in the takeUntil destroy$ and return the source unaltered\n  return takeUntil<T>(component[destroy$]);\n};\n\n/**\n * @internal\n */\nexport function addDestroyObservableToComponent(component: any) {\n  component[destroy$] = new Observable<void>(observer => {\n    // keep track of the original destroy function,\n    // the user might do something in there\n    const orignalDestroy = component.ngOnDestroy;\n    if (orignalDestroy == null) {\n      // Angular does not support dynamic added destroy methods\n      // so make sure there is one.\n      throw new Error('untilDestroy operator needs the component to have an ngOnDestroy method');\n    }\n    // replace the ngOndestroy\n    component.ngOnDestroy = () => {\n      // fire off the destroy observable\n      observer.next();\n      // complete the observable\n      observer.complete();\n      // and at last, call the original destroy\n      orignalDestroy.call(component);\n    };\n    // return cleanup function.\n    return (_: any) => (component[destroy$] = undefined);\n  });\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [FlexLayoutModule.withConfig({ useColumnBasisZero: false })],\n  exports: [FlexLayoutModule],\n})\nexport class SharedFlexLayoutModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgLetModule, RouterLinkMatchModule } from '@ngx-starter-kit/ngx-utils';\nimport { SharedFlexLayoutModule } from './shared-flex-layout.module';\nimport { SharedPerfectScrollbarModule } from './shared-perfect-scrollbar.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    CommonModule,\n    NgLetModule,\n    ReactiveFormsModule,\n    RouterLinkMatchModule,\n    SharedFlexLayoutModule,\n    SharedPerfectScrollbarModule,\n  ],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  PERFECT_SCROLLBAR_CONFIG,\n  PerfectScrollbarConfigInterface,\n  PerfectScrollbarModule,\n} from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  exports: [PerfectScrollbarModule],\n  providers: [{ provide: PERFECT_SCROLLBAR_CONFIG, useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG }],\n})\nexport class SharedPerfectScrollbarModule {}\n","import { NgModule } from '@angular/core';\n\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\n\nconst MODULE_EXPORTS = [MatDatepickerModule, MatNativeDateModule];\n\nconst DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  exports: MODULE_EXPORTS,\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS }, { provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class SharedMaterialDateModule {}\n","import { Inject, OnInit } from '@angular/core';\nimport { Entity } from './entity.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\nexport abstract class EntityFormComponent<TEntity extends Entity> implements OnInit {\n  title: string;\n  entity: TEntity;\n  entityForm: FormGroup;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) protected data: { title: string; payload: TEntity },\n    protected dialogRef: MatDialogRef<EntityFormComponent<TEntity>>,\n  ) {\n    this.title = data.title;\n    this.entity = data.payload;\n  }\n\n  abstract buildForm(entity: TEntity);\n\n  ngOnInit() {\n    this.buildForm(this.entity);\n  }\n\n  submit() {\n    this.dialogRef.close(this.entityForm.value as Partial<TEntity>);\n  }\n}\n","import { SelectionChange, SelectionModel } from '@angular/cdk/collections';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { AfterViewInit, Directive, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { untilDestroy } from '@ngx-starter-kit/ngx-utils';\nimport { parseISO } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { EntityFormComponent } from './entity-form.component';\nimport { Entity, EntityColumnDef } from './entity.model';\nimport { EntityService } from './entity.service';\n@Directive()\n// tslint:disable-next-line: directive-class-suffix\nexport abstract class EntitiesComponent<TEntity extends Entity, TService extends EntityService<TEntity>>\n  implements OnInit, OnDestroy, AfterViewInit {\n  dataSource = new MatTableDataSource<TEntity>([]);\n  selection = new SelectionModel<TEntity>(false, []);\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filterRef: ElementRef;\n\n  readonly loading$;\n  readonly columns: Array<EntityColumnDef<TEntity>>;\n  readonly title?: string = null;\n  readonly showToolbar?: boolean = false;\n  readonly showColumnFilter?: boolean = false;\n  readonly showActionColumn?: boolean = false;\n  readonly maxSelectable?: number = 1;\n  readonly actionColumn?: string = 'Actions';\n  readonly selectColumn?: string = 'select';\n  // TODO: make them optional abstract\n  readonly formRef?: ComponentType<EntityFormComponent<TEntity>>;\n  getNewEntity?(): TEntity;\n  filterPredicate?(entity: TEntity, filter: string): boolean;\n  // TODO: make them optional abstract end\n\n  constructor(protected entityService: TService) {\n    this.loading$ = entityService.loading$;\n  }\n\n  ngOnInit() {\n    this.selection = new SelectionModel<TEntity>(this.maxSelectable > 1, []);\n\n    this.update().subscribe();\n    if (this.filterPredicate) {\n      this.dataSource.filterPredicate = this.filterPredicate;\n    }\n\n    // remove first selected entity if more then max selected.\n    if (this.maxSelectable > 1) {\n      // is multi select mode?\n      this.selection.changed\n        .pipe(\n          // tap(console.log),\n          filter((sc: SelectionChange<TEntity>) => sc.added.length > 0),\n          filter((_) => this.selection.selected.length > this.maxSelectable),\n          untilDestroy(this)\n        )\n        .subscribe((_) => this.selection.deselect(this.selection.selected.shift()));\n    }\n\n    // fromEvent(this.filterRef.nativeElement, 'keyup')\n    //   .pipe(\n    //     debounceTime(150),\n    //     distinctUntilChanged()\n    //   ).subscribe(() => {\n    //   this.paginator.pageIndex = 0;\n    //   this.applyFilter(this.filterRef.nativeElement.value)\n    // });\n  }\n\n  ngOnDestroy() {}\n\n  ngAfterViewInit() {\n    // Needs to be set up after the view is initialized since the data source will look at the sort\n    // and paginator's initial values to know what data should be rendered.\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getById(id: number) {\n    return this.entityService.getById(id);\n  }\n\n  delete(item: TEntity) {\n    return this.entityService.delete(item.id).pipe(concatMap((_) => this.update()));\n  }\n\n  updateOrCreate(entity: TEntity, id: number) {\n    if (id) {\n      return this.entityService.put(id, entity).pipe(concatMap((_) => this.update()));\n    } else {\n      return this.entityService.post(entity).pipe(concatMap((_) => this.update()));\n    }\n  }\n\n  /**\n   * Overwrite this method, to get the data your way.\n   */\n  getData(): Observable<TEntity[]> {\n    return this.entityService.getAll();\n  }\n\n  protected update() {\n    return this.getData().pipe(\n      map((result) => {\n        this.dataSource = new MatTableDataSource<TEntity>(result);\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        // return nothing as we don't need.\n        // return result\n      })\n    );\n  }\n\n  /** Whether all filtered rows are selected. */\n  isAllFilteredRowsSelected() {\n    return this.dataSource.filteredData.every((data) => this.selection.isSelected(data));\n  }\n\n  /** Whether the selection it totally matches the filtered rows. */\n  isMasterToggleChecked() {\n    return (\n      this.selection.hasValue() &&\n      this.isAllFilteredRowsSelected() &&\n      this.selection.selected.length >= this.dataSource.filteredData.length\n    );\n  }\n\n  /**\n   * Whether there is a selection that doesn't capture all the\n   * filtered rows there are no filtered rows displayed.\n   */\n  isMasterToggleIndeterminate() {\n    return this.selection.hasValue() && (!this.isAllFilteredRowsSelected() || !this.dataSource.filteredData.length);\n  }\n\n  /** Selects all filtered rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isMasterToggleChecked()) {\n      this.selection.clear();\n    } else {\n      this.dataSource.filteredData.forEach((data) => this.selection.select(data));\n    }\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  get displayedColumns(): string[] {\n    // prettier-ignore\n    let displayedColumns = this.columns\n      .filter(column => column.visible)\n      .map(x => x.property);\n\n    if (this.maxSelectable > 0) {\n      displayedColumns.unshift(this.selectColumn);\n    }\n    if (this.showActionColumn) {\n      displayedColumns = displayedColumns.concat(this.actionColumn);\n    }\n    return displayedColumns;\n  }\n\n  selectRow(entity: TEntity) {\n    if (this.maxSelectable > 0) {\n      this.selection.toggle(entity);\n      if (this.selection.isSelected(entity)) {\n        this.showDetails(entity);\n      } else {\n        this.showDetails(undefined);\n      }\n    }\n  }\n\n  getRouteAnimation(outlet) {\n    return outlet.activatedRouteData.depth || 5;\n    // return outlet.isActivated ? outlet.activatedRoute : ''\n  }\n\n  /**\n   * will be called with entity or undefined\n   */\n  showDetails(entity: TEntity) {}\n\n  toggleColumnVisibility(column, event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    column.visible = !column.visible;\n  }\n\n  protected stringToDate(date: string | number | Date): number | Date {\n    function isString(x: any) {\n      return Object.prototype.toString.call(x) === '[object String]';\n    }\n    return isString(date) ? parseISO(date as string) : (date as number | Date);\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { format } from 'date-fns';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, finalize, retry } from 'rxjs/operators';\nimport { Entity } from './entity.model';\n\nexport interface Filter {\n  [name: string]: string | string[];\n}\n\nexport abstract class EntityService<T extends Entity> {\n  protected readonly baseUrl = environment.API_BASE_URL;\n  protected loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  protected abstract entityPath: string;\n\n  constructor(protected httpClient: HttpClient) {}\n\n  getById(id: number | string) {\n    // this.loadingSubject.next(true);\n    return this.httpClient.get<T>(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      // finalize(() => this.loadingSubject.next(false))\n    );\n  }\n\n  // findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<IPagination<T>> | Observable<never> {\n  findAll(filter: Filter, order = 'DESC', skip = 0, take = 100): Observable<T[]> | Observable<never> {\n    this.loadingSubject.next(true);\n    return this.httpClient\n      .get<T[]>(`${this.baseUrl}/${this.entityPath}`, {\n        params: new HttpParams()\n          .set('filter', 'filter TODO')\n          .set('order', order)\n          .set('skip', skip.toString())\n          .set('take', take.toString()),\n      })\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError),\n        finalize(() => this.loadingSubject.next(false)),\n      );\n  }\n\n  // getAll(): Observable<IPagination<T>> {\n  getAll(): Observable<T[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<T[]>(`${this.baseUrl}/${this.entityPath}`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  delete(id: number | string) {\n    this.loadingSubject.next(true);\n    return this.httpClient.delete(`${this.baseUrl}/${this.entityPath}/${id}`).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  post(entity: T) {\n    this.loadingSubject.next(true);\n    return this.httpClient.post(`${this.baseUrl}/${this.entityPath}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  put(id: number | string, entity: T) {\n    console.log(entity);\n    this.loadingSubject.next(true);\n    return this.httpClient.put(`${this.baseUrl}/${this.entityPath}/${id}`, entity).pipe(\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n    );\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (typeof error === 'string') {\n      errorMessage = error;\n    } else {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        errorMessage = `An error occurred: ${error.error.message}`;\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        errorMessage = `Backend returned code ${error.status}, with body ${error.message}`;\n      }\n    }\n    console.error(error);\n    // return an ErrorObservable with a user-facing error message\n    return throwError(errorMessage);\n  }\n\n  protected convertToJson(body: any) {\n    const temporalFunctionToJson = Date.prototype.toJSON;\n    Date.prototype.toJSON = function() {\n      return format(this, 'YYYY-MM-DD');\n    };\n\n    const jsonBody = JSON.stringify(body);\n\n    Date.prototype.toJSON = temporalFunctionToJson;\n    return jsonBody;\n  }\n}\n","import { TemplateRef } from '@angular/core';\n\nexport abstract class Entity {\n  abstract get id(): number | string;\n  [key: string]: any;\n  constructor(init?: Partial<Entity>) {\n    Object.assign(this, init);\n  }\n}\n\nexport class EntityColumnDef<T> {\n  readonly property: string;\n  readonly header = this.property;\n  public visible = true;\n  readonly sticky?: 'start' | 'end';\n  readonly template?: TemplateRef<any>;\n  readonly displayFn = (entity: T) => entity[this.property];\n\n  public constructor(init?: Partial<EntityColumnDef<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class ThemePickerServiceModule {}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r19.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r19.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r21 = ctx.$implicit;\n    const ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r20.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r20.dataAccessor(data_r21, ctx_r20.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './in-viewport.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [InViewportDirective],\n  exports: [InViewportDirective],\n})\nexport class InViewportModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLinkMatchDirective } from './router-link-match.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RouterLinkMatchDirective],\n  exports: [RouterLinkMatchDirective],\n})\nexport class RouterLinkMatchModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgLetDirective } from './ng-let.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgLetDirective],\n  exports: [NgLetDirective],\n})\nexport class NgLetModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside.directive';\n\n@NgModule({\n  declarations: [ClickOutsideDirective],\n  imports: [CommonModule],\n  exports: [ClickOutsideDirective],\n})\nexport class ClickOutsideModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\n\n@NgModule({\n  declarations: [MaskDirective],\n  imports: [CommonModule],\n  exports: [MaskDirective],\n})\nexport class MaskModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterPipe } from './filter.pipe';\nimport { GroupByPipe } from './group-by.pipe';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n  exports: [FilterPipe, GroupByPipe, SafeHtmlPipe],\n})\nexport class HelperModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CharactersPipe } from './characters.pipe';\nimport { WordsPipe } from './words.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CharactersPipe, WordsPipe],\n  exports: [CharactersPipe, WordsPipe],\n})\nexport class TruncateModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormatTimeInWordsPipe } from './format-time-in-words.pipe';\n\nconst PIPES = [FormatTimeInWordsPipe];\n\n@NgModule({\n  declarations: [PIPES],\n  imports: [CommonModule],\n  exports: [PIPES],\n})\nexport class DateFnsModule {}\n","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete(innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    }\n}\n//# sourceMappingURL=repeatWhen.js.map","import { AsyncPipe } from '@angular/common';\nimport { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, formatDistance, parseISO } from 'date-fns';\nimport { interval, Observable, of } from 'rxjs';\nimport { delayWhen, map, repeatWhen, takeWhile, tap } from 'rxjs/operators';\nconst defaultConfig = { addSuffix: true };\n/**\n * impure pipe, which in general can lead to bad performance\n * but the backoff function limits the frequency the pipe checks for updates\n * so the performance is close to that of a pure pipe\n * the downside of this is that if you change the value of the input, the pipe might not notice for a while\n * so this pipe is intended for static data\n *\n * expected input is a time (number, string or Date)\n * output is a string expressing distance from that time to now, plus the suffix 'ago'\n * output refreshes at dynamic intervals, with refresh rate slowing down as the input time gets further away from now\n */\n@Pipe({ name: 'formatTimeInWords', pure: false })\nexport class FormatTimeInWordsPipe implements PipeTransform, OnDestroy {\n  static readonly NO_ARGS_ERROR = 'formatTimeInWords: missing required arguments';\n  private readonly async: AsyncPipe;\n\n  private isDestroyed = false;\n  private agoExpression: Observable<string>;\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.async = new AsyncPipe(this.cdr);\n  }\n\n  ngOnDestroy() {\n    this.isDestroyed = true; // pipe will stop executing after next iteration\n  }\n\n  transform(date: string | number | Date, options?): string {\n    if (date == null) {\n      throw new Error(FormatTimeInWordsPipe.NO_ARGS_ERROR);\n    }\n\n    // set the pipe to the Observable if not yet done, and return an async pipe\n    if (!this.agoExpression) {\n      this.agoExpression = this.timeAgo(date, { ...defaultConfig, ...options });\n    }\n    return this.async.transform(this.agoExpression);\n  }\n\n  private timeAgo(date: string | number | Date, options?): Observable<string> {\n    let nextBackoff = this.backoff(date);\n    return of(true).pipe(\n      // will not recheck input until delay completes\n      repeatWhen(notify => notify.pipe(delayWhen(() => interval(nextBackoff)))),\n      takeWhile(_ => !this.isDestroyed),\n      map(_ => formatDistance(this.stringToDate(date), new Date(), options)),\n      tap(_ => (nextBackoff = this.backoff(date)))\n    );\n  }\n\n  private backoff(date: string | number | Date): number {\n    // this will always be positive\n    const minutesElapsed = Math.abs(differenceInMinutes(new Date(), this.stringToDate(date)));\n    let backoffAmountInSeconds: number;\n    if (minutesElapsed < 2) {\n      backoffAmountInSeconds = 5;\n    } else if (minutesElapsed >= 2 && minutesElapsed < 5) {\n      backoffAmountInSeconds = 15;\n    } else if (minutesElapsed >= 5 && minutesElapsed < 60) {\n      backoffAmountInSeconds = 30;\n    } else if (minutesElapsed >= 60) {\n      backoffAmountInSeconds = 300; // 5 minutes\n    }\n    return backoffAmountInSeconds * 1000; // return an amount of milliseconds\n  }\n\n  private stringToDate(date: string | number | Date): number | Date {\n    function isString(x: any) {\n      return Object.prototype.toString.call(x) === '[object String]';\n    }\n    return isString(date) ? parseISO(date as string) : (date as number | Date);\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n//# sourceMappingURL=delayWhen.js.map","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","/*!\n * perfect-scrollbar v1.5.0\n * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors\n * Licensed under MIT\n */\n\nfunction get(element) {\n  return getComputedStyle(element);\n}\n\nfunction set(element, obj) {\n  for (var key in obj) {\n    var val = obj[key];\n    if (typeof val === 'number') {\n      val = val + \"px\";\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nfunction div(className) {\n  var div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nvar elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nfunction matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nfunction remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nfunction queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }\n  );\n}\n\nvar cls = {\n  main: 'ps',\n  rtl: 'ps__rtl',\n  element: {\n    thumb: function (x) { return (\"ps__thumb-\" + x); },\n    rail: function (x) { return (\"ps__rail-\" + x); },\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: function (x) { return (\"ps--active-\" + x); },\n    scrolling: function (x) { return (\"ps--scrolling-\" + x); },\n  },\n};\n\n/*\n * Helper methods\n */\nvar scrollingClassTimeout = { x: null, y: null };\n\nfunction addScrollingClass(i, x) {\n  var classList = i.element.classList;\n  var className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nfunction removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },\n    i.settings.scrollingThreshold\n  );\n}\n\nfunction setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n\nvar EventElement = function EventElement(element) {\n  this.element = element;\n  this.handlers = {};\n};\n\nvar prototypeAccessors = { isEmpty: { configurable: true } };\n\nEventElement.prototype.bind = function bind (eventName, handler) {\n  if (typeof this.handlers[eventName] === 'undefined') {\n    this.handlers[eventName] = [];\n  }\n  this.handlers[eventName].push(handler);\n  this.element.addEventListener(eventName, handler, false);\n};\n\nEventElement.prototype.unbind = function unbind (eventName, target) {\n    var this$1 = this;\n\n  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {\n    if (target && handler !== target) {\n      return true;\n    }\n    this$1.element.removeEventListener(eventName, handler, false);\n    return false;\n  });\n};\n\nEventElement.prototype.unbindAll = function unbindAll () {\n  for (var name in this.handlers) {\n    this.unbind(name);\n  }\n};\n\nprototypeAccessors.isEmpty.get = function () {\n    var this$1 = this;\n\n  return Object.keys(this.handlers).every(\n    function (key) { return this$1.handlers[key].length === 0; }\n  );\n};\n\nObject.defineProperties( EventElement.prototype, prototypeAccessors );\n\nvar EventManager = function EventManager() {\n  this.eventElements = [];\n};\n\nEventManager.prototype.eventElement = function eventElement (element) {\n  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];\n  if (!ee) {\n    ee = new EventElement(element);\n    this.eventElements.push(ee);\n  }\n  return ee;\n};\n\nEventManager.prototype.bind = function bind (element, eventName, handler) {\n  this.eventElement(element).bind(eventName, handler);\n};\n\nEventManager.prototype.unbind = function unbind (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  ee.unbind(eventName, handler);\n\n  if (ee.isEmpty) {\n    // remove\n    this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n  }\n};\n\nEventManager.prototype.unbindAll = function unbindAll () {\n  this.eventElements.forEach(function (e) { return e.unbindAll(); });\n  this.eventElements = [];\n};\n\nEventManager.prototype.once = function once (element, eventName, handler) {\n  var ee = this.eventElement(element);\n  var onceHandler = function (evt) {\n    ee.unbind(eventName, onceHandler);\n    handler(evt);\n  };\n  ee.bind(eventName, onceHandler);\n};\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nfunction processScrollDiff(\n  i,\n  axis,\n  diff,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down' ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right' ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);\n}\n\nfunction processScrollDiff$1(\n  i,\n  diff,\n  ref,\n  useScrollingClass,\n  forceFireReachEvent\n) {\n  var contentHeight = ref[0];\n  var containerHeight = ref[1];\n  var scrollTop = ref[2];\n  var y = ref[3];\n  var up = ref[4];\n  var down = ref[5];\n  if ( useScrollingClass === void 0 ) useScrollingClass = true;\n  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;\n\n  var element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent((\"ps-scroll-\" + y)));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + up)));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent((\"ps-scroll-\" + down)));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent((\"ps-\" + y + \"-reach-\" + (i.reach[y]))));\n  }\n}\n\nfunction toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nfunction isEditable(el) {\n  return (\n    matches(el, 'input,[contenteditable]') ||\n    matches(el, 'select,[contenteditable]') ||\n    matches(el, 'textarea,[contenteditable]') ||\n    matches(el, 'button,[contenteditable]')\n  );\n}\n\nfunction outerWidth(element) {\n  var styles = get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nvar env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      ('maxTouchPoints' in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n\nfunction updateGeometry(i) {\n  var element = i.element;\n  var roundedScrollTop = Math.floor(element.scrollTop);\n  var rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.ceil(rect.width);\n  i.containerHeight = Math.ceil(rect.height);\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  var xRailOffset = { width: i.railXWidth };\n  var roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  set(i.scrollbarXRail, xRailOffset);\n\n  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  set(i.scrollbarYRail, yRailOffset);\n\n  set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n\nfunction clickRail(i) {\n  var element = i.element;\n\n  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {\n    var positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    var direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });\n  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {\n    var positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n\nfunction dragThumb(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail' ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail' ]);\n}\n\nfunction bindMouseScrollHandler(\n  i,\n  ref\n) {\n  var containerHeight = ref[0];\n  var contentHeight = ref[1];\n  var pageY = ref[2];\n  var railYHeight = ref[3];\n  var scrollbarY = ref[4];\n  var scrollbarYHeight = ref[5];\n  var scrollTop = ref[6];\n  var y = ref[7];\n  var scrollbarYRail = ref[8];\n\n  var element = i.element;\n\n  var startingScrollTop = null;\n  var startingMousePageY = null;\n  var scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', function (e) {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], 'touchstart', function (e) {\n    bindMoves(e, true);\n  });\n}\n\nfunction keyboard(i) {\n  var element = i.element;\n\n  var elementHovered = function () { return matches(element, ':hover'); };\n  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    var scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', function (e) {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    var activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    var deltaX = 0;\n    var deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n\nfunction wheel(i) {\n  var element = i.element;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    var roundedScrollTop = Math.floor(element.scrollTop);\n    var isTop = element.scrollTop === 0;\n    var isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    var isLeft = element.scrollLeft === 0;\n    var isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    var hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    var deltaX = e.deltaX;\n    var deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    var ref = getDeltaFromEvent(e);\n    var deltaX = ref[0];\n    var deltaY = ref[1];\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    var shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n\nfunction touch(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  var element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    var scrollTop = Math.floor(element.scrollTop);\n    var scrollLeft = element.scrollLeft;\n    var magnitudeX = Math.abs(deltaX);\n    var magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  var startOffset = {};\n  var startTime = 0;\n  var speed = {};\n  var easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    var touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    var cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      var style = get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      var touch = getTouch(e);\n\n      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      var differenceX = currentOffset.pageX - startOffset.pageX;\n      var differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      var currentTime = new Date().getTime();\n\n      var timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n\nvar defaultSettings = function () { return ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n}); };\n\nvar handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard: keyboard,\n  wheel: wheel,\n  touch: touch,\n};\n\nvar PerfectScrollbar = function PerfectScrollbar(element, userSettings) {\n  var this$1 = this;\n  if ( userSettings === void 0 ) userSettings = {};\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!element || !element.nodeName) {\n    throw new Error('no element is specified to initialize PerfectScrollbar');\n  }\n\n  this.element = element;\n\n  element.classList.add(cls.main);\n\n  this.settings = defaultSettings();\n  for (var key in userSettings) {\n    this.settings[key] = userSettings[key];\n  }\n\n  this.containerWidth = null;\n  this.containerHeight = null;\n  this.contentWidth = null;\n  this.contentHeight = null;\n\n  var focus = function () { return element.classList.add(cls.state.focus); };\n  var blur = function () { return element.classList.remove(cls.state.focus); };\n\n  this.isRtl = get(element).direction === 'rtl';\n  if (this.isRtl === true) {\n    element.classList.add(cls.rtl);\n  }\n  this.isNegativeScroll = (function () {\n    var originalScrollLeft = element.scrollLeft;\n    var result = null;\n    element.scrollLeft = -1;\n    result = element.scrollLeft < 0;\n    element.scrollLeft = originalScrollLeft;\n    return result;\n  })();\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? element.scrollWidth - element.clientWidth\n    : 0;\n  this.event = new EventManager();\n  this.ownerDocument = element.ownerDocument || document;\n\n  this.scrollbarXRail = div(cls.element.rail('x'));\n  element.appendChild(this.scrollbarXRail);\n  this.scrollbarX = div(cls.element.thumb('x'));\n  this.scrollbarXRail.appendChild(this.scrollbarX);\n  this.scrollbarX.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarX, 'focus', focus);\n  this.event.bind(this.scrollbarX, 'blur', blur);\n  this.scrollbarXActive = null;\n  this.scrollbarXWidth = null;\n  this.scrollbarXLeft = null;\n  var railXStyle = get(this.scrollbarXRail);\n  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n  if (isNaN(this.scrollbarXBottom)) {\n    this.isScrollbarXUsingBottom = false;\n    this.scrollbarXTop = toInt(railXStyle.top);\n  } else {\n    this.isScrollbarXUsingBottom = true;\n  }\n  this.railBorderXWidth =\n    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n  // Set rail to display:block to calculate margins\n  set(this.scrollbarXRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n  set(this.scrollbarXRail, { display: '' });\n  this.railXWidth = null;\n  this.railXRatio = null;\n\n  this.scrollbarYRail = div(cls.element.rail('y'));\n  element.appendChild(this.scrollbarYRail);\n  this.scrollbarY = div(cls.element.thumb('y'));\n  this.scrollbarYRail.appendChild(this.scrollbarY);\n  this.scrollbarY.setAttribute('tabindex', 0);\n  this.event.bind(this.scrollbarY, 'focus', focus);\n  this.event.bind(this.scrollbarY, 'blur', blur);\n  this.scrollbarYActive = null;\n  this.scrollbarYHeight = null;\n  this.scrollbarYTop = null;\n  var railYStyle = get(this.scrollbarYRail);\n  this.scrollbarYRight = parseInt(railYStyle.right, 10);\n  if (isNaN(this.scrollbarYRight)) {\n    this.isScrollbarYUsingRight = false;\n    this.scrollbarYLeft = toInt(railYStyle.left);\n  } else {\n    this.isScrollbarYUsingRight = true;\n  }\n  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n  this.railBorderYWidth =\n    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railYMarginHeight =\n    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n  set(this.scrollbarYRail, { display: '' });\n  this.railYHeight = null;\n  this.railYRatio = null;\n\n  this.reach = {\n    x:\n      element.scrollLeft <= 0\n        ? 'start'\n        : element.scrollLeft >= this.contentWidth - this.containerWidth\n        ? 'end'\n        : null,\n    y:\n      element.scrollTop <= 0\n        ? 'start'\n        : element.scrollTop >= this.contentHeight - this.containerHeight\n        ? 'end'\n        : null,\n  };\n\n  this.isAlive = true;\n\n  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });\n\n  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n  this.lastScrollLeft = element.scrollLeft; // for onScroll only\n  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });\n  updateGeometry(this);\n};\n\nPerfectScrollbar.prototype.update = function update () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  // Recalcuate negative scrollLeft adjustment\n  this.negativeScrollAdjustment = this.isNegativeScroll\n    ? this.element.scrollWidth - this.element.clientWidth\n    : 0;\n\n  // Recalculate rail margins\n  set(this.scrollbarXRail, { display: 'block' });\n  set(this.scrollbarYRail, { display: 'block' });\n  this.railXMarginWidth =\n    toInt(get(this.scrollbarXRail).marginLeft) +\n    toInt(get(this.scrollbarXRail).marginRight);\n  this.railYMarginHeight =\n    toInt(get(this.scrollbarYRail).marginTop) +\n    toInt(get(this.scrollbarYRail).marginBottom);\n\n  // Hide scrollbars not to affect scrollWidth and scrollHeight\n  set(this.scrollbarXRail, { display: 'none' });\n  set(this.scrollbarYRail, { display: 'none' });\n\n  updateGeometry(this);\n\n  processScrollDiff(this, 'top', 0, false, true);\n  processScrollDiff(this, 'left', 0, false, true);\n\n  set(this.scrollbarXRail, { display: '' });\n  set(this.scrollbarYRail, { display: '' });\n};\n\nPerfectScrollbar.prototype.onScroll = function onScroll (e) {\n  if (!this.isAlive) {\n    return;\n  }\n\n  updateGeometry(this);\n  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n  processScrollDiff(\n    this,\n    'left',\n    this.element.scrollLeft - this.lastScrollLeft\n  );\n\n  this.lastScrollTop = Math.floor(this.element.scrollTop);\n  this.lastScrollLeft = this.element.scrollLeft;\n};\n\nPerfectScrollbar.prototype.destroy = function destroy () {\n  if (!this.isAlive) {\n    return;\n  }\n\n  this.event.unbindAll();\n  remove(this.scrollbarX);\n  remove(this.scrollbarY);\n  remove(this.scrollbarXRail);\n  remove(this.scrollbarYRail);\n  this.removePsClasses();\n\n  // unset elements\n  this.element = null;\n  this.scrollbarX = null;\n  this.scrollbarY = null;\n  this.scrollbarXRail = null;\n  this.scrollbarYRail = null;\n\n  this.isAlive = false;\n};\n\nPerfectScrollbar.prototype.removePsClasses = function removePsClasses () {\n  this.element.className = this.element.className\n    .split(' ')\n    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })\n    .join(' ');\n};\n\nexport default PerfectScrollbar;\n//# sourceMappingURL=perfect-scrollbar.esm.js.map\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import { __decorate, __param } from 'tslib';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { auditTime, takeUntil, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport { InjectionToken, EventEmitter, NgZone, KeyValueDiffers, ElementRef, Inject, PLATFORM_ID, Optional, Input, Output, Directive, ChangeDetectorRef, HostBinding, ViewChild, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction PerfectScrollbarComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelement(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ps-at-top\", ctx_r33.states.top)(\"ps-at-left\", ctx_r33.states.left)(\"ps-at-right\", ctx_r33.states.right)(\"ps-at-bottom\", ctx_r33.states.bottom);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r33.indicatorY && ctx_r33.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r33.indicatorX && ctx_r33.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r33.indicatorX && ctx_r33.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r33.indicatorY && ctx_r33.interaction);\n} }\nconst _c0 = [\"*\"];\nconst PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\nclass Geometry {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n}\nclass Position {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nconst PerfectScrollbarEvents = [\n    'psScrollY',\n    'psScrollX',\n    'psScrollUp',\n    'psScrollDown',\n    'psScrollLeft',\n    'psScrollRight',\n    'psYReachEnd',\n    'psYReachStart',\n    'psXReachEnd',\n    'psXReachStart'\n];\nclass PerfectScrollbarConfig {\n    constructor(config = {}) {\n        this.assign(config);\n    }\n    assign(config = {}) {\n        for (const key in config) {\n            this[key] = config[key];\n        }\n    }\n}\n\nlet PerfectScrollbarDirective = class PerfectScrollbarDirective {\n    constructor(zone, differs, elementRef, platformId, defaults) {\n        this.zone = zone;\n        this.differs = differs;\n        this.elementRef = elementRef;\n        this.platformId = platformId;\n        this.defaults = defaults;\n        this.instance = null;\n        this.ro = null;\n        this.timeout = null;\n        this.animation = null;\n        this.configDiff = null;\n        this.ngDestroy = new Subject();\n        this.disabled = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\n            const config = new PerfectScrollbarConfig(this.defaults);\n            config.assign(this.config); // Custom configuration\n            this.zone.runOutsideAngular(() => {\n                this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\n            });\n            if (!this.configDiff) {\n                this.configDiff = this.differs.find(this.config || {}).create();\n                this.configDiff.diff(this.config || {});\n            }\n            this.zone.runOutsideAngular(() => {\n                this.ro = new ResizeObserver(() => {\n                    this.update();\n                });\n                if (this.elementRef.nativeElement.children[0]) {\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\n                }\n                this.ro.observe(this.elementRef.nativeElement);\n            });\n            this.zone.runOutsideAngular(() => {\n                PerfectScrollbarEvents.forEach((eventName) => {\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\n                    fromEvent(this.elementRef.nativeElement, eventType)\n                        .pipe(auditTime(20), takeUntil(this.ngDestroy))\n                        .subscribe((event) => {\n                        this[eventName].emit(event);\n                    });\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.complete();\n            if (this.ro) {\n                this.ro.disconnect();\n            }\n            if (this.timeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.timeout);\n            }\n            this.zone.runOutsideAngular(() => {\n                if (this.instance) {\n                    this.instance.destroy();\n                }\n            });\n            this.instance = null;\n        }\n    }\n    ngDoCheck() {\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\n            const changes = this.configDiff.diff(this.config || {});\n            if (changes) {\n                this.ngOnDestroy();\n                this.ngOnInit();\n            }\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n                if (changes['disabled'].currentValue === true) {\n                    this.ngOnDestroy();\n                }\n                else if (changes['disabled'].currentValue === false) {\n                    this.ngOnInit();\n                }\n            }\n        }\n    }\n    ps() {\n        return this.instance;\n    }\n    update() {\n        if (typeof window !== 'undefined') {\n            if (this.timeout) {\n                window.clearTimeout(this.timeout);\n            }\n            this.timeout = window.setTimeout(() => {\n                if (!this.disabled && this.configDiff) {\n                    try {\n                        this.zone.runOutsideAngular(() => {\n                            if (this.instance) {\n                                this.instance.update();\n                            }\n                        });\n                    }\n                    catch (error) {\n                        // Update can be finished after destroy so catch errors\n                    }\n                }\n            }, 0);\n        }\n    }\n    geometry(prefix = 'scroll') {\n        return new Geometry(this.elementRef.nativeElement[prefix + 'Left'], this.elementRef.nativeElement[prefix + 'Top'], this.elementRef.nativeElement[prefix + 'Width'], this.elementRef.nativeElement[prefix + 'Height']);\n    }\n    position(absolute = false) {\n        if (!absolute && this.instance) {\n            return new Position(this.instance.reach.x || 0, this.instance.reach.y || 0);\n        }\n        else {\n            return new Position(this.elementRef.nativeElement.scrollLeft, this.elementRef.nativeElement.scrollTop);\n        }\n    }\n    scrollable(direction = 'any') {\n        const element = this.elementRef.nativeElement;\n        if (direction === 'any') {\n            return element.classList.contains('ps--active-x') ||\n                element.classList.contains('ps--active-y');\n        }\n        else if (direction === 'both') {\n            return element.classList.contains('ps--active-x') &&\n                element.classList.contains('ps--active-y');\n        }\n        else {\n            return element.classList.contains('ps--active-' + direction);\n        }\n    }\n    scrollTo(x, y, speed) {\n        if (!this.disabled) {\n            if (y == null && speed == null) {\n                this.animateScrolling('scrollTop', x, speed);\n            }\n            else {\n                if (x != null) {\n                    this.animateScrolling('scrollLeft', x, speed);\n                }\n                if (y != null) {\n                    this.animateScrolling('scrollTop', y, speed);\n                }\n            }\n        }\n    }\n    scrollToX(x, speed) {\n        this.animateScrolling('scrollLeft', x, speed);\n    }\n    scrollToY(y, speed) {\n        this.animateScrolling('scrollTop', y, speed);\n    }\n    scrollToTop(offset, speed) {\n        this.animateScrolling('scrollTop', (offset || 0), speed);\n    }\n    scrollToLeft(offset, speed) {\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\n    }\n    scrollToRight(offset, speed) {\n        const left = this.elementRef.nativeElement.scrollWidth -\n            this.elementRef.nativeElement.clientWidth;\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\n    }\n    scrollToBottom(offset, speed) {\n        const top = this.elementRef.nativeElement.scrollHeight -\n            this.elementRef.nativeElement.clientHeight;\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\n    }\n    scrollToElement(qs, offset, speed) {\n        const element = this.elementRef.nativeElement.querySelector(qs);\n        if (element) {\n            const elementPos = element.getBoundingClientRect();\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\n                const position = elementPos.left - scrollerPos.left + currentPos;\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\n            }\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\n                const position = elementPos.top - scrollerPos.top + currentPos;\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\n            }\n        }\n    }\n    animateScrolling(target, value, speed) {\n        if (this.animation) {\n            window.cancelAnimationFrame(this.animation);\n            this.animation = null;\n        }\n        if (!speed || typeof window === 'undefined') {\n            this.elementRef.nativeElement[target] = value;\n        }\n        else if (value !== this.elementRef.nativeElement[target]) {\n            let newValue = 0;\n            let scrollCount = 0;\n            let oldTimestamp = performance.now();\n            let oldValue = this.elementRef.nativeElement[target];\n            const cosParameter = (oldValue - value) / 2;\n            const step = (newTimestamp) => {\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\n                // Only continue animation if scroll position has not changed\n                if (this.elementRef.nativeElement[target] === oldValue) {\n                    if (scrollCount >= Math.PI) {\n                        this.animateScrolling(target, value, 0);\n                    }\n                    else {\n                        this.elementRef.nativeElement[target] = newValue;\n                        // On a zoomed out page the resulting offset may differ\n                        oldValue = this.elementRef.nativeElement[target];\n                        oldTimestamp = newTimestamp;\n                        this.animation = window.requestAnimationFrame(step);\n                    }\n                }\n            };\n            window.requestAnimationFrame(step);\n        }\n    }\n};\nPerfectScrollbarDirective.ɵfac = function PerfectScrollbarDirective_Factory(t) { return new (t || PerfectScrollbarDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(PERFECT_SCROLLBAR_CONFIG, 8)); };\nPerfectScrollbarDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PerfectScrollbarDirective, selectors: [[\"\", \"perfectScrollbar\", \"\"]], inputs: { disabled: \"disabled\", config: [\"perfectScrollbar\", \"config\"] }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nPerfectScrollbarDirective.ctorParameters = () => [\n    { type: NgZone },\n    { type: KeyValueDiffers },\n    { type: ElementRef },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PERFECT_SCROLLBAR_CONFIG,] }] }\n];\n__decorate([\n    Input()\n], PerfectScrollbarDirective.prototype, \"disabled\", void 0);\n__decorate([\n    Input('perfectScrollbar')\n], PerfectScrollbarDirective.prototype, \"config\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollY\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollX\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollUp\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollDown\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollLeft\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psScrollRight\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psYReachEnd\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psYReachStart\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psXReachEnd\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarDirective.prototype, \"psXReachStart\", void 0);\nPerfectScrollbarDirective = __decorate([ __param(3, Inject(PLATFORM_ID)),\n    __param(4, Optional()), __param(4, Inject(PERFECT_SCROLLBAR_CONFIG))\n], PerfectScrollbarDirective);\n\nlet PerfectScrollbarComponent = class PerfectScrollbarComponent {\n    constructor(zone, cdRef, platformId) {\n        this.zone = zone;\n        this.cdRef = cdRef;\n        this.platformId = platformId;\n        this.states = {};\n        this.indicatorX = false;\n        this.indicatorY = false;\n        this.interaction = false;\n        this.scrollPositionX = 0;\n        this.scrollPositionY = 0;\n        this.scrollDirectionX = 0;\n        this.scrollDirectionY = 0;\n        this.usePropagationX = false;\n        this.usePropagationY = false;\n        this.allowPropagationX = false;\n        this.allowPropagationY = false;\n        this.stateTimeout = null;\n        this.ngDestroy = new Subject();\n        this.stateUpdate = new Subject();\n        this.disabled = false;\n        this.usePSClass = true;\n        this.autoPropagation = false;\n        this.scrollIndicators = false;\n        this.psScrollY = new EventEmitter();\n        this.psScrollX = new EventEmitter();\n        this.psScrollUp = new EventEmitter();\n        this.psScrollDown = new EventEmitter();\n        this.psScrollLeft = new EventEmitter();\n        this.psScrollRight = new EventEmitter();\n        this.psYReachEnd = new EventEmitter();\n        this.psYReachStart = new EventEmitter();\n        this.psXReachEnd = new EventEmitter();\n        this.psXReachStart = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.stateUpdate\n                .pipe(takeUntil(this.ngDestroy), distinctUntilChanged((a, b) => (a === b && !this.stateTimeout)))\n                .subscribe((state) => {\n                if (this.stateTimeout && typeof window !== 'undefined') {\n                    window.clearTimeout(this.stateTimeout);\n                    this.stateTimeout = null;\n                }\n                if (state === 'x' || state === 'y') {\n                    this.interaction = false;\n                    if (state === 'x') {\n                        this.indicatorX = false;\n                        this.states.left = false;\n                        this.states.right = false;\n                        if (this.autoPropagation && this.usePropagationX) {\n                            this.allowPropagationX = false;\n                        }\n                    }\n                    else if (state === 'y') {\n                        this.indicatorY = false;\n                        this.states.top = false;\n                        this.states.bottom = false;\n                        if (this.autoPropagation && this.usePropagationY) {\n                            this.allowPropagationY = false;\n                        }\n                    }\n                }\n                else {\n                    if (state === 'left' || state === 'right') {\n                        this.states.left = false;\n                        this.states.right = false;\n                        this.states[state] = true;\n                        if (this.autoPropagation && this.usePropagationX) {\n                            this.indicatorX = true;\n                        }\n                    }\n                    else if (state === 'top' || state === 'bottom') {\n                        this.states.top = false;\n                        this.states.bottom = false;\n                        this.states[state] = true;\n                        if (this.autoPropagation && this.usePropagationY) {\n                            this.indicatorY = true;\n                        }\n                    }\n                    if (this.autoPropagation && typeof window !== 'undefined') {\n                        this.stateTimeout = window.setTimeout(() => {\n                            this.indicatorX = false;\n                            this.indicatorY = false;\n                            this.stateTimeout = null;\n                            if (this.interaction && (this.states.left || this.states.right)) {\n                                this.allowPropagationX = true;\n                            }\n                            if (this.interaction && (this.states.top || this.states.bottom)) {\n                                this.allowPropagationY = true;\n                            }\n                            this.cdRef.markForCheck();\n                        }, 500);\n                    }\n                }\n                this.cdRef.markForCheck();\n                this.cdRef.detectChanges();\n            });\n            this.zone.runOutsideAngular(() => {\n                if (this.directiveRef) {\n                    const element = this.directiveRef.elementRef.nativeElement;\n                    fromEvent(element, 'wheel')\n                        .pipe(takeUntil(this.ngDestroy))\n                        .subscribe((event) => {\n                        if (!this.disabled && this.autoPropagation) {\n                            const scrollDeltaX = event.deltaX;\n                            const scrollDeltaY = event.deltaY;\n                            this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                        }\n                    });\n                    fromEvent(element, 'touchmove')\n                        .pipe(takeUntil(this.ngDestroy))\n                        .subscribe((event) => {\n                        if (!this.disabled && this.autoPropagation) {\n                            const scrollPositionX = event.touches[0].clientX;\n                            const scrollPositionY = event.touches[0].clientY;\n                            const scrollDeltaX = scrollPositionX - this.scrollPositionX;\n                            const scrollDeltaY = scrollPositionY - this.scrollPositionY;\n                            this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                            this.scrollPositionX = scrollPositionX;\n                            this.scrollPositionY = scrollPositionY;\n                        }\n                    });\n                    merge(fromEvent(element, 'ps-scroll-x')\n                        .pipe(mapTo('x')), fromEvent(element, 'ps-scroll-y')\n                        .pipe(mapTo('y')), fromEvent(element, 'ps-x-reach-end')\n                        .pipe(mapTo('right')), fromEvent(element, 'ps-y-reach-end')\n                        .pipe(mapTo('bottom')), fromEvent(element, 'ps-x-reach-start')\n                        .pipe(mapTo('left')), fromEvent(element, 'ps-y-reach-start')\n                        .pipe(mapTo('top')))\n                        .pipe(takeUntil(this.ngDestroy))\n                        .subscribe((state) => {\n                        if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\n                            this.stateUpdate.next(state);\n                        }\n                    });\n                }\n            });\n            window.setTimeout(() => {\n                PerfectScrollbarEvents.forEach((eventName) => {\n                    if (this.directiveRef) {\n                        this.directiveRef[eventName] = this[eventName];\n                    }\n                });\n            }, 0);\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngDestroy.next();\n            this.ngDestroy.unsubscribe();\n            if (this.stateTimeout && typeof window !== 'undefined') {\n                window.clearTimeout(this.stateTimeout);\n            }\n        }\n    }\n    ngDoCheck() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\n                const element = this.directiveRef.elementRef.nativeElement;\n                this.usePropagationX = element.classList.contains('ps--active-x');\n                this.usePropagationY = element.classList.contains('ps--active-y');\n            }\n        }\n    }\n    checkPropagation(event, deltaX, deltaY) {\n        this.interaction = true;\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\n        if ((this.usePropagationX && this.usePropagationY) ||\n            (this.usePropagationX && (!this.allowPropagationX ||\n                (this.scrollDirectionX !== scrollDirectionX))) ||\n            (this.usePropagationY && (!this.allowPropagationY ||\n                (this.scrollDirectionY !== scrollDirectionY)))) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (!!deltaX) {\n            this.scrollDirectionX = scrollDirectionX;\n        }\n        if (!!deltaY) {\n            this.scrollDirectionY = scrollDirectionY;\n        }\n        this.stateUpdate.next('interaction');\n        this.cdRef.detectChanges();\n    }\n};\nPerfectScrollbarComponent.ɵfac = function PerfectScrollbarComponent_Factory(t) { return new (t || PerfectScrollbarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nPerfectScrollbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PerfectScrollbarComponent, selectors: [[\"perfect-scrollbar\"]], viewQuery: function PerfectScrollbarComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(PerfectScrollbarDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n    } }, hostVars: 4, hostBindings: function PerfectScrollbarComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps-show-limits\", ctx.autoPropagation)(\"ps-show-active\", ctx.scrollIndicators);\n    } }, inputs: { disabled: \"disabled\", usePSClass: \"usePSClass\", autoPropagation: \"autoPropagation\", scrollIndicators: \"scrollIndicators\", config: \"config\" }, outputs: { psScrollY: \"psScrollY\", psScrollX: \"psScrollX\", psScrollUp: \"psScrollUp\", psScrollDown: \"psScrollDown\", psScrollLeft: \"psScrollLeft\", psScrollRight: \"psScrollRight\", psYReachEnd: \"psYReachEnd\", psYReachStart: \"psYReachStart\", psXReachEnd: \"psXReachEnd\", psXReachStart: \"psXReachStart\" }, exportAs: [\"ngxPerfectScrollbar\"], ngContentSelectors: _c0, decls: 4, vars: 5, consts: [[2, \"position\", \"static\", 3, \"perfectScrollbar\", \"disabled\"], [1, \"ps-content\"], [\"class\", \"ps-overlay\", 3, \"ps-at-top\", \"ps-at-left\", \"ps-at-right\", \"ps-at-bottom\", 4, \"ngIf\"], [1, \"ps-overlay\"], [1, \"ps-indicator-top\"], [1, \"ps-indicator-left\"], [1, \"ps-indicator-right\"], [1, \"ps-indicator-bottom\"]], template: function PerfectScrollbarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, PerfectScrollbarComponent_div_3_Template, 5, 16, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps\", ctx.usePSClass);\n        ɵngcc0.ɵɵproperty(\"perfectScrollbar\", ctx.config)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollIndicators);\n    } }, directives: [PerfectScrollbarDirective, ɵngcc1.NgIf], styles: [\"perfect-scrollbar{position:relative;display:block;overflow:hidden;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar[hidden]{display:none}perfect-scrollbar[fxflex]{display:-webkit-box;display:flex;flex-direction:column;height:auto;min-width:0;min-height:0;-webkit-box-direction:column;-webkit-box-orient:column}perfect-scrollbar[fxflex]>.ps{flex:1 1 auto;width:auto;height:auto;min-width:0;min-height:0;-webkit-box-flex:1}perfect-scrollbar[fxlayout]>.ps,perfect-scrollbar[fxlayout]>.ps>.ps-content{display:-webkit-box;display:flex;flex:1 1 auto;flex-direction:inherit;align-items:inherit;align-content:inherit;justify-content:inherit;width:100%;height:100%;-webkit-box-align:inherit;-webkit-box-direction:inherit;-webkit-box-flex:1;-webkit-box-orient:inherit;-webkit-box-pack:inherit},perfect-scrollbar[fxlayout=row]>.ps,perfect-scrollbar[fxlayout=row]>.ps>.ps-content{flex-direction:row!important;-webkit-box-direction:row!important;-webkit-box-orient:row!important}perfect-scrollbar[fxlayout=column]>.ps,perfect-scrollbar[fxlayout=column]>.ps>.ps-content{flex-direction:column!important;-webkit-box-direction:column!important;-webkit-box-orient:column!important}perfect-scrollbar>.ps{position:static;display:block;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar>.ps textarea{-ms-overflow-style:scrollbar}perfect-scrollbar>.ps>.ps-overlay{position:absolute;top:0;right:0;bottom:0;left:0;display:block;overflow:hidden;pointer-events:none}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{position:absolute;opacity:0;-webkit-transition:opacity .3s ease-in-out;transition:opacity .3s ease-in-out}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{left:0;min-width:100%;min-height:24px}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{top:0;min-width:24px;min-height:100%}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left{left:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{right:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{bottom:0}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y{top:0!important;right:0!important;left:auto!important;width:10px;cursor:default;-webkit-transition:width .2s linear,opacity .2s linear,background-color .2s linear;transition:width .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y.ps--clicking,perfect-scrollbar>.ps.ps--active-y>.ps__rail-y:hover{width:15px}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x{top:auto!important;bottom:0!important;left:0!important;height:10px;cursor:default;-webkit-transition:height .2s linear,opacity .2s linear,background-color .2s linear;transition:height .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x.ps--clicking,perfect-scrollbar>.ps.ps--active-x>.ps__rail-x:hover{height:15px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-y{margin:0 0 10px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-x{margin:0 10px 0 0}perfect-scrollbar>.ps.ps--scrolling-x>.ps__rail-x,perfect-scrollbar>.ps.ps--scrolling-y>.ps__rail-y{opacity:.9;background-color:#eee}perfect-scrollbar.ps-show-always>.ps.ps--active-x>.ps__rail-x,perfect-scrollbar.ps-show-always>.ps.ps--active-y>.ps__rail-y{opacity:.6}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-top) .ps-indicator-top{opacity:1;background:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to bottom,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom{opacity:1;background:-webkit-gradient(linear,left bottom,left top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to top,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-left) .ps-indicator-left{opacity:1;background:-webkit-gradient(linear,left top,right top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to right,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-right) .ps-indicator-right{opacity:1;background:-webkit-gradient(linear,right top,left top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to left,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top{background:-webkit-gradient(linear,left top,left bottom,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to bottom,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom{background:-webkit-gradient(linear,left bottom,left top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to top,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left{background:-webkit-gradient(linear,left top,right top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to right,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right{background:-webkit-gradient(linear,right top,left top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to left,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show{opacity:1}\", \".ps{overflow:hidden!important;overflow-anchor:none;-ms-overflow-style:none;touch-action:auto;-ms-touch-action:auto}.ps__rail-x{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;height:15px;bottom:0;position:absolute}.ps__rail-y{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;width:15px;right:0;position:absolute}.ps--active-x>.ps__rail-x,.ps--active-y>.ps__rail-y{display:block;background-color:transparent}.ps--focus>.ps__rail-x,.ps--focus>.ps__rail-y,.ps--scrolling-x>.ps__rail-x,.ps--scrolling-y>.ps__rail-y,.ps:hover>.ps__rail-x,.ps:hover>.ps__rail-y{opacity:.6}.ps .ps__rail-x.ps--clicking,.ps .ps__rail-x:focus,.ps .ps__rail-x:hover,.ps .ps__rail-y.ps--clicking,.ps .ps__rail-y:focus,.ps .ps__rail-y:hover{background-color:#eee;opacity:.9}.ps__thumb-x{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,height .2s ease-in-out;-webkit-transition:background-color .2s linear,height .2s ease-in-out;height:6px;bottom:2px;position:absolute}.ps__thumb-y{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,width .2s ease-in-out;-webkit-transition:background-color .2s linear,width .2s ease-in-out;width:6px;right:2px;position:absolute}.ps__rail-x.ps--clicking .ps__thumb-x,.ps__rail-x:focus>.ps__thumb-x,.ps__rail-x:hover>.ps__thumb-x{background-color:#999;height:11px}.ps__rail-y.ps--clicking .ps__thumb-y,.ps__rail-y:focus>.ps__thumb-y,.ps__rail-y:hover>.ps__thumb-y{background-color:#999;width:11px}@supports (-ms-overflow-style:none){.ps{overflow:auto!important}}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){.ps{overflow:auto!important}}\"], encapsulation: 2 });\nPerfectScrollbarComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n__decorate([\n    Input()\n], PerfectScrollbarComponent.prototype, \"disabled\", void 0);\n__decorate([\n    Input()\n], PerfectScrollbarComponent.prototype, \"usePSClass\", void 0);\n__decorate([\n    HostBinding('class.ps-show-limits'),\n    Input()\n], PerfectScrollbarComponent.prototype, \"autoPropagation\", void 0);\n__decorate([\n    HostBinding('class.ps-show-active'),\n    Input()\n], PerfectScrollbarComponent.prototype, \"scrollIndicators\", void 0);\n__decorate([\n    Input()\n], PerfectScrollbarComponent.prototype, \"config\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollY\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollX\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollUp\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollDown\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollLeft\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psScrollRight\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psYReachEnd\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psYReachStart\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psXReachEnd\", void 0);\n__decorate([\n    Output()\n], PerfectScrollbarComponent.prototype, \"psXReachStart\", void 0);\n__decorate([\n    ViewChild(PerfectScrollbarDirective, { static: true })\n], PerfectScrollbarComponent.prototype, \"directiveRef\", void 0);\nPerfectScrollbarComponent = __decorate([ __param(2, Inject(PLATFORM_ID))\n], PerfectScrollbarComponent);\n\nlet PerfectScrollbarModule = class PerfectScrollbarModule {\n};\nPerfectScrollbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PerfectScrollbarModule });\nPerfectScrollbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PerfectScrollbarModule_Factory(t) { return new (t || PerfectScrollbarModule)(); }, imports: [[CommonModule],\n        CommonModule] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PerfectScrollbarDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[perfectScrollbar]',\n                exportAs: 'ngxPerfectScrollbar'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.ElementRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PERFECT_SCROLLBAR_CONFIG]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], config: [{\n            type: Input,\n            args: ['perfectScrollbar']\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PerfectScrollbarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'perfect-scrollbar',\n                exportAs: 'ngxPerfectScrollbar',\n                template: \"<div style=\\\"position: static;\\\" [class.ps]=\\\"usePSClass\\\" [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"disabled\\\">\\n  <div class=\\\"ps-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <div *ngIf=\\\"scrollIndicators\\\" class=\\\"ps-overlay\\\" [class.ps-at-top]=\\\"states.top\\\" [class.ps-at-left]=\\\"states.left\\\" [class.ps-at-right]=\\\"states.right\\\" [class.ps-at-bottom]=\\\"states.bottom\\\">\\n    <div class=\\\"ps-indicator-top\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-left\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-right\\\" [class.ps-indicator-show]=\\\"indicatorX && interaction\\\"></div>\\n    <div class=\\\"ps-indicator-bottom\\\" [class.ps-indicator-show]=\\\"indicatorY && interaction\\\"></div>\\n  </div>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"perfect-scrollbar{position:relative;display:block;overflow:hidden;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar[hidden]{display:none}perfect-scrollbar[fxflex]{display:-webkit-box;display:flex;flex-direction:column;height:auto;min-width:0;min-height:0;-webkit-box-direction:column;-webkit-box-orient:column}perfect-scrollbar[fxflex]>.ps{flex:1 1 auto;width:auto;height:auto;min-width:0;min-height:0;-webkit-box-flex:1}perfect-scrollbar[fxlayout]>.ps,perfect-scrollbar[fxlayout]>.ps>.ps-content{display:-webkit-box;display:flex;flex:1 1 auto;flex-direction:inherit;align-items:inherit;align-content:inherit;justify-content:inherit;width:100%;height:100%;-webkit-box-align:inherit;-webkit-box-direction:inherit;-webkit-box-flex:1;-webkit-box-orient:inherit;-webkit-box-pack:inherit},perfect-scrollbar[fxlayout=row]>.ps,perfect-scrollbar[fxlayout=row]>.ps>.ps-content{flex-direction:row!important;-webkit-box-direction:row!important;-webkit-box-orient:row!important}perfect-scrollbar[fxlayout=column]>.ps,perfect-scrollbar[fxlayout=column]>.ps>.ps-content{flex-direction:column!important;-webkit-box-direction:column!important;-webkit-box-orient:column!important}perfect-scrollbar>.ps{position:static;display:block;width:100%;height:100%;max-width:100%;max-height:100%}perfect-scrollbar>.ps textarea{-ms-overflow-style:scrollbar}perfect-scrollbar>.ps>.ps-overlay{position:absolute;top:0;right:0;bottom:0;left:0;display:block;overflow:hidden;pointer-events:none}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{position:absolute;opacity:0;-webkit-transition:opacity .3s ease-in-out;transition:opacity .3s ease-in-out}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{left:0;min-width:100%;min-height:24px}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{top:0;min-width:24px;min-height:100%}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left{left:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{right:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{bottom:0}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y{top:0!important;right:0!important;left:auto!important;width:10px;cursor:default;-webkit-transition:width .2s linear,opacity .2s linear,background-color .2s linear;transition:width .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y.ps--clicking,perfect-scrollbar>.ps.ps--active-y>.ps__rail-y:hover{width:15px}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x{top:auto!important;bottom:0!important;left:0!important;height:10px;cursor:default;-webkit-transition:height .2s linear,opacity .2s linear,background-color .2s linear;transition:height .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x.ps--clicking,perfect-scrollbar>.ps.ps--active-x>.ps__rail-x:hover{height:15px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-y{margin:0 0 10px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-x{margin:0 10px 0 0}perfect-scrollbar>.ps.ps--scrolling-x>.ps__rail-x,perfect-scrollbar>.ps.ps--scrolling-y>.ps__rail-y{opacity:.9;background-color:#eee}perfect-scrollbar.ps-show-always>.ps.ps--active-x>.ps__rail-x,perfect-scrollbar.ps-show-always>.ps.ps--active-y>.ps__rail-y{opacity:.6}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-top) .ps-indicator-top{opacity:1;background:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to bottom,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom{opacity:1;background:-webkit-gradient(linear,left bottom,left top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to top,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-left) .ps-indicator-left{opacity:1;background:-webkit-gradient(linear,left top,right top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to right,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-right) .ps-indicator-right{opacity:1;background:-webkit-gradient(linear,right top,left top,from(rgba(255,255,255,.5)),to(rgba(255,255,255,0)));background:linear-gradient(to left,rgba(255,255,255,.5) 0,rgba(255,255,255,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top{background:-webkit-gradient(linear,left top,left bottom,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to bottom,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom{background:-webkit-gradient(linear,left bottom,left top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to top,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left{background:-webkit-gradient(linear,left top,right top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to right,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right{background:-webkit-gradient(linear,right top,left top,from(rgba(170,170,170,.5)),to(rgba(170,170,170,0)));background:linear-gradient(to left,rgba(170,170,170,.5) 0,rgba(170,170,170,0) 100%)}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show{opacity:1}\", \".ps{overflow:hidden!important;overflow-anchor:none;-ms-overflow-style:none;touch-action:auto;-ms-touch-action:auto}.ps__rail-x{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;height:15px;bottom:0;position:absolute}.ps__rail-y{display:none;opacity:0;transition:background-color .2s linear,opacity .2s linear;-webkit-transition:background-color .2s linear,opacity .2s linear;width:15px;right:0;position:absolute}.ps--active-x>.ps__rail-x,.ps--active-y>.ps__rail-y{display:block;background-color:transparent}.ps--focus>.ps__rail-x,.ps--focus>.ps__rail-y,.ps--scrolling-x>.ps__rail-x,.ps--scrolling-y>.ps__rail-y,.ps:hover>.ps__rail-x,.ps:hover>.ps__rail-y{opacity:.6}.ps .ps__rail-x.ps--clicking,.ps .ps__rail-x:focus,.ps .ps__rail-x:hover,.ps .ps__rail-y.ps--clicking,.ps .ps__rail-y:focus,.ps .ps__rail-y:hover{background-color:#eee;opacity:.9}.ps__thumb-x{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,height .2s ease-in-out;-webkit-transition:background-color .2s linear,height .2s ease-in-out;height:6px;bottom:2px;position:absolute}.ps__thumb-y{background-color:#aaa;border-radius:6px;transition:background-color .2s linear,width .2s ease-in-out;-webkit-transition:background-color .2s linear,width .2s ease-in-out;width:6px;right:2px;position:absolute}.ps__rail-x.ps--clicking .ps__thumb-x,.ps__rail-x:focus>.ps__thumb-x,.ps__rail-x:hover>.ps__thumb-x{background-color:#999;height:11px}.ps__rail-y.ps--clicking .ps__thumb-y,.ps__rail-y:focus>.ps__thumb-y,.ps__rail-y:hover>.ps__thumb-y{background-color:#999;width:11px}@supports (-ms-overflow-style:none){.ps{overflow:auto!important}}@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){.ps{overflow:auto!important}}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], usePSClass: [{\n            type: Input\n        }], autoPropagation: [{\n            type: HostBinding,\n            args: ['class.ps-show-limits']\n        }, {\n            type: Input\n        }], scrollIndicators: [{\n            type: HostBinding,\n            args: ['class.ps-show-active']\n        }, {\n            type: Input\n        }], psScrollY: [{\n            type: Output\n        }], psScrollX: [{\n            type: Output\n        }], psScrollUp: [{\n            type: Output\n        }], psScrollDown: [{\n            type: Output\n        }], psScrollLeft: [{\n            type: Output\n        }], psScrollRight: [{\n            type: Output\n        }], psYReachEnd: [{\n            type: Output\n        }], psYReachStart: [{\n            type: Output\n        }], psXReachEnd: [{\n            type: Output\n        }], psXReachStart: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }], directiveRef: [{\n            type: ViewChild,\n            args: [PerfectScrollbarDirective, { static: true }]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PerfectScrollbarModule, { declarations: function () { return [PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CommonModule,\n        PerfectScrollbarComponent,\n        PerfectScrollbarDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PerfectScrollbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [PerfectScrollbarComponent, PerfectScrollbarDirective],\n                exports: [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Geometry, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarComponent, PerfectScrollbarConfig, PerfectScrollbarDirective, PerfectScrollbarModule, Position };\n\n//# sourceMappingURL=ngx-perfect-scrollbar.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r8.panelId)(\"ngClass\", ctx_r8._classList)(\"@transformMenu\", ctx_r8._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r8.ariaLabel || null)(\"aria-labelledby\", ctx_r8.ariaLabelledby || null)(\"aria-describedby\", ctx_r8.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AnimationsService {\n  constructor() {}\n\n  private static routeAnimationType: RouteAnimationType = 'ELEMENTS'; // 'NONE';\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(pageAnimations: boolean, elementsAnimations: boolean) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations ? 'ALL' : pageAnimations ? 'PAGE' : elementsAnimations ? 'ELEMENTS' : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { keyframes, style } from '@angular/animations';\n\nexport const wobble = [\n  style({\n    transform: 'translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)',\n    offset: 0.15,\n  }),\n  style({\n    transform: 'translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)',\n    offset: 0.3,\n  }),\n  style({\n    transform: 'translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)',\n    offset: 0.45,\n  }),\n  style({\n    transform: 'translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)',\n    offset: 0.6,\n  }),\n  style({\n    transform: 'translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)',\n    offset: 0.75,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const jello = [\n  // style({transform: 'none', offset: .111}),\n  style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.111 }),\n  style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.222 }),\n  style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.333 }),\n  style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.444 }),\n  style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.555 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.666 }),\n  style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n  style({\n    transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)',\n    offset: 0.888,\n  }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const swing = [\n  style({ transform: 'rotate3d(0, 0, 1, 15deg)', offset: 0.2 }),\n  style({ transform: 'rotate3d(0, 0, 1, -10deg)', offset: 0.4 }),\n  style({ transform: 'rotate3d(0, 0, 1, 5deg)', offset: 0.6 }),\n  style({ transform: 'rotate3d(0, 0, 1, -5deg)', offset: 0.8 }),\n  style({ transform: 'none', offset: 1 }),\n];\n\nexport const slideOutLeft = [\n  style({ transform: 'translate3d(0, 0, 0)', offset: 0 }),\n  style({ transform: 'translate3d(-150%, 0, 0)', opacity: 0, offset: 1 }),\n];\n\nexport const zoomOutRight = [\n  style({\n    transform: 'scale3d(.475, .475, .475) translate3d(-42px, 0, 0)',\n    offset: 0.4,\n  }),\n  style({\n    transform: 'scale(.1) translate3d(2000px, 0, 0)',\n    'transform-origin': 'right center',\n    offset: 1,\n  }),\n];\n\nexport const rotateOutUpRight = [\n  style({\n    transform: 'rotate3d(0, 0, 0, 0deg)',\n    opacity: 1,\n    'transform-origin': 'right bottom',\n    offset: 0,\n  }),\n  style({\n    transform: 'rotate3d(0, 0, 1, 90deg)',\n    opacity: 0,\n    'transform-origin': 'right bottom',\n    offset: 1,\n  }),\n];\n\nexport const flipOutY = [\n  style({ transform: 'perspective(400px)', offset: 0 }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, -15deg)',\n    opacity: 1,\n    offset: 0.33,\n  }),\n  style({\n    transform: 'perspective(400px) rotate3d(0, 1, 0, 90deg)',\n    opacity: 0,\n    offset: 1,\n  }),\n];\n","import { trigger, animate, transition, keyframes } from '@angular/animations';\n\nimport * as kf from './keyframes';\n\nexport const cardAnimation = trigger('cardAnimator', [\n  transition('* => wobble', animate(1000, keyframes(kf.wobble))),\n  transition('* => swing', animate(1000, keyframes(kf.swing))),\n  transition('* => jello', animate(1000, keyframes(kf.jello))),\n  transition('* => zoomOutRight', animate(1000, keyframes(kf.zoomOutRight))),\n  transition('* => slideOutLeft', animate(1000, keyframes(kf.slideOutLeft))),\n  transition('* => rotateOutUpRight', animate(1000, keyframes(kf.rotateOutUpRight))),\n  transition('* => flipOutY', animate(1000, keyframes(kf.flipOutY))),\n]);\n","import { trigger, animate, transition, style, state, query } from '@angular/animations';\n\nexport const fadeAnimation = trigger('fadeAnimation', [\n  transition('* => *', [\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\n    query(':leave', [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))], { optional: true }),\n    query(':enter', [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))], { optional: true }),\n  ]),\n]);\n\nexport const fadeOutAnimation = trigger('fadeOutAnimation', [\n  state(\n    '*',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  state(\n    'void',\n    style({\n      position: 'absolute',\n      'min-width': '100%',\n      'min-height': '100%',\n      'max-width': '100%',\n      display: 'flex',\n      'flex-direction': 'column',\n      flex: '1',\n      height: '100%',\n    }),\n  ),\n  transition('* => void', [\n    style({\n      opacity: 1,\n    }),\n    animate(\n      '150ms linear',\n      style({\n        opacity: 0,\n      }),\n    ),\n  ]),\n]);\n","import { trigger, animate, transition, style } from '@angular/animations';\n\nexport const expandAnimation = trigger('expandAnimation', [\n  transition(':enter', [style({ height: 0 }), animate('.4s ease', style({ height: '*' }))]),\n  transition(':leave', [animate('.4s ease', style({ height: 0 }))]),\n]);\n","import { animate, sequence, style, transition, trigger } from '@angular/animations';\n\nexport const listFadeAnimation = trigger('listFade', [\n  transition(':leave', [\n    style({ height: '*', opacity: '1', transform: 'translateX(0)' }),\n    sequence([\n      animate('250ms ease', style({ height: '*', opacity: 0, transform: 'translateX(50px)' })),\n      animate('100ms ease', style({ height: '0', opacity: 0, transform: 'translateX(50px)' })),\n    ]),\n  ]),\n  transition(':enter', [\n    style({ height: '0', opacity: '0', transform: 'translateX(50px)' }),\n    animate('350ms 350ms ease', style({ height: '*', opacity: 1, transform: 'translateX(0)' })),\n  ]),\n]);\n","import { trigger, transition, state, group, query, style, animate, animateChild } from '@angular/animations';\n\nexport const routeAnimation = trigger('routeAnimation', [\n  transition('* <=> *', [\n    // Initial state of new route\n    query(\n      ':enter',\n      style({\n        position: 'fixed',\n        width: '100%',\n        transform: 'translateX(-100%)',\n      }),\n      { optional: true },\n    ),\n    // move page off screen right on leave\n    query(\n      ':leave',\n      animate(\n        '500ms ease',\n        style({\n          position: 'fixed',\n          width: '100%',\n          transform: 'translateX(100%)',\n        }),\n      ),\n      {\n        optional: true,\n      },\n    ),\n    // move page in screen from left to right\n    query(':enter', animate('500ms ease', style({ opacity: 1, transform: 'translateX(0%)' })), { optional: true }),\n  ]),\n]);\n\nexport const hierarchicalRouteAnimation = trigger('routeAnimation', [\n  transition(':increment', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(-100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild(), {optional: true}),\n    ]),\n  ]),\n  transition(':decrement', [\n    style({ height: '!' }),\n    query(':enter', style({ transform: 'translateX(-100%)' }), { optional: true }),\n    query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 }), { optional: true }),\n    // animate the leave page away\n    group([\n      query(':leave', [animate('500ms ease-in-out', style({ transform: 'translateX(100%)' }))], {\n        optional: true,\n      }),\n      // and now reveal the enter\n      query(':enter', animate('500ms ease-in-out', style({ transform: 'translateX(0)' })), {\n        optional: true,\n      }),\n      // query('@fadeAnimation', animateChild() , {optional: true}),\n    ]),\n  ]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const rotateAnimation = trigger('rotateAnimation', [\n  state('initial', style({ transform: 'rotate(0deg)' })),\n  state('rotated', style({ transform: 'rotate(-180deg)' })),\n  transition('* => *', [animate('.4s ease')]),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollFabAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'scale(1)' })),\n  state('hide', style({ opacity: 0, transform: 'scale(0)' })),\n  transition('show => hide', animate('500ms ease-out')),\n  transition('hide => show', animate('500ms ease-in')),\n]);\n","import { trigger, animate, transition, style, state } from '@angular/animations';\n\nexport const scrollAnimation = trigger('scrollAnimation', [\n  state('show', style({ opacity: 1, transform: 'translateX(0)' })),\n  state('hide', style({ opacity: 0, transform: 'translateX(-100%)' })),\n  transition('show => hide', animate('700ms ease-out')),\n  transition('hide => show', animate('700ms ease-in')),\n]);\n","import { animate, query, style, transition, trigger, stagger, sequence } from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true,\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true,\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate('0.2s ease-in-out', style({ transform: 'translateY(-3%)', opacity: 0 })),\n        style({ position: 'fixed' }),\n      ],\n      { optional: true },\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static',\n        }),\n        animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n      ],\n      { optional: true },\n    ),\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(100, [\n      style({ transform: 'translateY(15%)', opacity: 0 }),\n      animate('0.5s ease-in-out', style({ transform: 'translateY(0%)', opacity: 1 })),\n    ]),\n    { optional: true },\n  ),\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routerTransition = trigger('routerTransition', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS),\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { trigger, animate, transition, style, state } from '@angular/animations';\nimport { SidenavState } from '@ngx-starter-kit/navigator';\n\nexport const sidenavAnimation = trigger('sidenavAnimation', [\n  state(SidenavState.Collapsed, style({ position: 'absolute', width: '66px' })),\n  state(SidenavState.CollapsedHover, style({ position: 'absolute', width: '270px' })),\n  state(SidenavState.Expanded, style({ position: 'relative', width: '270px' })),\n  state(\n    SidenavState.Mobile,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(-270px, 0, 0)',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    SidenavState.MobileOpen,\n    style({\n      position: 'absolute',\n      width: '270px',\n      transform: 'translate3d(0, 0, 0)',\n      visibility: 'visible',\n    }),\n  ),\n  transition(`${SidenavState.Expanded} => ${SidenavState.CollapsedHover}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.Expanded} => ${SidenavState.Collapsed}`, [\n    style({ position: 'absolute' }),\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(`${SidenavState.CollapsedHover} => ${SidenavState.Collapsed}`, [\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ]),\n  transition(\n    `${SidenavState.Collapsed} => ${SidenavState.CollapsedHover}`,\n    animate('300ms cubic-bezier(.35, 0, .25, 1)'),\n  ),\n  transition(`${SidenavState.Mobile} => ${SidenavState.MobileOpen}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n  transition(`${SidenavState.MobileOpen} => ${SidenavState.Mobile}`, animate('300ms cubic-bezier(.35, 0, .25, 1)')),\n]);\n\nexport const dropdownAnimation = trigger('dropdownAnimation', [\n  state('collapsed', style({ height: 0 })),\n  state('expanded', style({ height: '*' })),\n  transition('collapsed <=> expanded', [animate('400ms cubic-bezier(.35, 0, .25, 1)')]),\n]);\n","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r3._getArrowViewState())(\"@arrowPosition\", ctx_r3._getArrowViewState())(\"@allowChildren\", ctx_r3._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r3._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r3._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r3._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, ChangeDetectorRef, Optional, Inject, ViewChild, forwardRef, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MAT_DATE_FORMATS, DateAdapter, mixinColor } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r8._cellPadding)(\"padding-bottom\", ctx_r8._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r8.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r8.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r12._cellPadding)(\"padding-bottom\", ctx_r12._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r12._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r12._firstRowOffset >= ctx_r12.labelMinRequiredCells ? ctx_r12.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const item_r14 = ctx.$implicit; const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16._cellClicked(item_r14); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    const colIndex_r15 = ctx.index;\n    const rowIndex_r11 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r13._cellWidth)(\"padding-top\", ctx_r13._cellPadding)(\"padding-bottom\", ctx_r13._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r14.enabled)(\"mat-calendar-body-active\", ctx_r13._isActiveCell(rowIndex_r11, colIndex_r15));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r14.cssClasses)(\"tabindex\", ctx_r13._isActiveCell(rowIndex_r11, colIndex_r15) ? 0 : 0 - 1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r14.ariaLabel)(\"aria-disabled\", !item_r14.enabled || null)(\"aria-selected\", ctx_r13.selectedValue === item_r14.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r13.selectedValue === item_r14.value)(\"mat-calendar-body-today\", ctx_r13.todayValue === item_r14.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r14.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r10 = ctx.$implicit;\n    const rowIndex_r11 = ctx.index;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r11 === 0 && ctx_r9._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r10);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r20 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r20.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r20.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.activeDate = $event; })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27._dateSelected($event); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28._userSelected(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r22.activeDate)(\"selected\", ctx_r22.selected)(\"dateFilter\", ctx_r22.dateFilter)(\"maxDate\", ctx_r22.maxDate)(\"minDate\", ctx_r22.minDate)(\"dateClass\", ctx_r22.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r23.activeDate)(\"selected\", ctx_r23.selected)(\"dateFilter\", ctx_r23.dateFilter)(\"maxDate\", ctx_r23.maxDate)(\"minDate\", ctx_r23.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r36 = ɵngcc0.ɵɵnextContext(); return ctx_r36._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r24.activeDate)(\"selected\", ctx_r24.selected)(\"dateFilter\", ctx_r24.dateFilter)(\"maxDate\", ctx_r24.maxDate)(\"minDate\", ctx_r24.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\n/** @nocollapse */ MatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.changes;\n    /**\n     * A label for the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.calendarLabel;\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.openCalendarLabel;\n    /**\n     * A label for the previous month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMonthLabel;\n    /**\n     * A label for the next month button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMonthLabel;\n    /**\n     * A label for the previous year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevYearLabel;\n    /**\n     * A label for the next year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextYearLabel;\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.prevMultiYearLabel;\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.nextMultiYearLabel;\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMonthViewLabel;\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     * @type {?}\n     */\n    MatDatepickerIntl.prototype.switchToMultiYearViewLabel;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCalendarCell.prototype.value;\n    /** @type {?} */\n    MatCalendarCell.prototype.displayValue;\n    /** @type {?} */\n    MatCalendarCell.prototype.ariaLabel;\n    /** @type {?} */\n    MatCalendarCell.prototype.enabled;\n    /** @type {?} */\n    MatCalendarCell.prototype.cssClasses;\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell mat-focus-indicator\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", \"mat-focus-indicator\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell mat-focus-indicator\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"selectedValue === item.value\\\"\\n      (click)=\\\"_cellClicked(item)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      role=\\\"button\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content\\\"\\n        [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">\\n        {{item.displayValue}}\\n      </div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The label for the table. (e.g. \"Jan 2017\").\n     * @type {?}\n     */\n    MatCalendarBody.prototype.label;\n    /**\n     * The cells to display in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.rows;\n    /**\n     * The value in the table that corresponds to today.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.todayValue;\n    /**\n     * The value in the table that is currently selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValue;\n    /**\n     * The minimum number of free cells needed to fit the label in the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.labelMinRequiredCells;\n    /**\n     * The number of columns in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.numCols;\n    /**\n     * The cell number of the active cell in the table.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.activeCell;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.cellAspectRatio;\n    /**\n     * Emits when a new value is selected.\n     * @type {?}\n     */\n    MatCalendarBody.prototype.selectedValueChange;\n    /**\n     * The number of blank cells to put at the beginning for the first row.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._firstRowOffset;\n    /**\n     * Padding for the individual date cells.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellPadding;\n    /**\n     * Width of an individual cell.\n     * @type {?}\n     */\n    MatCalendarBody.prototype._cellWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarBody.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/month-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [selectedValue]=\\\"_selectedDate!\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatMonthView.prototype.dateClass;\n    /**\n     * Emits when a new date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype.selectedChange;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatMonthView.prototype._userSelection;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMonthView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMonthView.prototype._matCalendarBody;\n    /**\n     * The label for this month (e.g. \"January 2017\").\n     * @type {?}\n     */\n    MatMonthView.prototype._monthLabel;\n    /**\n     * Grid of calendar cells representing the dates of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._weeks;\n    /**\n     * The number of blank cells in the first row before the 1st of the month.\n     * @type {?}\n     */\n    MatMonthView.prototype._firstWeekOffset;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._selectedDate;\n    /**\n     * The date of the month that today falls on. Null if today is in another month.\n     * @type {?}\n     */\n    MatMonthView.prototype._todayDate;\n    /**\n     * The names of the weekdays.\n     * @type {?}\n     */\n    MatMonthView.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dateFormats;\n    /** @type {?} */\n    MatMonthView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMonthView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/multi-year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [selectedValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.dateFilter;\n    /**\n     * Emits when a new year is selected.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.selectedChange;\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatMultiYearView.prototype.yearSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatMultiYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatMultiYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the currently displayed years.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._years;\n    /**\n     * The year that today falls on.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._todayYear;\n    /**\n     * The year of the selected date. Null if the selected date is null.\n     * @type {?}\n     */\n    MatMultiYearView.prototype._selectedYear;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatMultiYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMultiYearView.prototype._dir;\n}\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/year-view.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._init()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [selectedValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._rerenderSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._activeDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._maxDate;\n    /**\n     * A function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatYearView.prototype.dateFilter;\n    /**\n     * Emits when a new month is selected.\n     * @type {?}\n     */\n    MatYearView.prototype.selectedChange;\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     * @type {?}\n     */\n    MatYearView.prototype.monthSelected;\n    /**\n     * Emits when any date is activated.\n     * @type {?}\n     */\n    MatYearView.prototype.activeDateChange;\n    /**\n     * The body of calendar table\n     * @type {?}\n     */\n    MatYearView.prototype._matCalendarBody;\n    /**\n     * Grid of calendar cells representing the months of the year.\n     * @type {?}\n     */\n    MatYearView.prototype._months;\n    /**\n     * The label for this year (e.g. \"2017\").\n     * @type {?}\n     */\n    MatYearView.prototype._yearLabel;\n    /**\n     * The month in this year that today falls on. Null if today is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._todayMonth;\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     * @type {?}\n     */\n    MatYearView.prototype._selectedMonth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dateFormats;\n    /** @type {?} */\n    MatYearView.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatYearView.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.periodButtonText, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._intl;\n    /** @type {?} */\n    MatCalendarHeader.prototype.calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendarHeader.prototype._dateFormats;\n}\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        const currentView = this.currentView;\n        /** @type {?} */\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, true);\n        ɵngcc0.ɵɵviewQuery(MatYearView, true);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView,\n        MatYearView,\n        MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\n      (_userSelection)=\\\"_userSelected()\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\nif (false) {\n    /**\n     * An input indicating the type of the header component, if set.\n     * @type {?}\n     */\n    MatCalendar.prototype.headerComponent;\n    /**\n     * A portal containing the header component type for this calendar.\n     * @type {?}\n     */\n    MatCalendar.prototype._calendarHeaderPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._intlChanges;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._moveFocusOnNextTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._startAt;\n    /**\n     * Whether the calendar should be started in month or year view.\n     * @type {?}\n     */\n    MatCalendar.prototype.startView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._minDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._maxDate;\n    /**\n     * Function used to filter which dates are selectable.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateFilter;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatCalendar.prototype.dateClass;\n    /**\n     * Emits when the currently selected date changes.\n     * @type {?}\n     */\n    MatCalendar.prototype.selectedChange;\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearSelected;\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthSelected;\n    /**\n     * Emits when any date is selected.\n     * @type {?}\n     */\n    MatCalendar.prototype._userSelection;\n    /**\n     * Reference to the current month view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.monthView;\n    /**\n     * Reference to the current year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.yearView;\n    /**\n     * Reference to the current multi-year view component.\n     * @type {?}\n     */\n    MatCalendar.prototype.multiYearView;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._clampedActiveDate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._currentView;\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     * @type {?}\n     */\n    MatCalendar.prototype.stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCalendar.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatDatepickerContentBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(elementRef, _changeDetectorRef) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Current state of the animation.\n         */\n        this._animationState = 'enter';\n        /**\n         * Emits when an animation has finished.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationDone.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, directives: [MatCalendar, ɵngcc5.CdkTrapFocus, ɵngcc1.NgClass], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._minDate\\\"\\n    [maxDate]=\\\"datepicker._maxDate\\\"\\n    [dateFilter]=\\\"datepicker._dateFilter\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"datepicker._selected\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (selectedChange)=\\\"datepicker.select($event)\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"datepicker.close()\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\nif (false) {\n    /**\n     * Reference to the internal calendar component.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._calendar;\n    /**\n     * Reference to the datepicker that created the overlay.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype.datepicker;\n    /**\n     * Whether the datepicker is above or below the input.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._isAbove;\n    /**\n     * Current state of the animation.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationState;\n    /**\n     * Emits when an animation has finished.\n     * @type {?}\n     */\n    MatDatepickerContent.prototype._animationDone;\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    MatDatepickerContent.prototype._changeDetectorRef;\n}\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            /** @type {?} */\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => this._destroyPopup()));\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            restoreFocus: true\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._dialogRef.componentInstance.color = this.color;\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        /** @type {?} */\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        /** @type {?} */\n        const ref = this._popupComponentRef = (/** @type {?} */ (this._popupRef)).attach(portal);\n        ref.instance.datepicker = this;\n        ref.instance.color = this.color;\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (this._popupRef)).updatePosition();\n        }));\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Destroys the current popup overlay.\n     * @private\n     * @return {?}\n     */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepicker.ngAcceptInputType_touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._scrollStrategy;\n    /**\n     * An input indicating the type of the custom header component for the calendar, if set.\n     * @type {?}\n     */\n    MatDatepicker.prototype.calendarHeaderComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._startAt;\n    /**\n     * The view that the calendar should start in.\n     * @type {?}\n     */\n    MatDatepicker.prototype.startView;\n    /** @type {?} */\n    MatDatepicker.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._touchUi;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._disabled;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.yearSelected;\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     * @type {?}\n     */\n    MatDatepicker.prototype.monthSelected;\n    /**\n     * Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatDatepicker.prototype.panelClass;\n    /**\n     * Function that can be used to add custom CSS classes to dates.\n     * @type {?}\n     */\n    MatDatepicker.prototype.dateClass;\n    /**\n     * Emits when the datepicker has been opened.\n     * @type {?}\n     */\n    MatDatepicker.prototype.openedStream;\n    /**\n     * Emits when the datepicker has been closed.\n     * @type {?}\n     */\n    MatDatepicker.prototype.closedStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._opened;\n    /**\n     * The id for the datepicker calendar.\n     * @type {?}\n     */\n    MatDatepicker.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._validSelected;\n    /**\n     * A reference to the overlay when the calendar is opened as a popup.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupRef;\n    /**\n     * A reference to the dialog when the calendar is opened as a dialog.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialogRef;\n    /**\n     * Reference to the component instantiated in popup mode.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._popupComponentRef;\n    /**\n     * The element that was focused before the datepicker was opened.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._focusedElementBeforeOpen;\n    /**\n     * Subscription to value changes in the associated input element.\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._inputSubscription;\n    /**\n     * The input element this datepicker is associated with.\n     * @type {?}\n     */\n    MatDatepicker.prototype._datepickerInput;\n    /**\n     * Emits when the datepicker is disabled.\n     * @type {?}\n     */\n    MatDatepicker.prototype._disabledChange;\n    /**\n     * Emits new selected date when selected date changes.\n     * @type {?}\n     */\n    MatDatepicker.prototype._selectedChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepicker.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\nif (false) {\n    /**\n     * The new value for the target datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.value;\n    /**\n     * Reference to the datepicker input component that emitted the event.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.target;\n    /**\n     * Reference to the native input element associated with the datepicker input.\n     * @type {?}\n     */\n    MatDatepickerInputEvent.prototype.targetElement;\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        const lastValueWasValid = this._lastValueValid;\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else if (lastValueWasValid !== this._lastValueValid) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_value;\n    /** @type {?} */\n    MatDatepickerInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatDatepickerInput.prototype._datepicker;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateFilter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._disabled;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateChange;\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     * @type {?}\n     */\n    MatDatepickerInput.prototype.dateInput;\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._valueChange;\n    /**\n     * Emits when the disabled state has changed\n     * @type {?}\n     */\n    MatDatepickerInput.prototype._disabledChange;\n    /** @type {?} */\n    MatDatepickerInput.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._cvaOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validatorOnChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._datepickerSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._localeSubscription;\n    /**\n     * The form control validator for whether the input parses.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._parseValidator;\n    /**\n     * The form control validator for the min date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._minValidator;\n    /**\n     * The form control validator for the max date.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._maxValidator;\n    /**\n     * The form control validator for the date filter.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._filterValidator;\n    /**\n     * The combined form control validator for this input.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._validator;\n    /**\n     * Whether the last value set on the input was valid.\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._lastValueValid;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._elementRef;\n    /** @type {?} */\n    MatDatepickerInput.prototype._dateAdapter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._dateFormats;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerInput.prototype._formField;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDatepickerToggle.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._stateChanges;\n    /**\n     * Datepicker instance that the button will toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.datepicker;\n    /**\n     * Tabindex for the toggle.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.tabIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._disabled;\n    /**\n     * Whether ripples on the toggle should be disabled.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype.disableRipple;\n    /**\n     * Custom icon set by the consumer.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._customIcon;\n    /**\n     * Underlying button element.\n     * @type {?}\n     */\n    MatDatepickerToggle.prototype._button;\n    /** @type {?} */\n    MatDatepickerToggle.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDatepickerToggle.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/datepicker-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); }, providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/datepicker/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatMultiYearView, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n\n//# sourceMappingURL=datepicker.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r17, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r14.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r14.pageSize)(\"disabled\", ctx_r14.disabled)(\"aria-label\", ctx_r14._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r14._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r15.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r11._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r12._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r12._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r12._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r12._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r13._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r13._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r13._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r13._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { NgModule, Directive, Input, TemplateRef, ViewContainerRef, OnInit } from '@angular/core';\n\nexport class NgLetContext {\n  $implicit: any = null;\n  ngLet: any = null;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class NgLetDirective implements OnInit {\n  private context = new NgLetContext();\n\n  @Input()\n  set ngLet(value: any) {\n    this.context.$implicit = this.context.ngLet = value;\n  }\n\n  constructor(private vcr: ViewContainerRef, private templateRef: TemplateRef<NgLetContext>) {}\n\n  ngOnInit() {\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\n  }\n}\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n/**\n * Base interface for a `MatGridList`.\n * \\@docs-private\n * @record\n */\nfunction MatGridListBase() { }\nif (false) {\n    /** @type {?} */\n    MatGridListBase.prototype.cols;\n    /** @type {?} */\n    MatGridListBase.prototype.gutterSize;\n    /** @type {?} */\n    MatGridListBase.prototype.rowHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-tile.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridTile {\n    /**\n     * @param {?} _element\n     * @param {?=} _gridList\n     */\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /**\n     * Amount of rows that the grid tile takes up.\n     * @return {?}\n     */\n    get rowspan() { return this._rowspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Amount of columns that the grid tile takes up.\n     * @return {?}\n     */\n    get colspan() { return this._colspan; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(property, value) {\n        ((/** @type {?} */ (this._element.nativeElement.style)))[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_rowspan;\n    /** @type {?} */\n    MatGridTile.ngAcceptInputType_colspan;\n    /** @type {?} */\n    MatGridTile.prototype._rowspan;\n    /** @type {?} */\n    MatGridTile.prototype._colspan;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTile.prototype._element;\n    /** @type {?} */\n    MatGridTile.prototype._gridList;\n}\nclass MatGridTileText {\n    /**\n     * @param {?} _element\n     */\n    constructor(_element) {\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridTileText.prototype._lines;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridTileText.prototype._element;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-coordinator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface describing a tile.\n * \\@docs-private\n * @record\n */\nfunction Tile() { }\nif (false) {\n    /**\n     * Amount of rows that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.rowspan;\n    /**\n     * Amount of columns that the tile takes up.\n     * @type {?}\n     */\n    Tile.prototype.colspan;\n}\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /**\n         * Index at which the search for the next gap will start.\n         */\n        this.columnIndex = 0;\n        /**\n         * The current row index.\n         */\n        this.rowIndex = 0;\n    }\n    /**\n     * Gets the total number of rows occupied by tiles\n     * @return {?}\n     */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     * @return {?}\n     */\n    get rowspan() {\n        /** @type {?} */\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param {?} numColumns Amount of columns in the grid.\n     * @param {?} tiles Tiles to be positioned.\n     * @return {?}\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => this._trackTile(tile)));\n    }\n    /**\n     * Calculates the row and col position of a tile.\n     * @private\n     * @param {?} tile\n     * @return {?}\n     */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        /** @type {?} */\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @private\n     * @param {?} tileCols\n     * @return {?}\n     */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        /** @type {?} */\n        let gapStartIndex = -1;\n        /** @type {?} */\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /**\n     * Move \"down\" to the next row.\n     * @private\n     * @return {?}\n     */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @private\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @private\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\nif (false) {\n    /**\n     * Tracking array (see class description).\n     * @type {?}\n     */\n    TileCoordinator.prototype.tracker;\n    /**\n     * Index at which the search for the next gap will start.\n     * @type {?}\n     */\n    TileCoordinator.prototype.columnIndex;\n    /**\n     * The current row index.\n     * @type {?}\n     */\n    TileCoordinator.prototype.rowIndex;\n    /**\n     * The computed (row, col) position of each tile (the output).\n     * @type {?}\n     */\n    TileCoordinator.prototype.positions;\n}\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nclass TilePosition {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\nif (false) {\n    /** @type {?} */\n    TilePosition.prototype.row;\n    /** @type {?} */\n    TilePosition.prototype.col;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/tile-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n * @type {?}\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        /** @type {?} */\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        /** @type {?} */\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        /** @type {?} */\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        /** @type {?} */\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    getComputedHeight() { return null; }\n}\nif (false) {\n    /** @type {?} */\n    TileStyler.prototype._gutterSize;\n    /** @type {?} */\n    TileStyler.prototype._rows;\n    /** @type {?} */\n    TileStyler.prototype._rowspan;\n    /** @type {?} */\n    TileStyler.prototype._cols;\n    /** @type {?} */\n    TileStyler.prototype._direction;\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @abstract\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Called when the tile styler is swapped out with a different one. To be used for cleanup.\n     * \\@docs-private\n     * @abstract\n     * @param {?} list Grid list that the styler was attached to.\n     * @return {?}\n     */\n    TileStyler.prototype.reset = function (list) { };\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * \\@docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    /**\n     * @param {?} fixedRowHeight\n     */\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    FixedTileStyler.prototype.fixedRowHeight;\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * \\@docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        /** @type {?} */\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @return {?}\n     */\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _parseRatio(value) {\n        /** @type {?} */\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\nif (false) {\n    /**\n     * Ratio width:height given by user to determine row height.\n     * @type {?}\n     */\n    RatioTileStyler.prototype.rowHeightRatio;\n    /** @type {?} */\n    RatioTileStyler.prototype.baseTileHeight;\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * \\@docs-private\n */\nclass FitTileStyler extends TileStyler {\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        /** @type {?} */\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        /** @type {?} */\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        /** @type {?} */\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach((/**\n             * @param {?} tile\n             * @return {?}\n             */\n            tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            }));\n        }\n    }\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n/** @type {?} */\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    /**\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * The amount of space between tiles. This will be something like '5px' or '2em'.\n         */\n        this._gutter = '1px';\n    }\n    /**\n     * Amount of columns in the grid list.\n     * @return {?}\n     */\n    get cols() { return this._cols; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /**\n     * Size of the grid list's gutter in pixels.\n     * @return {?}\n     */\n    get gutterSize() { return this._gutter; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /**\n     * Set internal representation of row height from the user-provided value.\n     * @return {?}\n     */\n    get rowHeight() { return this._rowHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set rowHeight(value) {\n        /** @type {?} */\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /**\n     * Throw a friendly error if cols property is missing\n     * @private\n     * @return {?}\n     */\n    _checkCols() {\n        if (!this.cols) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @private\n     * @return {?}\n     */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @private\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @private\n     * @return {?}\n     */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        /** @type {?} */\n        const tracker = this._tileCoordinator;\n        /** @type {?} */\n        const tiles = this._tiles.filter((/**\n         * @param {?} tile\n         * @return {?}\n         */\n        tile => !tile._gridList || tile._gridList === this));\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((/**\n         * @param {?} tile\n         * @param {?} index\n         * @return {?}\n         */\n        (tile, index) => {\n            /** @type {?} */\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        }));\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    _setListStyle(style) {\n        if (style) {\n            ((/** @type {?} */ (this._element.nativeElement.style)))[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatGridList.ngAcceptInputType_cols;\n    /**\n     * Number of columns being rendered.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._cols;\n    /**\n     * Used for determiningthe position of each tile in the grid.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileCoordinator;\n    /**\n     * Row height value passed in by user. This can be one of three types:\n     * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n     * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n     * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._rowHeight;\n    /**\n     * The amount of space between tiles. This will be something like '5px' or '2em'.\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._gutter;\n    /**\n     * Sets position and size styles for a tile\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._tileStyler;\n    /**\n     * Query list of tiles that are being rendered.\n     * @type {?}\n     */\n    MatGridList.prototype._tiles;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatGridList.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/grid-list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); }, imports: [[MatLineModule, MatCommonModule],\n        MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/grid-list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, TileCoordinator as ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + required > 1 ? 's' : '' + ' required, but only ' + args.length + ' present');\n  }\n}","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r6.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r6.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    this.options.find((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.selected)) ? this.selectAll() : this.deselectAll();\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map"]}