{"version":3,"sources":["/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.module.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/sidenav-toggle/sidenav-toggle.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/ngx-utils/src/lib/directives/click-outside/click-outside.directive.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/sidenav-toggle/sidenav-toggle.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search-bar/search-bar.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search-bar/search-bar.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/fullscreen-toggle/fullscreen-toggle.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/fullscreen-toggle/fullscreen-toggle.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search/search.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/search/search.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/quickpanel-toggle/quickpanel-toggle.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/user-menu/user-menu.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/user-menu/user-menu.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/components/quickpanel-toggle/quickpanel-toggle.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/toolbar/src/lib/toolbar.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component.html","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.component.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/breadcrumbs/src/lib/breadcrumbs.module.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/immer/dist/immer.module.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@ngxs-labs/immer-adapter/__ivy_ngcc__/fesm2015/ngxs-labs-immer-adapter.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.service.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.actions.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.handler.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.module.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/app-notification.model.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/notifications/src/lib/notifications.state.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/libs/quickpanel/src/lib/quickpanel.module.ts","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","/Users/schintha/Developer/Work/SPA/ngx-starter-kit/node_modules/screenfull/dist/screenfull.js"],"names":["ToolbarModule","matModules","QuickpanelComponent","today","Date","now","events","id","title","time","state","todolists","messages","from","img","subject","content","_c0","_MatProgressBarMixinBase","_elementRef","this","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","_document","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","_ngZone","_animationMode","super","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","split","_rectangleFillValue","transform","value","bufferValue","runOutsideAngular","element","_primaryValueBar","nativeElement","pipe","e","target","subscribe","run","next","unsubscribe","v","clamp","ɵfac","t","ɵcmp","type","selectors","viewQuery","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","inputs","color","outputs","exportAs","features","decls","vars","consts","template","_bufferTransform","_primaryTransform","directives","styles","encapsulation","changeDetection","min","max","Math","MatProgressBarModule","ɵmod","ɵinj","imports","SidenavToggleComponent","ClickOutsideDirective","sidenav","open","openSidenav","elementRef","clickOutside","event","targetElement","contains","emit","SearchBarComponent","router","sidenavService","recentlyVisited","item","getItemByRoute","urlAfterRedirects","index","indexOf","splice","unshift","length","pop","focused","closeDropdown","openDropdown","FullscreenToggleComponent","SearchComponent","screenfull","isFullscreen","toggleFullscreen","isOpen","setTimeout","input","focus","close","NotificationsComponent","QuickpanelToggleComponent","UserMenuComponent","ToolbarComponent","store","dispatch","notification","stopPropagation","onClickOutside","toggleDropdown","Observable","unReadCount","currentUser","given_name","photoURL","logout","quickpanel","openQuickpanel","profile","BreadcrumbsComponent","BreadcrumbsModule","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MatRadioChange","source","_changeDetector","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","change","checked","_radios","forEach","radio","name","_markForCheck","markForCheck","fn","isDisabled","disabled","_updateRadioButtonNames","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","selected","ɵdir","contentQueries","dirIndex","MatRadioButton","labelPosition","required","_MatRadioButtonMixinBase","radioGroup","_focusMonitor","_radioDispatcher","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","listen","options","focusVia","_inputElement","monitor","focusOrigin","_touch","stopMonitoring","disableRipple","groupValueChanged","_emitChangeEvent","newCheckedState","notify","_setDisabled","_color","tabIndex","ariaLabel","ariaLabelledby","ariaDescribedby","ngContentSelectors","$event","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","MatRadioModule","_a","Archtype","ProxyType","hasSymbol","Symbol","hasMap","Map","hasSet","Set","NOTHING","DRAFTABLE","DRAFT_STATE","iteratorSymbol","iterator","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","isDraft","isDraftable","proto","getPrototypeOf","isArray","isMap","isSet","ownKeys","Reflect","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","each","iter","getArchtype","key","entry","thing","die","ES5Object","ProxyObject","ES5Array","ProxyArray","has","prop","call","get","is","x","y","latest","copy","base","shallowCopy","invokeGetters","slice","clone","create","desc","getOwnPropertyDescriptor","Error","enumerable","defineProperty","writable","configurable","freeze","deep","isFrozen","add","clear","dontMutateFrozenCollections","set","_","ImmerScope","parent","immer","drafts","canAutoFreeze","usePatches","patchListener","patches","inversePatches","revoke","leave","current","enter","scope","draft","revoked","processResult","result","baseDraft","isReplaced","willFinalize","modified","finalize","maybeFreeze","push","op","finalizeTree","finalized","onDelete","useProxies","assigned","exists","copy_1","onCopy","autoFreeze","basePath","assignedValue","origValue","_b","delta","start","end","i","replaceCount","root","rootPath","finalizeProperty","rootState","parentValue","childValue","isDraftProp","isSetMember","undefined","propOrOldValue","grandChild","onAssign","objectTraps","peek","createProxy","baseValue","prepareCopy","markChanged","deleteProperty","owner","arrayTraps","peek$1","finalizing","markChangedES5","prepareCopy$1","clonePotentialDraft","arguments","apply","isNaN","parseInt","descriptors","assertUnrevoked","JSON","stringify","markChangesSweep","hasArrayChanges","hasObjectChanges","keys","state_1","descriptor","DraftMap","_super","isManual","size","prepareCopy$2","cb","thisArg","_this","_map","values","r","done","entries","DraftSet","prepareCopy$3","applyPatches","patch","join","deepClonePatchValue","map","cloned","__spreadArrays","s","il","k","a","j","jl","configDefaults","Proxy","revocable","process","Immer","config","setUseProxies","produce","bind","produceWithPatches","recipe","defaultBase_1","self_1","arguments$1","args","_i","scope_1","proxy","hasError","Promise","then","error","arg1","arg2","arg3","ip","createDraft","finishDraft","setAutoFreeze","traps","markChangesRecursively","object","frozenState","autobindStateContext","getState","val","newState","oldState","mutatedOldState","setState","patchState","actions","context","ImmutableContext","_target","_key","method","action","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","params","_c3","_c4","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r44","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r52","i_r45","ctx_r51","_r40","_handleClick","ctx_r41","selectedIndex","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r56","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r53","i_r54","ctx_r43","position","origin","_c5","_c6","_c7","_c8","_MAT_INK_BAR_POSITIONER","left","offsetLeft","width","offsetWidth","MatInkBar","_inkBarPositioner","show","requestAnimationFrame","_setStyles","style","visibility","positions","inkBar","MatTabContent","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","changes","complete","_explicitContent","_implicitContent","_templateLabel","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","dir","_computePositionAnimationState","fromState","toState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","data","animation","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","resolve","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","dynamicHeight","MatTabGroup","animationMode","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","MatTabLabelWrapperBase","passiveEventListenerOptions","passive","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_keyManager","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","textContent","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","direction","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_isValidIndex","setActiveItem","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","_handlePaginatorClick","_handleKeydown","_onContentChanges","MatTabsModule","NotificationsService","httpClient","featureService","apiBaseUrl","API_BASE_URL","entityPath","loadingSubject","baseUrl","handleError","items","noti","detectFeature","NotificationsAPI","supported","isMobileAndroid","Notification","requestPermission","onclick","console","log","FetchNotifications","AddNotification","payload","DeleteNotification","MarkAsRead","MarkAllAsRead","NotificationsHandler","NotificationsModule","TargetType","NotificationColor","NotificationIcon","actions$","swPush","message","targetType","notificationClicks","notificationsHandler","forFeature","_MatBadgeMixinBase","MatBadgeBase","MatBadge","_ariaDescriber","_renderer","_hasContent","_overlap","_id","nodeType","ELEMENT_NODE","contentChange","currentValue","trim","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","_createBadgeElement","createElement","_clearExistingBadges","setAttribute","appendChild","newDescription","oldDescription","describe","colorPalette","cssClass","childCount","children","currentChild","removeChild","_setColor","_description","_updateHostAriaDescription","removeAttribute","_hidden","overlap","isAbove","isAfter","hidden","MatBadgeModule","NotificationsState","notificationsService","getAll","res","note","findIndex","read","cancelUncompleted","defaults","MatDrawerContainer_div_0_Template","_r30","_onBackdropClicked","ctx_r27","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r34","ctx_r31","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","_contentMargins","right","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","opened","_takeFocus","_restoreFocus","disableClose","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","activeElement","_openedVia","blur","_updateFocusTrapState","isBrowser","openedVia","toggle","enabled","_autoFocus","o","_animationStartListener","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","_element","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","className","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","autosize","hasBackdrop","MatSidenavContent","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","QuickpanelModule","extendStyles","dest","toggleNativeDragInteractions","enable","userSelect","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","toLowerCase","parseFloat","parseCssPropertyValue","computedStyle","getPropertyValue","part","activeEventListenerOptions","DragRef","_config","_dragDropRegistry","_passiveTransform","_activeTransform","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","find","handle","_initializeDragSequence","_rootElement","_pointerMove","_hasStartedDragging","_previewRect","_preview","getBoundingClientRect","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_updatePointerDirectionDelta","_dropContainer","_updateActiveDropContainer","activeTransform","_pickupPositionOnPage","_applyRootElementTransform","SVGElement","observers","pointerPosition","_getDragDistance","_pointerDirectionDelta","_getPointerPositionOnPage","abs","dragStartThreshold","_dragStartTime","_getDragStartDelay","_endDragSequence","isDragging","_startDragSequence","_pointerUp","withRootElement","registerDragItem","_placeholder","getPlaceholderElement","getRootElement","handles","_toggleNativeDragInteractions","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","addEventListener","_initialTransform","boundaryElement","_containInsideBoundaryOnResize","removeNode","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","_pointerPositionAtLastDirectionChange","_previewRef","_placeholderRef","stopDragging","_rootElementTapHighlight","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","preview","_createPreviewElement","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","display","body","replaceChild","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_initialContainer","_initialIndex","getItemIndex","referenceElement","isTouchSequence","isAuxiliaryMouseButton","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","_scrollPosition","getViewportScrollPosition","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","startDragging","currentIndex","isPointerOverContainer","_isOverContainer","previousIndex","previousContainer","drop","newContainer","_getSiblingContainerFromPosition","exit","sortingDisabled","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","deepCloneNode","pointerEvents","margin","top","zIndex","placeholderRect","duration","getComputedStyle","transitionedProperties","property","propertyIndex","rawDurations","rawDelays","handler","propertyName","removeEventListener","clearTimeout","timeout","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","point","targetTouches","pageX","pageY","touches","changedTouches","constrainedPoint","constrainPosition","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","bottom","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","node","cloneNode","descendantsWithId","querySelectorAll","descendantCanvases","cloneCanvases","correspondingCloneContext","getContext","drawImage","parentNode","rootNode","rootNodes","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp$1","to","DropListRef","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_parentPositions","_previousSwap","drag","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","pointerX","pointerY","newIndex","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_cacheItemPositions","_reset","_withDropContainer","connectedTo","orientation","elements","_scrollableElements","reverse","currentItem","pointerDelta","isPointerNearClientRect","_clientRect","siblings","isHorizontal","siblingAtNewPosition","clientRect","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","offset","elementToOffset","adjustClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollTop","scrollHeight","clientWidth","getViewportSize","window","scrollPosition","getMutableClientRect","elementToMeasure","getVisibleElement","sort","_stopReceiving","immediateSibling","floor","_cacheParentPositions","scrolledParent","newTop","newLeft","scrolledParentNode","documentElement","topDifference","leftDifference","_sortFromLastPointerPosition","isInsideClientRect","_canReceive","elementFromPoint","_getShadowRoot","activeSiblings","_updateAfterScroll","isReceiving","shadowRoot","rect","xThreshold","yThreshold","predicate","amount","scrollBy","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","startsWith","upEvent","_clearGlobalListeners","instance","ɵprov","token","DEFAULT_CONFIG","DragDrop","CDK_DRAG_PARENT","CdkDragHandle","parentDrag","_parentDrag","CdkDragPlaceholder","templateRef","CdkDragPreview","_matchSize","CDK_DRAG_CONFIG","CDK_DROP_LIST","CdkDrag","dropContainer","dragDrop","observer","subscription","_dragRef","movedEvent","createDrag","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","getFreeDragPosition","onStable","_updateRootElement","childHandleElements","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","firstChange","removeItem","dispose","rootElementSelector","getClosestMatchingAncestor","nodeName","boundary","ref","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","withDirection","draggingDisabled","selector","currentElement","matches","msMatchesSelector","parentElement","CdkDropListGroup","_uniqueIdCounter","CdkDropList","_group","_scrollDispatcher","_unsortedItems","createDropList","_setupInputSyncSubscription","_dropLists","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","_syncItemsWithRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","list","withOrientation","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","useValue","DragDropModule","providers","document","isCommonjs","module","exports","fnMap","l","ret","eventNameMap","fullscreenchange","fullscreenerror","request","reject","onFullScreenEntered","off","on","returnPromise","requestFullscreen","onFullScreenExit","exitFullscreen","onchange","callback","onerror","eventName","raw","defineProperties","Boolean","fullscreenEnabled"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { ThemePickerModule } from '@ngx-starter-kit/theme-picker';\nimport { NotificationsModule } from '@ngx-starter-kit/notifications';\n\nimport { ToolbarComponent } from './toolbar.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { UserMenuComponent } from './components/user-menu/user-menu.component';\nimport { FullscreenToggleComponent } from './components/fullscreen-toggle/fullscreen-toggle.component';\nimport { SidenavToggleComponent } from './components/sidenav-toggle/sidenav-toggle.component';\nimport { QuickpanelToggleComponent } from './components/quickpanel-toggle/quickpanel-toggle.component';\nimport { SharedFlexLayoutModule } from '@ngx-starter-kit/shared';\nimport { ClickOutsideModule } from '@ngx-starter-kit/ngx-utils';\n\nconst matModules = [\n  MatToolbarModule,\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatListModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    [...matModules],\n    ClickOutsideModule,\n    SharedFlexLayoutModule,\n    ThemePickerModule,\n    RouterModule,\n    NotificationsModule,\n  ],\n  exports: [ToolbarComponent],\n  declarations: [\n    ToolbarComponent,\n    SearchComponent,\n    SearchBarComponent,\n    UserMenuComponent,\n    FullscreenToggleComponent,\n    SidenavToggleComponent,\n    QuickpanelToggleComponent,\n  ],\n})\nexport class ToolbarModule {}\n","<mat-tab-group>\n  <mat-tab label=\"Overview\">\n    <div class=\"sidebar\">\n      <div\n        fxLayout=\"column\"\n        fxLayoutAlign=\"center center\"\n        style=\"padding: 30px 0; background: url('assets/img/bg/city1.jpg');\"\n      >\n        <div style=\"width: 100%; height: 22%; position: absolute;background: #17161642;z-index: 1\"></div>\n        <div class=\"mat-display-2\" style=\"margin: 0; color: white;z-index: 2\">{{ today | date: 'shortTime' }}</div>\n        <div class=\"mat-subheading-2\" style=\"margin: 0;color: white;z-index: 2\">\n          {{ today | date: 'EEEE' }}, {{ today | date: 'MMMM' }} {{ today | date: 'dd' }}\n        </div>\n      </div>\n\n      <mat-divider></mat-divider>\n\n      <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Upcoming Events</h3>\n      <mat-nav-list>\n        <div *ngFor=\"let event of events\">\n          <mat-list-item>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-ripple>\n              <div fxLayout=\"column\">\n                <div class=\"mat-ubheading-2\" style=\"margin: 0; font-weight: bold;\">{{ event.title }}</div>\n                <div style=\"font-size: 12px;\">{{ event.time }}</div>\n              </div>\n            </div>\n          </mat-list-item>\n        </div>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n\n      <mat-nav-list>\n        <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Todo-List</h3>\n        <div *ngFor=\"let todolist of todolists\">\n          <mat-list-item>\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" mat-ripple>\n              <div class=\"title\" fxLayout=\"column\">\n                <div class=\"mat-ubheading-2\" style=\"margin: 0; font-weight: bold;\">{{ todolist.title }}</div>\n                <div style=\"font-size: 12px;\">{{ todolist.time }}</div>\n              </div>\n            </div>\n          </mat-list-item>\n        </div>\n      </mat-nav-list>\n\n      <mat-divider></mat-divider>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Notifications\">\n    <div class=\"sidebar\">\n      <div>\n        <h3 style=\"margin: 10px 14px 0;\">Friends</h3>\n\n        <mat-list>\n          <mat-list-item *ngFor=\"let message of messages\">\n            <img matListAvatar [src]=\"message.img\" alt=\"...\" />\n            <h3 matLine style=\"margin: 0; font-weight: bold;\">{{ message.from }}</h3>\n            <p matLine>\n              <span> {{ message.subject }} </span> <span> -- {{ message.content }} </span>\n            </p>\n          </mat-list-item>\n        </mat-list>\n      </div>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n\n<mat-divider></mat-divider>\n\n<mat-nav-list>\n  <div>\n    <h3 class=\"mat-subheading-2\" style=\"margin: 10px 14px 0;\">Server Statistics</h3>\n    <div>\n      <mat-list-item>\n        <h5>CPU Load</h5>\n        <mat-progress-bar [color]=\"'accent'\" [mode]=\"'buffer'\" [value]=\"'70'\" [bufferValue]=\"100\">></mat-progress-bar>\n      </mat-list-item>\n    </div>\n\n    <div>\n      <mat-list-item>\n        <h5>RAM Usage</h5>\n        <mat-progress-bar [color]=\"'primary'\" [mode]=\"'buffer'\" [value]=\"'47'\" [bufferValue]=\"100\"></mat-progress-bar>\n      </mat-list-item>\n    </div>\n\n    <div>\n      <mat-list-item>\n        <h5>CPU Temp</h5>\n        <mat-progress-bar [color]=\"'warn'\" [mode]=\"'buffer'\" [value]=\"'43'\" [bufferValue]=\"100\"></mat-progress-bar>\n      </mat-list-item>\n    </div>\n  </div>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-quickpanel',\n  templateUrl: './quickpanel.component.html',\n  styleUrls: ['./quickpanel.component.scss'],\n})\nexport class QuickpanelComponent implements OnInit {\n  today: number = Date.now();\n\n  events = [\n    {\n      id: 'id',\n      title: 'Business Meeting',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Ask for a Vacation',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Dinner with Micheal',\n      time: '05:00 PM',\n      state: 'state',\n    },\n    {\n      id: 'id',\n      title: 'Deadline for Project ABC',\n      time: '05:00 PM',\n      state: 'state',\n    },\n  ];\n\n  todolists = [\n    {\n      id: 'id',\n      title: 'Get to know Angular more',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Configure new Router',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Invite Joy to play Carroms',\n      time: 'Added:4 days ago',\n    },\n    {\n      id: 'id',\n      title: 'Check SRS of Project X',\n      time: 'Added:4 days ago',\n    },\n  ];\n\n  messages = [\n    { from: 'Catherin', img: 'assets/img/avatars/4.jpg', subject: 'Shopping', content: 'hi there??' },\n    { from: 'Jack', img: 'assets/img/avatars/16.jpg', subject: 'Function', content: 'yes' },\n    { from: 'Karina', img: 'assets/img/avatars/1.jpg', subject: 'Get together', content: 'nice' },\n    { from: 'Micheal', img: 'assets/img/avatars/11.jpg', subject: 'Trip', content: 'ya.. I will' },\n    { from: 'Ashik', img: 'assets/img/avatars/19.jpg', subject: 'Meeting', content: 'Time??' },\n    { from: 'Joy', img: 'assets/img/avatars/10.jpg', subject: 'Party', content: 'Lets enjoy' },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-sidenav-toggle',\n  templateUrl: './sidenav-toggle.component.html',\n  styleUrls: ['./sidenav-toggle.component.scss'],\n})\nexport class SidenavToggleComponent implements OnInit {\n  @Input()\n  sidenav: MatSidenav;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  openSidenav() {\n    this.sidenav.open();\n  }\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]',\n})\nexport class ClickOutsideDirective {\n  @Output()\n  public clickOutside = new EventEmitter<MouseEvent>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n    if (!targetElement) {\n      return;\n    }\n\n    if (!this.elementRef.nativeElement.contains(targetElement)) {\n      this.clickOutside.emit(event);\n    }\n  }\n}\n","<button class=\"button\" (click)=\"openSidenav()\" mat-icon-button fxHide.gt-md><mat-icon>menu</mat-icon></button>\n","<div\n  class=\"search-wrapper\"\n  fxLayout=\"row\"\n  [ngClass]=\"{ focus: focused, 'has-input': input }\"\n  fxFlex\n  (clickOutside)=\"closeDropdown()\"\n>\n  <mat-icon class=\"search-icon\">search</mat-icon>\n  <input\n    #searchInput\n    type=\"search\"\n    autocomplete=\"off\"\n    spellcheck=\"false\"\n    class=\"search-input\"\n    (focus)=\"openDropdown()\"\n    placeholder=\"Search...\"\n  />\n\n  <div class=\"search-dropdown mat-elevation-z1\">\n    <div class=\"content results\" *ngIf=\"input\" fxLayout=\"column\">\n      <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"icon\">search</mat-icon>\n        Search results for: {{ searchInput.value }}\n      </div>\n      <div class=\"items\">\n        <div class=\"item\" matRipple>Overview</div>\n        <div class=\"item\" matRipple>Dashboard</div>\n        <div class=\"item\" matRipple>Servers</div>\n        <div class=\"item\" matRipple>Grid</div>\n        <div class=\"item\" matRipple>Profile</div>\n        <div class=\"item\" matRipple>Home</div>\n      </div>\n    </div>\n\n    <div class=\"content recents\" fxLayout=\"row\" *ngIf=\"!input\">\n      <div class=\"recently\" fxLayout=\"column\" fxFlex>\n        <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n          <mat-icon class=\"icon\">restore</mat-icon>\n          Recently Visited\n        </div>\n        <div class=\"items\">\n          <div\n            class=\"item\"\n            matRipple\n            *ngFor=\"let item of recentlyVisited\"\n            [routerLink]=\"item.route\"\n            (click)=\"closeDropdown()\"\n          >\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n      <div class=\"frequently\" fxLayout=\"column\" fxFlex fxFlexOffset=\"16px\">\n        <div class=\"heading\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n          <mat-icon class=\"icon\">youtube_searched_for</mat-icon>\n          Frequently Visited\n        </div>\n        <div class=\"items\">\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard']\">Dashboard</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/overview']\">Overview</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/experiments']\">Experiments</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/grid']\">Grid</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/dashboard/experiments/animations']\">Animations</div>\n          <div class=\"item\" matRipple [routerLink]=\"['/home']\">Home</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { MenuItem, MenuService } from '@ngx-starter-kit/navigator';\n\n@Component({\n  selector: 'ngx-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent implements OnInit {\n  input: string;\n  focused: boolean;\n\n  recentlyVisited: MenuItem[] = [];\n\n  constructor(private router: Router, private sidenavService: MenuService) {}\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const item = this.sidenavService.getItemByRoute(event.urlAfterRedirects);\n\n        if (item) {\n          const index = this.recentlyVisited.indexOf(item);\n          if (index > -1) {\n            this.recentlyVisited.splice(index, 1);\n          }\n\n          this.recentlyVisited.unshift(item);\n\n          if (this.recentlyVisited.length > 5) {\n            this.recentlyVisited.pop();\n          }\n        }\n      }\n    });\n  }\n\n  openDropdown() {\n    this.focused = true;\n  }\n\n  closeDropdown() {\n    this.focused = false;\n  }\n}\n","<button class=\"button\" mat-button (click)=\"toggleFullscreen()\" fxFlex=\"grow\">\n  <mat-icon *ngIf=\"!isFullscreen\">fullscreen</mat-icon>\n  <mat-icon *ngIf=\"isFullscreen\">fullscreen_exit</mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'ngx-fullscreen-toggle',\n  templateUrl: './fullscreen-toggle.component.html',\n  styleUrls: ['./fullscreen-toggle.component.scss'],\n})\nexport class FullscreenToggleComponent implements OnInit {\n  isFullscreen: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  toggleFullscreen() {\n    if (screenfull.isEnabled) {\n      screenfull.toggle();\n      this.isFullscreen = !this.isFullscreen;\n    }\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  isOpen: boolean;\n\n  @ViewChild('input', { read: ElementRef, static: true }) input: ElementRef;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  open() {\n    this.isOpen = true;\n\n    setTimeout(() => {\n      this.input.nativeElement.focus();\n    }, 100);\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center stretch\" fxFlex=\"grow\">\n  <button class=\"search-button\" mat-button (click)=\"open()\"><mat-icon>search</mat-icon></button>\n  <mat-form-field class=\"search\" [class.search-open]=\"isOpen\" fxFlex=\"auto\">\n    <input #input (blur)=\"close()\" matInput placeholder=\"Search...\" />\n  </mat-form-field>\n</div>\n","<div\n  class=\"notification-container\"\n  (clickOutside)=\"onClickOutside()\"\n  fxFlex=\"grow\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"start center\"\n>\n  <button class=\"button\" type=\"button\" mat-button (click)=\"toggleDropdown()\" [class.open]=\"isOpen\" fxFlex=\"grow\">\n    <span *ngIf=\"(unReadCount$ | async) > 0; then withBadge; else withOutBadge\"></span>\n    <ng-template #withBadge>\n      <mat-icon matBadge=\"{{ unReadCount$ | async }}\" matBadgePosition=\"above after\" matBadgeColor=\"accent\"\n        >notifications_active</mat-icon\n      >\n    </ng-template>\n    <ng-template #withOutBadge><mat-icon>notifications_none</mat-icon></ng-template>\n  </button>\n\n  <div class=\"dropdown mat-elevation-z1\" [class.open]=\"isOpen\">\n    <div class=\"card\">\n      <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div class=\"title\">\n          <div class=\"name\">Notifications</div>\n          <div class=\"extra\">You have {{ unReadCount$ | async }} new notifications.</div>\n        </div>\n        <button type=\"button\" mat-icon-button><mat-icon class=\"icon\">settings</mat-icon></button>\n      </div>\n\n      <ng-container *ngLet=\"notifications$ | async as notifications\">\n        <ng-container *ngIf=\"notifications?.length !== 0; then thenBlock; else elseBlock\"></ng-container>\n        <ng-template #thenBlock>\n          <perfect-scrollbar class=\"content\">\n            <ng-container *ngFor=\"let notification of notifications; last as isLast; trackBy: trackById\">\n              <div\n                class=\"notification\"\n                (click)=\"markAsRead(notification)\"\n                [ngClass]=\"notification.color\"\n                [class.read]=\"notification.read\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"start center\"\n                matRipple\n                [@listFade]\n              >\n                <mat-icon class=\"icon\">{{ notification.icon }}</mat-icon>\n                <div class=\"title\" fxLayout=\"column\">\n                  <div class=\"name\">{{ notification.body }}</div>\n                  <div class=\"time\">{{ notification.createdAt | formatTimeInWords }}</div>\n                </div>\n                <span fxFlex></span>\n                <button (click)=\"dismiss(notification, $event)\" type=\"button\" mat-icon-button>\n                  <mat-icon class=\"close\">close</mat-icon>\n                </button>\n              </div>\n              <div class=\"divider\" *ngIf=\"!isLast\"></div>\n            </ng-container>\n          </perfect-scrollbar>\n        </ng-template>\n        <ng-template #elseBlock>\n          <div class=\"empty\" fxLayout=\"row\" fxLayoutAlign=\"center center\" [@listFade]>\n            All fine! No notifications right now.\n          </div>\n        </ng-template>\n\n        <div class=\"footer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <div class=\"action\" (click)=\"markAllAsRead()\">Mark all as read</div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { listFadeAnimation } from '@ngx-starter-kit/animations';\n\nimport { DeleteNotification, FetchNotifications, MarkAllAsRead, MarkAsRead } from './notifications.actions';\nimport { Observable } from 'rxjs';\nimport { NotificationsState } from './notifications.state';\nimport { AppNotification } from './app-notification.model';\n\n@Component({\n  selector: 'ngx-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss'],\n  animations: [listFadeAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationsComponent implements OnInit {\n  @Select(NotificationsState) notifications$: Observable<AppNotification>;\n  @Select(NotificationsState.unReadCount) unReadCount$: Observable<number>;\n  isOpen: boolean;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    this.store.dispatch(new FetchNotifications());\n  }\n\n  markAsRead(notification) {\n    this.store.dispatch(new MarkAsRead(notification));\n  }\n\n  dismiss(notification, event) {\n    event.stopPropagation();\n    this.store.dispatch(new DeleteNotification(notification));\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  markAllAsRead() {\n    this.store.dispatch(new MarkAllAsRead());\n  }\n\n  trackById(index: number, item: AppNotification) {\n    return item.id;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-quickpanel-toggle',\n  templateUrl: './quickpanel-toggle.component.html',\n  styleUrls: ['./quickpanel-toggle.component.scss'],\n})\nexport class QuickpanelToggleComponent implements OnInit {\n  @Input()\n  quickpanel: MatSidenav;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  openQuickpanel() {\n    this.quickpanel.open();\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Logout } from '@ngx-starter-kit/auth';\nimport { Store } from '@ngxs/store';\n\n@Component({\n  selector: 'ngx-user-menu',\n  templateUrl: './user-menu.component.html',\n  styleUrls: ['./user-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserMenuComponent implements OnInit {\n  isOpen: boolean;\n  @Input()\n  currentUser = null;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    if (this.currentUser.given_name && this.currentUser.given_name === 'Sumanth') {\n      this.currentUser.photoURL = 'assets/img/avatars/user-image.jpg';\n    }\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  onClickOutside() {\n    this.isOpen = false;\n  }\n\n  public logout() {\n    this.store.dispatch(new Logout());\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '@ngx-starter-kit/auth';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'ngx-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent implements OnInit {\n  @Select(AuthState.profile) profile$: Observable<any>;\n  @Input() quickpanel: MatSidenav;\n  @Input() sidenav: MatSidenav;\n  isFullscreen = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"user-container\" #userButton (clickOutside)=\"onClickOutside()\">\n  <button class=\"user-button\" mat-button (click)=\"toggleDropdown()\" [class.open]=\"isOpen\">\n    <span fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <img class=\"user-avatar\" [src]=\"currentUser?.photoURL || 'assets/img/avatars/noavatar.png'\" />\n      <span class=\"name\" fxHide fxShow.gt-sm>{{ currentUser?.given_name || 'Sumo Demo' }}</span>\n      <mat-icon class=\"icon\" fxHide fxShow.gt-sm>keyboard_arrow_down</mat-icon>\n    </span>\n  </button>\n\n  <div class=\"dropdown mat-elevation-z1\" [class.open]=\"isOpen\">\n    <div class=\"content\">\n      <mat-nav-list>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/dashboard/profile']\">Profile</a>\n          <button mat-icon-button><mat-icon>account_circle</mat-icon></button>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/dashboard/settings']\">Settings</a>\n          <button mat-icon-button><mat-icon>settings</mat-icon></button>\n        </mat-list-item>\n        <mat-list-item>\n          <a matLine [routerLink]=\"['/home/faq']\">Help</a> <button mat-icon-button><mat-icon>help</mat-icon></button>\n        </mat-list-item>\n\n        <mat-divider></mat-divider>\n\n        <mat-list-item (click)=\"logout()\">\n          <a matLine>Logout</a> <button mat-icon-button><mat-icon>exit_to_app</mat-icon></button>\n        </mat-list-item>\n      </mat-nav-list>\n    </div>\n  </div>\n</div>\n","<button mat-button class=\"button\" (click)=\"openQuickpanel()\" fxFlex=\"grow\">\n  <mat-icon>format_align_right</mat-icon>\n</button>\n","<mat-toolbar class=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <ngx-sidenav-toggle [sidenav]=\"sidenav\"></ngx-sidenav-toggle>\n\n    <img\n      class=\"logo\"\n      [routerLink]=\"['/']\"\n      fxHide.gt-md\n      fxHide.xs\n      style=\"height: 35px; margin-left: 24px; margin-bottom: -5px;\"\n      src=\"assets/img/logo_text_dark.png\"\n    />\n\n    <ngx-search-bar fxFlex=\"500px\" fxHide fxShow.gt-md></ngx-search-bar>\n  </div>\n\n  <div fxLayout=\"row\">\n    <ngx-fullscreen-toggle class=\"button\" fxHide fxShow.gt-sm></ngx-fullscreen-toggle>\n\n    <ngx-search class=\"button\" fxHide fxShow.gt-sm></ngx-search>\n\n    <ngx-notifications class=\"button\" fxHide fxShow.gt-sm></ngx-notifications>\n\n    <!-- <theme-picker class=\"button\" fxShow fxHide.lt-md></theme-picker> -->\n\n    <ngx-user-menu class=\"button\" [currentUser]=\"profile$ | async\"></ngx-user-menu>\n\n    <ngx-quickpanel-toggle class=\"button\" [quickpanel]=\"quickpanel\"></ngx-quickpanel-toggle>\n  </div>\n</mat-toolbar>\n","<div class=\"title\">{{ title }}</div>\n<div class=\"crumbs\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  <div\n    class=\"crumb\"\n    *ngFor=\"let crumb of crumbs; let last = last\"\n    [ngSwitch]=\"!!crumb.link\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n  >\n    <a *ngSwitchCase=\"true\" class=\"crumb link\" [routerLink]=\"[crumb.link]\">{{ crumb.name }}</a>\n    <div *ngSwitchDefault class=\"link\">{{ crumb.name }}</div>\n    <mat-icon *ngIf=\"!last\" class=\"chevron\">chevron_right</mat-icon>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nexport interface Crumb {\n  name: string;\n  link?: string;\n}\n@Component({\n  selector: 'ngx-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbsComponent implements OnInit {\n  @Input()\n  readonly title: string;\n  @Input()\n  crumbs: ReadonlyArray<Crumb>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [MatIconModule, FlexLayoutModule, RouterModule, CommonModule],\n  exports: [BreadcrumbsComponent],\n  declarations: [BreadcrumbsComponent],\n})\nexport class BreadcrumbsModule {}\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, ElementRef, Inject, ViewChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], viewQuery: function MatRadioButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\nMatRadioButton.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_required;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    MatRadioButton.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatRadioButton.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioButton.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    MatRadioButton.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    MatRadioButton.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatRadioButton.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._radioDispatcher;\n    /** @type {?} */\n    MatRadioButton.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._providerOverride;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n\n//# sourceMappingURL=radio.js.map","// Should be no imports here!\nvar _a; // SOme things that should be evaluated before all else...\n\n\nvar hasSymbol = typeof Symbol !== \"undefined\";\nvar hasMap = typeof Map !== \"undefined\";\nvar hasSet = typeof Set !== \"undefined\";\n/**\r\n * The sentinel value returned by producers to replace the draft with undefined.\r\n */\n\nvar NOTHING = hasSymbol ? Symbol(\"immer-nothing\") : (_a = {}, _a[\"immer-nothing\"] = true, _a);\n/**\r\n * To let Immer treat your class instances as plain immutable objects\r\n * (albeit with a custom prototype), you must define either an instance property\r\n * or a static property on each of your custom classes.\r\n *\r\n * Otherwise, your class instance will never be drafted, which means it won't be\r\n * safe to mutate in a produce callback.\r\n */\n\nvar DRAFTABLE = hasSymbol ? Symbol(\"immer-draftable\") : \"__$immer_draftable\";\nvar DRAFT_STATE = hasSymbol ? Symbol(\"immer-state\") : \"__$immer_state\";\nvar iteratorSymbol = hasSymbol ? Symbol.iterator : \"@@iterator\";\n\n/* istanbul ignore next */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) { if (b.hasOwnProperty(p)) { d[p] = b[p]; } }\n  };\n\n  return extendStatics(d, b);\n}; // Ugly hack to resolve #502 and inherit built in Map / Set\n\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = ( // @ts-ignore\n  __.prototype = b.prototype, new __());\n}\n\nvar Archtype;\n\n(function (Archtype) {\n  Archtype[Archtype[\"Object\"] = 0] = \"Object\";\n  Archtype[Archtype[\"Array\"] = 1] = \"Array\";\n  Archtype[Archtype[\"Map\"] = 2] = \"Map\";\n  Archtype[Archtype[\"Set\"] = 3] = \"Set\";\n})(Archtype || (Archtype = {}));\n\nvar ProxyType;\n\n(function (ProxyType) {\n  ProxyType[ProxyType[\"ProxyObject\"] = 0] = \"ProxyObject\";\n  ProxyType[ProxyType[\"ProxyArray\"] = 1] = \"ProxyArray\";\n  ProxyType[ProxyType[\"ES5Object\"] = 2] = \"ES5Object\";\n  ProxyType[ProxyType[\"ES5Array\"] = 3] = \"ES5Array\";\n  ProxyType[ProxyType[\"Map\"] = 4] = \"Map\";\n  ProxyType[ProxyType[\"Set\"] = 5] = \"Set\";\n})(ProxyType || (ProxyType = {}));\n\n/** Returns true if the given value is an Immer draft */\n\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\n/** Returns true if the given value can be drafted by Immer */\n\nfunction isDraftable(value) {\n  if (!value) { return false; }\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE] || isMap(value) || isSet(value);\n}\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\") { return false; }\n  var proto = Object.getPrototypeOf(value);\n  return !proto || proto === Object.prototype;\n}\nfunction original(value) {\n  if (value && value[DRAFT_STATE]) {\n    return value[DRAFT_STATE].base;\n  } // otherwise return undefined\n\n}\nvar ownKeys = typeof Reflect !== \"undefined\" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== \"undefined\" ? function (obj) {\n  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));\n} :\n/* istanbul ignore next */\nObject.getOwnPropertyNames;\nfunction each(obj, iter) {\n  if (getArchtype(obj) === Archtype.Object) {\n    ownKeys(obj).forEach(function (key) {\n      return iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach(function (entry, index) {\n      return iter(index, entry, obj);\n    });\n  }\n}\nfunction isEnumerable(base, prop) {\n  var desc = Object.getOwnPropertyDescriptor(base, prop);\n  return desc && desc.enumerable ? true : false;\n}\nfunction getArchtype(thing) {\n  /* istanbul ignore next */\n  if (!thing) { die(); }\n\n  if (thing[DRAFT_STATE]) {\n    switch (thing[DRAFT_STATE].type) {\n      case ProxyType.ES5Object:\n      case ProxyType.ProxyObject:\n        return Archtype.Object;\n\n      case ProxyType.ES5Array:\n      case ProxyType.ProxyArray:\n        return Archtype.Array;\n\n      case ProxyType.Map:\n        return Archtype.Map;\n\n      case ProxyType.Set:\n        return Archtype.Set;\n    }\n  }\n\n  return Array.isArray(thing) ? Archtype.Array : isMap(thing) ? Archtype.Map : isSet(thing) ? Archtype.Set : Archtype.Object;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === Archtype.Map ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  // @ts-ignore\n  return getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  switch (getArchtype(thing)) {\n    case Archtype.Map:\n      thing.set(propOrOldValue, value);\n      break;\n\n    case Archtype.Set:\n      thing.delete(propOrOldValue);\n      thing.add(value);\n      break;\n\n    default:\n      thing[propOrOldValue] = value;\n  }\n}\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return hasMap && target instanceof Map;\n}\nfunction isSet(target) {\n  return hasSet && target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy || state.base;\n}\nfunction shallowCopy(base, invokeGetters) {\n  if (invokeGetters === void 0) {\n    invokeGetters = false;\n  }\n\n  if (Array.isArray(base)) { return base.slice(); }\n  var clone = Object.create(Object.getPrototypeOf(base));\n  ownKeys(base).forEach(function (key) {\n    if (key === DRAFT_STATE) {\n      return; // Never copy over draft state.\n    }\n\n    var desc = Object.getOwnPropertyDescriptor(base, key);\n    var value = desc.value;\n\n    if (desc.get) {\n      if (!invokeGetters) {\n        throw new Error(\"Immer drafts cannot have computed properties\");\n      }\n\n      value = desc.get.call(base);\n    }\n\n    if (desc.enumerable) {\n      clone[key] = value;\n    } else {\n      Object.defineProperty(clone, key, {\n        value: value,\n        writable: true,\n        configurable: true\n      });\n    }\n  });\n  return clone;\n}\nfunction freeze(obj, deep) {\n  if (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) { return; }\n  var type = getArchtype(obj);\n\n  if (type === Archtype.Set) {\n    obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  } else if (type === Archtype.Map) {\n    obj.set = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n\n  Object.freeze(obj);\n  if (deep) { each(obj, function (_, value) {\n    return freeze(value, true);\n  }); }\n}\n\nfunction dontMutateFrozenCollections() {\n  throw new Error(\"This object has been frozen and should not be mutated\");\n}\n\nfunction createHiddenProperty(target, prop, value) {\n  Object.defineProperty(target, prop, {\n    value: value,\n    enumerable: false,\n    writable: true\n  });\n}\n/* istanbul ignore next */\n\nfunction die() {\n  throw new Error(\"Illegal state, please file a bug\");\n}\n\n/** Each scope represents a `produce` call. */\n\nvar ImmerScope =\n/** @class */\nfunction () {\n  function ImmerScope(parent, immer) {\n    this.drafts = [];\n    this.parent = parent;\n    this.immer = immer; // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n\n    this.canAutoFreeze = true;\n  }\n\n  ImmerScope.prototype.usePatches = function (patchListener) {\n    if (patchListener) {\n      this.patches = [];\n      this.inversePatches = [];\n      this.patchListener = patchListener;\n    }\n  };\n\n  ImmerScope.prototype.revoke = function () {\n    this.leave();\n    this.drafts.forEach(revoke); // @ts-ignore\n\n    this.drafts = null;\n  };\n\n  ImmerScope.prototype.leave = function () {\n    if (this === ImmerScope.current) {\n      ImmerScope.current = this.parent;\n    }\n  };\n\n  ImmerScope.enter = function (immer) {\n    var scope = new ImmerScope(ImmerScope.current, immer);\n    ImmerScope.current = scope;\n    return scope;\n  };\n\n  return ImmerScope;\n}();\n\nfunction revoke(draft) {\n  var state = draft[DRAFT_STATE];\n  if (state.type === ProxyType.ProxyObject || state.type === ProxyType.ProxyArray) { state.revoke(); }else { state.revoked = true; }\n}\n\nfunction processResult(immer, result, scope) {\n  var baseDraft = scope.drafts[0];\n  var isReplaced = result !== undefined && result !== baseDraft;\n  immer.willFinalize(scope, result, isReplaced);\n\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified) {\n      scope.revoke();\n      throw new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\"); // prettier-ignore\n    }\n\n    if (isDraftable(result)) {\n      // Finalize the result in case it contains (or is) a subset of the draft.\n      result = finalize(immer, result, scope);\n      if (!scope.parent) { maybeFreeze(immer, result); }\n    }\n\n    if (scope.patches) {\n      scope.patches.push({\n        op: \"replace\",\n        path: [],\n        value: result\n      });\n      scope.inversePatches.push({\n        op: \"replace\",\n        path: [],\n        value: baseDraft[DRAFT_STATE].base\n      });\n    }\n  } else {\n    // Finalize the base draft.\n    result = finalize(immer, baseDraft, scope, []);\n  }\n\n  scope.revoke();\n\n  if (scope.patches) {\n    scope.patchListener(scope.patches, scope.inversePatches);\n  }\n\n  return result !== NOTHING ? result : undefined;\n}\n\nfunction finalize(immer, draft, scope, path) {\n  var state = draft[DRAFT_STATE];\n\n  if (!state) {\n    if (Object.isFrozen(draft)) { return draft; }\n    return finalizeTree(immer, draft, scope);\n  } // Never finalize drafts owned by another scope.\n\n\n  if (state.scope !== scope) {\n    return draft;\n  }\n\n  if (!state.modified) {\n    maybeFreeze(immer, state.base, true);\n    return state.base;\n  }\n\n  if (!state.finalized) {\n    state.finalized = true;\n    finalizeTree(immer, state.draft, scope, path); // We cannot really delete anything inside of a Set. We can only replace the whole Set.\n\n    if (immer.onDelete && state.type !== ProxyType.Set) {\n      // The `assigned` object is unreliable with ES5 drafts.\n      if (immer.useProxies) {\n        var assigned = state.assigned;\n        each(assigned, function (prop, exists) {\n          if (!exists) { immer.onDelete(state, prop); }\n        });\n      } else {\n        var base = state.base,\n            copy_1 = state.copy;\n        each(base, function (prop) {\n          if (!has(copy_1, prop)) { immer.onDelete(state, prop); }\n        });\n      }\n    }\n\n    if (immer.onCopy) {\n      immer.onCopy(state);\n    } // At this point, all descendants of `state.copy` have been finalized,\n    // so we can be sure that `scope.canAutoFreeze` is accurate.\n\n\n    if (immer.autoFreeze && scope.canAutoFreeze) {\n      freeze(state.copy, false);\n    }\n\n    if (path && scope.patches) {\n      generatePatches(state, path, scope.patches, scope.inversePatches);\n    }\n  }\n\n  return state.copy;\n}\n\nfunction finalizeTree(immer, root, scope, rootPath) {\n  var state = root[DRAFT_STATE];\n\n  if (state) {\n    if (state.type === ProxyType.ES5Object || state.type === ProxyType.ES5Array) {\n      // Create the final copy, with added keys and without deleted keys.\n      state.copy = shallowCopy(state.draft, true);\n    }\n\n    root = state.copy;\n  }\n\n  each(root, function (key, value) {\n    return finalizeProperty(immer, scope, root, state, root, key, value, rootPath);\n  });\n  return root;\n}\n\nfunction finalizeProperty(immer, scope, root, rootState, parentValue, prop, childValue, rootPath) {\n  if (childValue === parentValue) {\n    throw Error(\"Immer forbids circular references\");\n  } // In the `finalizeTree` method, only the `root` object may be a draft.\n\n\n  var isDraftProp = !!rootState && parentValue === root;\n  var isSetMember = isSet(parentValue);\n\n  if (isDraft(childValue)) {\n    var path = rootPath && isDraftProp && !isSetMember && // Set objects are atomic since they have no keys.\n    !has(rootState.assigned, prop) // Skip deep patches for assigned keys.\n    ? rootPath.concat(prop) : undefined; // Drafts owned by `scope` are finalized here.\n\n    childValue = finalize(immer, childValue, scope, path);\n    set(parentValue, prop, childValue); // Drafts from another scope must prevent auto-freezing.\n\n    if (isDraft(childValue)) {\n      scope.canAutoFreeze = false;\n    }\n  } // Unchanged draft properties are ignored.\n  else if (isDraftProp && is(childValue, get(rootState.base, prop))) {\n      return;\n    } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n    // TODO: the recursion over here looks weird, shouldn't non-draft stuff have it's own recursion?\n    // especially the passing on of root and rootState doesn't make sense...\n    else if (isDraftable(childValue)) {\n        each(childValue, function (key, grandChild) {\n          return finalizeProperty(immer, scope, root, rootState, childValue, key, grandChild, rootPath);\n        });\n        if (!scope.parent) { maybeFreeze(immer, childValue); }\n      }\n\n  if (isDraftProp && immer.onAssign && !isSetMember) {\n    immer.onAssign(rootState, prop, childValue);\n  }\n}\n\nfunction maybeFreeze(immer, value, deep) {\n  if (deep === void 0) {\n    deep = false;\n  }\n\n  if (immer.autoFreeze && !isDraft(value)) {\n    freeze(value, deep);\n  }\n}\n\n/**\r\n * Returns a new draft of the `base` object.\r\n *\r\n * The second argument is the parent draft-state (used internally).\r\n */\n\nfunction createProxy(base, parent) {\n  var isArray = Array.isArray(base);\n  var state = {\n    type: isArray ? ProxyType.ProxyArray : ProxyType.ProxyObject,\n    // Track which produce call this is associated with.\n    scope: parent ? parent.scope : ImmerScope.current,\n    // True for both shallow and deep changes.\n    modified: false,\n    // Used during finalization.\n    finalized: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned: {},\n    // The parent draft state.\n    parent: parent,\n    // The base state.\n    base: base,\n    // The base proxy.\n    draft: null,\n    // Any property proxies.\n    drafts: {},\n    // The base copy with any updated values.\n    copy: null,\n    // Called by the `produce` function.\n    revoke: null,\n    isManual: false\n  }; // the traps must target something, a bit like the 'real' base.\n  // but also, we need to be able to determine from the target what the relevant state is\n  // (to avoid creating traps per instance to capture the state in closure,\n  // and to avoid creating weird hidden properties as well)\n  // So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n  // Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\n  var target = state;\n  var traps = objectTraps;\n\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  } // TODO: optimization: might be faster, cheaper if we created a non-revocable proxy\n  // and administrate revoking ourselves\n\n\n  var _a = Proxy.revocable(target, traps),\n      revoke = _a.revoke,\n      proxy = _a.proxy;\n\n  state.draft = proxy;\n  state.revoke = revoke;\n  return proxy;\n}\n/**\r\n * Object drafts\r\n */\n\nvar objectTraps = {\n  get: function (state, prop) {\n    if (prop === DRAFT_STATE) { return state; }\n    var drafts = state.drafts; // Check for existing draft in unmodified state.\n\n    if (!state.modified && has(drafts, prop)) {\n      return drafts[prop];\n    }\n\n    var value = latest(state)[prop];\n\n    if (state.finalized || !isDraftable(value)) {\n      return value;\n    } // Check for existing draft in modified state.\n\n\n    if (state.modified) {\n      // Assigned values are never drafted. This catches any drafts we created, too.\n      if (value !== peek(state.base, prop)) { return value; } // Store drafts on the copy (when one exists).\n      // @ts-ignore\n\n      drafts = state.copy;\n    }\n\n    return drafts[prop] = state.scope.immer.createProxy(value, state);\n  },\n  has: function (state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys: function (state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set: function (state, prop\n  /* strictly not, but helps TS */\n  , value) {\n    if (!state.modified) {\n      var baseValue = peek(state.base, prop); // Optimize based on value's truthiness. Truthy values are guaranteed to\n      // never be undefined, so we can avoid the `in` operator. Lastly, truthy\n      // values may be drafts, but falsy values are never drafts.\n\n      var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;\n      if (isUnchanged) { return true; }\n      prepareCopy(state);\n      markChanged(state);\n    }\n\n    state.assigned[prop] = true; // @ts-ignore\n\n    state.copy[prop] = value;\n    return true;\n  },\n  deleteProperty: function (state, prop) {\n    // The `undefined` check is a fast path for pre-existing keys.\n    if (peek(state.base, prop) !== undefined || prop in state.base) {\n      state.assigned[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else if (state.assigned[prop]) {\n      // if an originally not assigned property was deleted\n      delete state.assigned[prop];\n    } // @ts-ignore\n\n\n    if (state.copy) { delete state.copy[prop]; }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor: function (state, prop) {\n    var owner = latest(state);\n    var desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n\n    if (desc) {\n      desc.writable = true;\n      desc.configurable = state.type !== ProxyType.ProxyArray || prop !== \"length\";\n    }\n\n    return desc;\n  },\n  defineProperty: function () {\n    throw new Error(\"Object.defineProperty() cannot be used on an Immer draft\"); // prettier-ignore\n  },\n  getPrototypeOf: function (state) {\n    return Object.getPrototypeOf(state.base);\n  },\n  setPrototypeOf: function () {\n    throw new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\"); // prettier-ignore\n  }\n};\n/**\r\n * Array drafts\r\n */\n\nvar arrayTraps = {};\neach(objectTraps, function (key, fn) {\n  // @ts-ignore\n  arrayTraps[key] = function () {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\n\narrayTraps.deleteProperty = function (state, prop) {\n  if (isNaN(parseInt(prop))) {\n    throw new Error(\"Immer only supports deleting array indices\"); // prettier-ignore\n  }\n\n  return objectTraps.deleteProperty.call(this, state[0], prop);\n};\n\narrayTraps.set = function (state, prop, value) {\n  if (prop !== \"length\" && isNaN(parseInt(prop))) {\n    throw new Error(\"Immer only supports setting array indices and the 'length' property\"); // prettier-ignore\n  }\n\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\n/**\r\n * Map drafts\r\n */\n// Access a property without creating an Immer draft.\n\n\nfunction peek(draft, prop) {\n  var state = draft[DRAFT_STATE];\n  var desc = Reflect.getOwnPropertyDescriptor(state ? latest(state) : draft, prop);\n  return desc && desc.value;\n}\n\nfunction markChanged(state) {\n  if (!state.modified) {\n    state.modified = true;\n\n    if (state.type === ProxyType.ProxyObject || state.type === ProxyType.ProxyArray) {\n      var copy_1 = state.copy = shallowCopy(state.base);\n      each(state.drafts, function (key, value) {\n        // @ts-ignore\n        copy_1[key] = value;\n      });\n      state.drafts = undefined;\n    }\n\n    if (state.parent) {\n      markChanged(state.parent);\n    }\n  }\n}\n\nfunction prepareCopy(state) {\n  if (!state.copy) {\n    state.copy = shallowCopy(state.base);\n  }\n}\n\nfunction willFinalizeES5(scope, result, isReplaced) {\n  scope.drafts.forEach(function (draft) {\n    draft[DRAFT_STATE].finalizing = true;\n  });\n\n  if (!isReplaced) {\n    if (scope.patches) {\n      markChangesRecursively(scope.drafts[0]);\n    } // This is faster when we don't care about which attributes changed.\n\n\n    markChangesSweep(scope.drafts);\n  } // When a child draft is returned, look for changes.\n  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n      markChangesSweep(scope.drafts);\n    }\n}\nfunction createES5Proxy(base, parent) {\n  var isArray = Array.isArray(base);\n  var draft = clonePotentialDraft(base);\n  each(draft, function (prop) {\n    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));\n  });\n  var state = {\n    type: isArray ? ProxyType.ES5Array : ProxyType.ES5Object,\n    scope: parent ? parent.scope : ImmerScope.current,\n    modified: false,\n    finalizing: false,\n    finalized: false,\n    assigned: {},\n    parent: parent,\n    base: base,\n    draft: draft,\n    copy: null,\n    revoked: false,\n    isManual: false\n  };\n  createHiddenProperty(draft, DRAFT_STATE, state);\n  return draft;\n} // Access a property without creating an Immer draft.\n\nfunction peek$1(draft, prop) {\n  var state = draft[DRAFT_STATE];\n\n  if (state && !state.finalizing) {\n    state.finalizing = true;\n    var value = draft[prop];\n    state.finalizing = false;\n    return value;\n  }\n\n  return draft[prop];\n}\n\nfunction get$1(state, prop) {\n  assertUnrevoked(state);\n  var value = peek$1(latest(state), prop);\n  if (state.finalizing) { return value; } // Create a draft if the value is unmodified.\n\n  if (value === peek$1(state.base, prop) && isDraftable(value)) {\n    prepareCopy$1(state); // @ts-ignore\n\n    return state.copy[prop] = state.scope.immer.createProxy(value, state);\n  }\n\n  return value;\n}\n\nfunction set$1(state, prop, value) {\n  assertUnrevoked(state);\n  state.assigned[prop] = true;\n\n  if (!state.modified) {\n    if (is(value, peek$1(latest(state), prop))) { return; }\n    markChangedES5(state);\n    prepareCopy$1(state);\n  } // @ts-ignore\n\n\n  state.copy[prop] = value;\n}\n\nfunction markChangedES5(state) {\n  if (!state.modified) {\n    state.modified = true;\n    if (state.parent) { markChangedES5(state.parent); }\n  }\n}\n\nfunction prepareCopy$1(state) {\n  if (!state.copy) { state.copy = clonePotentialDraft(state.base); }\n}\n\nfunction clonePotentialDraft(base) {\n  var state = base && base[DRAFT_STATE];\n\n  if (state) {\n    state.finalizing = true;\n    var draft = shallowCopy(state.draft, true);\n    state.finalizing = false;\n    return draft;\n  }\n\n  return shallowCopy(base);\n} // property descriptors are recycled to make sure we don't create a get and set closure per property,\n// but share them all instead\n\n\nvar descriptors = {};\n\nfunction proxyProperty(draft, prop, enumerable) {\n  var desc = descriptors[prop];\n\n  if (desc) {\n    desc.enumerable = enumerable;\n  } else {\n    descriptors[prop] = desc = {\n      configurable: true,\n      enumerable: enumerable,\n      get: function () {\n        return get$1(this[DRAFT_STATE], prop);\n      },\n      set: function (value) {\n        set$1(this[DRAFT_STATE], prop, value);\n      }\n    };\n  }\n\n  Object.defineProperty(draft, prop, desc);\n}\n\nfunction assertUnrevoked(state) {\n  if (state.revoked === true) { throw new Error(\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + JSON.stringify(latest(state))); }\n} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\nfunction markChangesSweep(drafts) {\n  // The natural order of drafts in the `scope` array is based on when they\n  // were accessed. By processing drafts in reverse natural order, we have a\n  // better chance of processing leaf nodes first. When a leaf node is known to\n  // have changed, we can avoid any traversal of its ancestor nodes.\n  for (var i = drafts.length - 1; i >= 0; i--) {\n    var state = drafts[i][DRAFT_STATE];\n\n    if (!state.modified) {\n      switch (state.type) {\n        case ProxyType.ES5Array:\n          if (hasArrayChanges(state)) { markChangedES5(state); }\n          break;\n\n        case ProxyType.ES5Object:\n          if (hasObjectChanges(state)) { markChangedES5(state); }\n          break;\n      }\n    }\n  }\n}\n\nfunction markChangesRecursively(object) {\n  if (!object || typeof object !== \"object\") { return; }\n  var state = object[DRAFT_STATE];\n  if (!state) { return; }\n  var base = state.base,\n      draft = state.draft,\n      assigned = state.assigned,\n      type = state.type;\n\n  if (type === ProxyType.ES5Object) {\n    // Look for added keys.\n    // TODO: looks quite duplicate to hasObjectChanges,\n    // probably there is a faster way to detect changes, as sweep + recurse seems to do some\n    // unnecessary work.\n    // also: probably we can store the information we detect here, to speed up tree finalization!\n    each(draft, function (key) {\n      if (key === DRAFT_STATE) { return; } // The `undefined` check is a fast path for pre-existing keys.\n\n      if (base[key] === undefined && !has(base, key)) {\n        assigned[key] = true;\n        markChangedES5(state);\n      } else if (!assigned[key]) {\n        // Only untouched properties trigger recursion.\n        markChangesRecursively(draft[key]);\n      }\n    }); // Look for removed keys.\n\n    each(base, function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (draft[key] === undefined && !has(draft, key)) {\n        assigned[key] = false;\n        markChangedES5(state);\n      }\n    });\n  } else if (type === ProxyType.ES5Array) {\n    if (hasArrayChanges(state)) {\n      markChangedES5(state);\n      assigned.length = true;\n    }\n\n    if (draft.length < base.length) {\n      for (var i = draft.length; i < base.length; i++) { assigned[i] = false; }\n    } else {\n      for (var i = base.length; i < draft.length; i++) { assigned[i] = true; }\n    } // Minimum count is enough, the other parts has been processed.\n\n\n    var min = Math.min(draft.length, base.length);\n\n    for (var i = 0; i < min; i++) {\n      // Only untouched indices trigger recursion.\n      if (assigned[i] === undefined) { markChangesRecursively(draft[i]); }\n    }\n  }\n}\n\nfunction hasObjectChanges(state) {\n  var base = state.base,\n      draft = state.draft; // Search for added keys and changed keys. Start at the back, because\n  // non-numeric keys are ordered by time of definition on the object.\n\n  var keys = Object.keys(draft);\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.\n\n    if (baseValue === undefined && !has(base, key)) {\n      return true;\n    } // Once a base key is deleted, future changes go undetected, because its\n    // descriptor is erased. This branch detects any missed changes.\n    else {\n        var value = draft[key];\n        var state_1 = value && value[DRAFT_STATE];\n\n        if (state_1 ? state_1.base !== baseValue : !is(value, baseValue)) {\n          return true;\n        }\n      }\n  } // At this point, no keys were added or changed.\n  // Compare key count to determine if keys were deleted.\n\n\n  return keys.length !== Object.keys(base).length;\n}\n\nfunction hasArrayChanges(state) {\n  var draft = state.draft;\n  if (draft.length !== state.base.length) { return true; } // See #116\n  // If we first shorten the length, our array interceptors will be removed.\n  // If after that new items are added, result in the same original length,\n  // those last items will have no intercepting property.\n  // So if there is no own descriptor on the last position, we know that items were removed and added\n  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n  // the last one\n\n  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\n  if (descriptor && !descriptor.get) { return true; } // For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\n  return false;\n}\n\nvar DraftMap = function (_super) {\n  if (!_super) {\n    /* istanbul ignore next */\n    throw new Error(\"Map is not polyfilled\");\n  }\n\n  __extends(DraftMap, _super); // Create class manually, cause #502\n\n\n  function DraftMap(target, parent) {\n    this[DRAFT_STATE] = {\n      type: ProxyType.Map,\n      parent: parent,\n      scope: parent ? parent.scope : ImmerScope.current,\n      modified: false,\n      finalized: false,\n      copy: undefined,\n      assigned: undefined,\n      base: target,\n      draft: this,\n      isManual: false,\n      revoked: false\n    };\n    return this;\n  }\n\n  var p = DraftMap.prototype; // TODO: smaller build size if we create a util for Object.defineProperty\n\n  Object.defineProperty(p, \"size\", {\n    get: function () {\n      return latest(this[DRAFT_STATE]).size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  p.has = function (key) {\n    return latest(this[DRAFT_STATE]).has(key);\n  };\n\n  p.set = function (key, value) {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n\n    if (latest(state).get(key) !== value) {\n      prepareCopy$2(state);\n      state.scope.immer.markChanged(state);\n      state.assigned.set(key, true);\n      state.copy.set(key, value);\n      state.assigned.set(key, true);\n    }\n\n    return this;\n  };\n\n  p.delete = function (key) {\n    if (!this.has(key)) {\n      return false;\n    }\n\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$2(state);\n    state.scope.immer.markChanged(state);\n    state.assigned.set(key, false);\n    state.copy.delete(key);\n    return true;\n  };\n\n  p.clear = function () {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$2(state);\n    state.scope.immer.markChanged(state);\n    state.assigned = new Map();\n    return state.copy.clear();\n  };\n\n  p.forEach = function (cb, thisArg) {\n    var _this = this;\n\n    var state = this[DRAFT_STATE];\n    latest(state).forEach(function (_value, key, _map) {\n      cb.call(thisArg, _this.get(key), key, _this);\n    });\n  };\n\n  p.get = function (key) {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    var value = latest(state).get(key);\n\n    if (state.finalized || !isDraftable(value)) {\n      return value;\n    }\n\n    if (value !== state.base.get(key)) {\n      return value; // either already drafted or reassigned\n    } // despite what it looks, this creates a draft only once, see above condition\n\n\n    var draft = state.scope.immer.createProxy(value, state);\n    prepareCopy$2(state);\n    state.copy.set(key, draft);\n    return draft;\n  };\n\n  p.keys = function () {\n    return latest(this[DRAFT_STATE]).keys();\n  };\n\n  p.values = function () {\n    var _a;\n\n    var _this = this;\n\n    var iterator = this.keys();\n    return _a = {}, _a[iteratorSymbol] = function () {\n      return _this.values();\n    }, _a.next = function () {\n      var r = iterator.next();\n      /* istanbul ignore next */\n\n      if (r.done) { return r; }\n\n      var value = _this.get(r.value);\n\n      return {\n        done: false,\n        value: value\n      };\n    }, _a;\n  };\n\n  p.entries = function () {\n    var _a;\n\n    var _this = this;\n\n    var iterator = this.keys();\n    return _a = {}, _a[iteratorSymbol] = function () {\n      return _this.entries();\n    }, _a.next = function () {\n      var r = iterator.next();\n      /* istanbul ignore next */\n\n      if (r.done) { return r; }\n\n      var value = _this.get(r.value);\n\n      return {\n        done: false,\n        value: [r.value, value]\n      };\n    }, _a;\n  };\n\n  p[iteratorSymbol] = function () {\n    return this.entries();\n  };\n\n  return DraftMap;\n}(Map);\n\nfunction proxyMap(target, parent) {\n  // @ts-ignore\n  return new DraftMap(target, parent);\n}\n\nfunction prepareCopy$2(state) {\n  if (!state.copy) {\n    state.assigned = new Map();\n    state.copy = new Map(state.base);\n  }\n}\n\nvar DraftSet = function (_super) {\n  if (!_super) {\n    /* istanbul ignore next */\n    throw new Error(\"Set is not polyfilled\");\n  }\n\n  __extends(DraftSet, _super); // Create class manually, cause #502\n\n\n  function DraftSet(target, parent) {\n    this[DRAFT_STATE] = {\n      type: ProxyType.Set,\n      parent: parent,\n      scope: parent ? parent.scope : ImmerScope.current,\n      modified: false,\n      finalized: false,\n      copy: undefined,\n      base: target,\n      draft: this,\n      drafts: new Map(),\n      revoked: false,\n      isManual: false\n    };\n    return this;\n  }\n\n  var p = DraftSet.prototype;\n  Object.defineProperty(p, \"size\", {\n    get: function () {\n      return latest(this[DRAFT_STATE]).size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  p.has = function (value) {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state); // bit of trickery here, to be able to recognize both the value, and the draft of its value\n\n    if (!state.copy) {\n      return state.base.has(value);\n    }\n\n    if (state.copy.has(value)) { return true; }\n    if (state.drafts.has(value) && state.copy.has(state.drafts.get(value))) { return true; }\n    return false;\n  };\n\n  p.add = function (value) {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n\n    if (state.copy) {\n      state.copy.add(value);\n    } else if (!state.base.has(value)) {\n      prepareCopy$3(state);\n      state.scope.immer.markChanged(state);\n      state.copy.add(value);\n    }\n\n    return this;\n  };\n\n  p.delete = function (value) {\n    if (!this.has(value)) {\n      return false;\n    }\n\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$3(state);\n    state.scope.immer.markChanged(state);\n    return state.copy.delete(value) || (state.drafts.has(value) ? state.copy.delete(state.drafts.get(value)) :\n    /* istanbul ignore next */\n    false);\n  };\n\n  p.clear = function () {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$3(state);\n    state.scope.immer.markChanged(state);\n    return state.copy.clear();\n  };\n\n  p.values = function () {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$3(state);\n    return state.copy.values();\n  };\n\n  p.entries = function entries() {\n    var state = this[DRAFT_STATE];\n    assertUnrevoked(state);\n    prepareCopy$3(state);\n    return state.copy.entries();\n  };\n\n  p.keys = function () {\n    return this.values();\n  };\n\n  p[iteratorSymbol] = function () {\n    return this.values();\n  };\n\n  p.forEach = function forEach(cb, thisArg) {\n    var iterator = this.values();\n    var result = iterator.next();\n\n    while (!result.done) {\n      cb.call(thisArg, result.value, result.value, this);\n      result = iterator.next();\n    }\n  };\n\n  return DraftSet;\n}(Set);\n\nfunction proxySet(target, parent) {\n  // @ts-ignore\n  return new DraftSet(target, parent);\n}\n\nfunction prepareCopy$3(state) {\n  if (!state.copy) {\n    // create drafts for all entries to preserve insertion order\n    state.copy = new Set();\n    state.base.forEach(function (value) {\n      if (isDraftable(value)) {\n        var draft = state.scope.immer.createProxy(value, state);\n        state.drafts.set(value, draft);\n        state.copy.add(draft);\n      } else {\n        state.copy.add(value);\n      }\n    });\n  }\n}\n\nfunction generatePatches(state, basePath, patches, inversePatches) {\n  switch (state.type) {\n    case ProxyType.ProxyObject:\n    case ProxyType.ES5Object:\n    case ProxyType.Map:\n      return generatePatchesFromAssigned(state, basePath, patches, inversePatches);\n\n    case ProxyType.ES5Array:\n    case ProxyType.ProxyArray:\n      return generateArrayPatches(state, basePath, patches, inversePatches);\n\n    case ProxyType.Set:\n      return generateSetPatches(state, basePath, patches, inversePatches);\n  }\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n  var _a, _b;\n\n  var base = state.base,\n      assigned = state.assigned,\n      copy = state.copy;\n  /* istanbul ignore next */\n\n  if (!copy) { die(); } // Reduce complexity by ensuring `base` is never longer.\n\n  if (copy.length < base.length) {\n    _a = [copy, base], base = _a[0], copy = _a[1];\n    _b = [inversePatches, patches], patches = _b[0], inversePatches = _b[1];\n  }\n\n  var delta = copy.length - base.length; // Find the first replaced index.\n\n  var start = 0;\n\n  while (base[start] === copy[start] && start < base.length) {\n    ++start;\n  } // Find the last replaced index. Search from the end to optimize splice patches.\n\n\n  var end = base.length;\n\n  while (end > start && base[end - 1] === copy[end + delta - 1]) {\n    --end;\n  } // Process replaced indices.\n\n\n  for (var i = start; i < end; ++i) {\n    if (assigned[i] && copy[i] !== base[i]) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: \"replace\",\n        path: path,\n        value: copy[i]\n      });\n      inversePatches.push({\n        op: \"replace\",\n        path: path,\n        value: base[i]\n      });\n    }\n  }\n\n  var replaceCount = patches.length; // Process added indices.\n\n  for (var i = end + delta - 1; i >= end; --i) {\n    var path = basePath.concat([i]);\n    patches[replaceCount + i - end] = {\n      op: \"add\",\n      path: path,\n      value: copy[i]\n    };\n    inversePatches.push({\n      op: \"remove\",\n      path: path\n    });\n  }\n} // This is used for both Map objects and normal objects.\n\n\nfunction generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n  var base = state.base,\n      copy = state.copy;\n  each(state.assigned, function (key, assignedValue) {\n    var origValue = get(base, key);\n    var value = get(copy, key);\n    var op = !assignedValue ? \"remove\" : has(base, key) ? \"replace\" : \"add\";\n    if (origValue === value && op === \"replace\") { return; }\n    var path = basePath.concat(key);\n    patches.push(op === \"remove\" ? {\n      op: op,\n      path: path\n    } : {\n      op: op,\n      path: path,\n      value: value\n    });\n    inversePatches.push(op === \"add\" ? {\n      op: \"remove\",\n      path: path\n    } : op === \"remove\" ? {\n      op: \"add\",\n      path: path,\n      value: origValue\n    } : {\n      op: \"replace\",\n      path: path,\n      value: origValue\n    });\n  });\n}\n\nfunction generateSetPatches(state, basePath, patches, inversePatches) {\n  var base = state.base,\n      copy = state.copy;\n  var i = 0;\n  base.forEach(function (value) {\n    if (!copy.has(value)) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: \"remove\",\n        path: path,\n        value: value\n      });\n      inversePatches.unshift({\n        op: \"add\",\n        path: path,\n        value: value\n      });\n    }\n\n    i++;\n  });\n  i = 0;\n  copy.forEach(function (value) {\n    if (!base.has(value)) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: \"add\",\n        path: path,\n        value: value\n      });\n      inversePatches.unshift({\n        op: \"remove\",\n        path: path,\n        value: value\n      });\n    }\n\n    i++;\n  });\n}\n\nfunction applyPatches(draft, patches) {\n  patches.forEach(function (patch) {\n    var path = patch.path,\n        op = patch.op;\n    /* istanbul ignore next */\n\n    if (!path.length) { die(); }\n    var base = draft;\n\n    for (var i = 0; i < path.length - 1; i++) {\n      base = get(base, path[i]);\n      if (!base || typeof base !== \"object\") { throw new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")); } // prettier-ignore\n    }\n\n    var type = getArchtype(base);\n    var value = deepClonePatchValue(patch.value); // used to clone patch to ensure original patch is not modified, see #411\n\n    var key = path[path.length - 1];\n\n    switch (op) {\n      case \"replace\":\n        switch (type) {\n          case Archtype.Map:\n            return base.set(key, value);\n\n          /* istanbul ignore next */\n\n          case Archtype.Set:\n            throw new Error('Sets cannot have \"replace\" patches.');\n\n          default:\n            // if value is an object, then it's assigned by reference\n            // in the following add or remove ops, the value field inside the patch will also be modifyed\n            // so we use value from the cloned patch\n            // @ts-ignore\n            return base[key] = value;\n        }\n\n      case \"add\":\n        switch (type) {\n          case Archtype.Array:\n            return base.splice(key, 0, value);\n\n          case Archtype.Map:\n            return base.set(key, value);\n\n          case Archtype.Set:\n            return base.add(value);\n\n          default:\n            return base[key] = value;\n        }\n\n      case \"remove\":\n        switch (type) {\n          case Archtype.Array:\n            return base.splice(key, 1);\n\n          case Archtype.Map:\n            return base.delete(key);\n\n          case Archtype.Set:\n            return base.delete(patch.value);\n\n          default:\n            return delete base[key];\n        }\n\n      default:\n        throw new Error(\"Unsupported patch operation: \" + op);\n    }\n  });\n  return draft;\n}\n\nfunction deepClonePatchValue(obj) {\n  if (!obj || typeof obj !== \"object\") { return obj; }\n  if (Array.isArray(obj)) { return obj.map(deepClonePatchValue); }\n  if (isMap(obj)) { return new Map(Array.from(obj.entries()).map(function (_a) {\n    var k = _a[0],\n        v = _a[1];\n    return [k, deepClonePatchValue(v)];\n  })); }\n  if (isSet(obj)) { return new Set(Array.from(obj).map(deepClonePatchValue)); }\n  var cloned = Object.create(Object.getPrototypeOf(obj));\n\n  for (var key in obj) { cloned[key] = deepClonePatchValue(obj[key]); }\n\n  return cloned;\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/* istanbul ignore next */\n\nfunction verifyMinified() {}\n\nvar configDefaults = {\n  useProxies: typeof Proxy !== \"undefined\" && typeof Proxy.revocable !== \"undefined\" && typeof Reflect !== \"undefined\",\n  autoFreeze: typeof process !== \"undefined\" ? process.env.NODE_ENV !== \"production\" :\n  /* istanbul ignore next */\n  verifyMinified.name === \"verifyMinified\",\n  onAssign: null,\n  onDelete: null,\n  onCopy: null\n};\n\nvar Immer =\n/** @class */\nfunction () {\n  function Immer(config) {\n    var _this = this;\n\n    this.useProxies = false;\n    this.autoFreeze = false;\n    each(configDefaults, function (key, value) {\n      var _a, _b; // @ts-ignore\n\n\n      _this[key] = (_b = (_a = config) === null || _a === void 0 ? void 0 : _a[key], _b !== null && _b !== void 0 ? _b : value);\n    });\n    this.setUseProxies(this.useProxies);\n    this.produce = this.produce.bind(this);\n    this.produceWithPatches = this.produceWithPatches.bind(this);\n  }\n  /**\r\n   * The `produce` function takes a value and a \"recipe function\" (whose\r\n   * return value often depends on the base state). The recipe function is\r\n   * free to mutate its first argument however it wants. All mutations are\r\n   * only ever applied to a __copy__ of the base state.\r\n   *\r\n   * Pass only a function to create a \"curried producer\" which relieves you\r\n   * from passing the recipe function every time.\r\n   *\r\n   * Only plain objects and arrays are made mutable. All other objects are\r\n   * considered uncopyable.\r\n   *\r\n   * Note: This function is __bound__ to its `Immer` instance.\r\n   *\r\n   * @param {any} base - the initial state\r\n   * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\r\n   * @param {Function} patchListener - optional function that will be called with all the patches produced here\r\n   * @returns {any} a new state, or the initial state if nothing was modified\r\n   */\n\n\n  Immer.prototype.produce = function (base, recipe, patchListener) {\n    var _this = this; // curried invocation\n\n\n    if (typeof base === \"function\" && typeof recipe !== \"function\") {\n      var defaultBase_1 = recipe;\n      recipe = base;\n      var self_1 = this;\n      return function curriedProduce(base) {\n        var arguments$1 = arguments;\n\n        var _this = this;\n\n        if (base === void 0) {\n          base = defaultBase_1;\n        }\n\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments$1[_i];\n        }\n\n        return self_1.produce(base, function (draft) {\n          return recipe.call.apply(recipe, __spreadArrays([_this, draft], args));\n        }); // prettier-ignore\n      };\n    } // prettier-ignore\n\n\n    {\n      if (typeof recipe !== \"function\") {\n        throw new Error(\"The first or second argument to `produce` must be a function\");\n      }\n\n      if (patchListener !== undefined && typeof patchListener !== \"function\") {\n        throw new Error(\"The third argument to `produce` must be a function or undefined\");\n      }\n    }\n    var result; // Only plain objects, arrays, and \"immerable classes\" are drafted.\n\n    if (isDraftable(base)) {\n      var scope_1 = ImmerScope.enter(this);\n      var proxy = this.createProxy(base, undefined);\n      var hasError = true;\n\n      try {\n        result = recipe(proxy);\n        hasError = false;\n      } finally {\n        // finally instead of catch + rethrow better preserves original stack\n        if (hasError) { scope_1.revoke(); }else { scope_1.leave(); }\n      }\n\n      if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n        return result.then(function (result) {\n          scope_1.usePatches(patchListener);\n          return processResult(_this, result, scope_1);\n        }, function (error) {\n          scope_1.revoke();\n          throw error;\n        });\n      }\n\n      scope_1.usePatches(patchListener);\n      return processResult(this, result, scope_1);\n    } else {\n      result = recipe(base);\n      if (result === NOTHING) { return undefined; }\n      if (result === undefined) { result = base; }\n      maybeFreeze(this, result, true);\n      return result;\n    }\n  };\n\n  Immer.prototype.produceWithPatches = function (arg1, arg2, arg3) {\n    var _this = this;\n\n    if (typeof arg1 === \"function\") {\n      return function (state) {\n        var arguments$1 = arguments;\n\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments$1[_i];\n        }\n\n        return _this.produceWithPatches(state, function (draft) {\n          return arg1.apply(void 0, __spreadArrays([draft], args));\n        });\n      };\n    } // non-curried form\n\n    /* istanbul ignore next */\n\n\n    if (arg3) { die(); }\n    var patches, inversePatches;\n    var nextState = this.produce(arg1, arg2, function (p, ip) {\n      patches = p;\n      inversePatches = ip;\n    });\n    return [nextState, patches, inversePatches];\n  };\n\n  Immer.prototype.createDraft = function (base) {\n    if (!isDraftable(base)) {\n      throw new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\"); // prettier-ignore\n    }\n\n    var scope = ImmerScope.enter(this);\n    var proxy = this.createProxy(base, undefined);\n    proxy[DRAFT_STATE].isManual = true;\n    scope.leave();\n    return proxy;\n  };\n\n  Immer.prototype.finishDraft = function (draft, patchListener) {\n    var state = draft && draft[DRAFT_STATE];\n\n    if (!state || !state.isManual) {\n      throw new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\"); // prettier-ignore\n    }\n\n    if (state.finalized) {\n      throw new Error(\"The given draft is already finalized\"); // prettier-ignore\n    }\n\n    var scope = state.scope;\n    scope.usePatches(patchListener);\n    return processResult(this, undefined, scope);\n  };\n  /**\r\n   * Pass true to automatically freeze all copies created by Immer.\r\n   *\r\n   * By default, auto-freezing is disabled in production.\r\n   */\n\n\n  Immer.prototype.setAutoFreeze = function (value) {\n    this.autoFreeze = value;\n  };\n  /**\r\n   * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\r\n   * always faster than using ES5 proxies.\r\n   *\r\n   * By default, feature detection is used, so calling this is rarely necessary.\r\n   */\n\n\n  Immer.prototype.setUseProxies = function (value) {\n    this.useProxies = value;\n  };\n\n  Immer.prototype.applyPatches = function (base, patches) {\n    // If a patch replaces the entire state, take that replacement as base\n    // before applying patches\n    var i;\n\n    for (i = patches.length - 1; i >= 0; i--) {\n      var patch = patches[i];\n\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n\n    if (isDraft(base)) {\n      // N.B: never hits if some patch a replacement, patches are never drafts\n      return applyPatches(base, patches);\n    } // Otherwise, produce a copy of the base state.\n\n\n    return this.produce(base, function (draft) {\n      return applyPatches(draft, patches.slice(i + 1));\n    });\n  };\n\n  Immer.prototype.createProxy = function (value, parent) {\n    // precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n    var draft = isMap(value) ? proxyMap(value, parent) : isSet(value) ? proxySet(value, parent) : this.useProxies ? createProxy(value, parent) : createES5Proxy(value, parent);\n    var scope = parent ? parent.scope : ImmerScope.current;\n    scope.drafts.push(draft);\n    return draft;\n  };\n\n  Immer.prototype.willFinalize = function (scope, thing, isReplaced) {\n    if (!this.useProxies) { willFinalizeES5(scope, thing, isReplaced); }\n  };\n\n  Immer.prototype.markChanged = function (state) {\n    if (this.useProxies) {\n      markChanged(state);\n    } else {\n      markChangedES5(state);\n    }\n  };\n\n  return Immer;\n}();\n\nvar immer = new Immer();\n/**\r\n * The `produce` function takes a value and a \"recipe function\" (whose\r\n * return value often depends on the base state). The recipe function is\r\n * free to mutate its first argument however it wants. All mutations are\r\n * only ever applied to a __copy__ of the base state.\r\n *\r\n * Pass only a function to create a \"curried producer\" which relieves you\r\n * from passing the recipe function every time.\r\n *\r\n * Only plain objects and arrays are made mutable. All other objects are\r\n * considered uncopyable.\r\n *\r\n * Note: This function is __bound__ to its `Immer` instance.\r\n *\r\n * @param {any} base - the initial state\r\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\r\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\r\n * @returns {any} a new state, or the initial state if nothing was modified\r\n */\n\nvar produce = immer.produce;\n/**\r\n * Like `produce`, but `produceWithPatches` always returns a tuple\r\n * [nextState, patches, inversePatches] (instead of just the next state)\r\n */\n\nvar produceWithPatches = immer.produceWithPatches.bind(immer);\n/**\r\n * Pass true to automatically freeze all copies created by Immer.\r\n *\r\n * By default, auto-freezing is disabled in production.\r\n */\n\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\n/**\r\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\r\n * always faster than using ES5 proxies.\r\n *\r\n * By default, feature detection is used, so calling this is rarely necessary.\r\n */\n\nvar setUseProxies = immer.setUseProxies.bind(immer);\n/**\r\n * Apply an array of Immer patches to the first argument.\r\n *\r\n * This function is a producer, which means copy-on-write is in effect.\r\n */\n\nvar applyPatches$1 = immer.applyPatches.bind(immer);\n/**\r\n * Create an Immer draft from the given base state, which may be a draft itself.\r\n * The draft can be modified until you finalize it with the `finishDraft` function.\r\n */\n\nvar createDraft = immer.createDraft.bind(immer);\n/**\r\n * Finalize an Immer draft from a `createDraft` call, returning the base state\r\n * (if no changes were made) or a modified copy. The draft must *not* be\r\n * mutated afterwards.\r\n *\r\n * Pass a function as the 2nd argument to generate Immer patches based on the\r\n * changes that were made.\r\n */\n\nvar finishDraft = immer.finishDraft.bind(immer);\n/**\r\n * This function is actually a no-op, but can be used to cast an immutable type\r\n * to an draft type and make TypeScript happy\r\n *\r\n * @param value\r\n */\n\nfunction castDraft(value) {\n  return value;\n}\n/**\r\n * This function is actually a no-op, but can be used to cast a mutable type\r\n * to an immutable type and make TypeScript happy\r\n * @param value\r\n */\n\nfunction castImmutable(value) {\n  return value;\n}\n\nexport default produce;\nexport { Immer, applyPatches$1 as applyPatches, castDraft, castImmutable, createDraft, finishDraft, DRAFTABLE as immerable, isDraft, isDraftable, NOTHING as nothing, original, produce, produceWithPatches, setAutoFreeze, setUseProxies };\n//# sourceMappingURL=immer.module.js.map\n","import { produce, createDraft, finishDraft } from 'immer';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An utility function, that determines if provided target is defined and not nullable\n *\n * @template T\n * @param {?} target - Value to check for being `undefined` or `null`\n * @return {?} - True if the passed target is not `undefined` and not `null`\n */\nfunction isDefined(target) {\n    return target !== undefined && target !== null;\n}\n/**\n * An utility function, that determines if provided object is valid\n *\n * @template T\n * @param {?} ctx - `StateContext` plain object\n * @return {?} - True if provided object is valid and has necessary methods\n */\nfunction isValidContext(ctx) {\n    return isDefined(ctx) && typeof ctx.getState === 'function' && typeof ctx.setState === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An adapter function for the `produce` from `immer` library\n *\n * @deprecated - use immutable helpers from ngxs v3.4.x\n * @template T\n * @param {?} ctx - Reference to the `StateContext` plain object\n * @param {?} recipe - Function that receives a proxy of the current state\n * @return {?} - New state or throws an error\n */\nfunction produce$1(ctx, recipe) {\n    /** @type {?} */\n    const invalidContext = !isValidContext(ctx);\n    if (invalidContext) {\n        throw new Error('You should provide `StateContext` object as the first argument of the `produce` function');\n    }\n    return ctx.setState((/** @type {?} */ (((/**\n     * @param {?} state\n     * @return {?}\n     */\n    (state) => produce(state, recipe))))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ImmutableStateContext {\n    /**\n     * @param {?} ctx\n     */\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.frozenState = null;\n        ImmutableStateContext.autobindStateContext(this);\n    }\n    /**\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    static autobindStateContext(context) {\n        for (const prop of Object.getOwnPropertyNames(Object.getPrototypeOf(context))) {\n            if (prop === 'constructor' || typeof context[prop] !== 'function') {\n                continue;\n            }\n            context[prop] = context[prop].bind(context);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getState() {\n        this.frozenState = (/** @type {?} */ (createDraft(this.ctx.getState())));\n        return this.frozenState;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    setState(val) {\n        /** @type {?} */\n        let state;\n        if (typeof val === 'function') {\n            /** @type {?} */\n            let newState;\n            /** @type {?} */\n            const oldState = (/** @type {?} */ (createDraft(this.ctx.getState())));\n            /** @type {?} */\n            const operator = (/** @type {?} */ (val));\n            /** @type {?} */\n            const mutatedOldState = operator(oldState);\n            if (this.frozenState === mutatedOldState) {\n                newState = finishDraft(this.frozenState);\n                finishDraft(oldState);\n            }\n            else {\n                /** @type {?} */\n                const mutateOutsideOperator = oldState !== mutatedOldState;\n                if (mutateOutsideOperator) {\n                    newState = mutatedOldState;\n                    finishDraft(oldState);\n                }\n                else {\n                    newState = finishDraft(mutatedOldState);\n                }\n            }\n            state = newState;\n        }\n        else {\n            state = finishDraft(val);\n        }\n        this.frozenState = null;\n        return this.ctx.setState(state);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    patchState(val) {\n        return this.ctx.patchState((/** @type {?} */ (finishDraft(val))));\n    }\n    /**\n     * @param {?} actions\n     * @return {?}\n     */\n    dispatch(actions) {\n        return this.ctx.dispatch(actions);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @deprecated - use ImmutableContext instead Mutation\n * @return {?}\n */\nfunction Mutation() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        const method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} ctx\n         * @param {?} action\n         * @param {...?} args\n         * @return {?}\n         */\n        function (ctx, action, ...args) {\n            return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction ImmutableContext() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        const method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} ctx\n         * @param {?} action\n         * @param {...?} args\n         * @return {?}\n         */\n        function (ctx, action, ...args) {\n            return method.apply(this, [new ImmutableStateContext(ctx), action, ...args]);\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction ImmutableSelector() {\n    return (/**\n     * @param {?} _target\n     * @param {?} _key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function (_target, _key, descriptor) {\n        /** @type {?} */\n        const method = descriptor.value;\n        descriptor.value = (/**\n         * @param {?} state\n         * @param {...?} args\n         * @return {?}\n         */\n        function (state, ...args) {\n            return method.apply(this, [createDraft(state), ...args]);\n        });\n        return descriptor;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ImmutableContext, ImmutableSelector, produce$1 as produce, Mutation };\n\n//# sourceMappingURL=ngxs-labs-immer-adapter.js.map","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r44 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r44.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r44 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r44.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r52 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r52); const tab_r44 = ctx.$implicit; const i_r45 = ctx.index; const ctx_r51 = ɵngcc0.ɵɵnextContext(); const _r40 = ɵngcc0.ɵɵreference(1); return ctx_r51._handleClick(tab_r44, _r40, i_r45); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r44 = ctx.$implicit;\n    const i_r45 = ctx.index;\n    const ctx_r41 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r41.selectedIndex == i_r45);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r41._getTabLabelId(i_r45))(\"disabled\", tab_r44.disabled)(\"matRippleDisabled\", tab_r44.disabled || ctx_r41.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r41._getTabIndex(tab_r44, i_r45))(\"aria-posinset\", i_r45 + 1)(\"aria-setsize\", ctx_r41._tabs.length)(\"aria-controls\", ctx_r41._getTabContentId(i_r45))(\"aria-selected\", ctx_r41.selectedIndex == i_r45)(\"aria-label\", tab_r44.ariaLabel || null)(\"aria-labelledby\", !tab_r44.ariaLabel && tab_r44.ariaLabelledby ? tab_r44.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r44.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r44.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r56 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r56); const ctx_r55 = ɵngcc0.ɵɵnextContext(); return ctx_r55._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r56); const ctx_r57 = ɵngcc0.ɵɵnextContext(); return ctx_r57._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r53 = ctx.$implicit;\n    const i_r54 = ctx.index;\n    const ctx_r43 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r43.selectedIndex == i_r54);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r43._getTabContentId(i_r54))(\"content\", tab_r53.content)(\"position\", tab_r53.position)(\"origin\", tab_r53.origin)(\"animationDuration\", ctx_r43.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r43._getTabLabelId(i_r54));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { AppNotification } from './app-notification.model';\nimport { EntityService, IPagination } from '@ngx-starter-kit/shared';\nimport { Observable } from 'rxjs';\nimport { catchError, finalize, map, retry } from 'rxjs/operators';\nimport { BrowserFeatureKey, FeatureService } from '@ngx-starter-kit/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService extends EntityService<AppNotification> {\n  public apiBaseUrl = environment.API_BASE_URL;\n  readonly entityPath = 'notifications';\n\n  constructor(httpClient: HttpClient, private readonly featureService: FeatureService) {\n    super(httpClient);\n  }\n\n  getAll(): Observable<AppNotification[]> {\n    this.loadingSubject.next(true);\n    return this.httpClient.get<IPagination<AppNotification>>(`${this.baseUrl}/${this.entityPath}/own`).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError),\n      finalize(() => this.loadingSubject.next(false)),\n      // return without count\n      map(data => data.items),\n    );\n  }\n\n  /**\n   * Util for showing native Notifications\n   * @param noti:  {\n   *    title: 'NGX WebApp Notification',\n   *   options: {\n   *     body: payload.message,\n   *     icon: 'assets/icons/icon-72x72.png',\n   *     data: {\n   *       click_url: '/index.html',\n   *     },\n   *   },\n   * }\n   */\n  async showNativeNotification(noti: { title: string; options?: Partial<NotificationOptions> }) {\n    if (\n      this.featureService.detectFeature(BrowserFeatureKey.NotificationsAPI).supported &&\n      !this.featureService.isMobileAndroid()\n    ) {\n      const permission = await Notification.requestPermission();\n      if (permission === 'granted') {\n        const notification = new Notification(noti.title, noti.options);\n        notification.onclick = () => {\n          console.log('clicked todo: mark as read');\n        };\n      }\n    }\n  }\n}\n","import { AppNotification } from './app-notification.model';\n\n// Actions\nexport class FetchNotifications {\n  static readonly type = '[Notifications] Fetch';\n}\n// new AddNotification(\n//   { id: 6,\n//     icon: 'notifications',\n//      message: 'sumo',\n//      createdAt: new Date(Date.now() - 864e5),\n//      read: false,\n//      native: true\n//     }\n//   ),\nexport class AddNotification {\n  static readonly type = '[Notifications] Add';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class DeleteNotification {\n  static readonly type = '[Notifications] Delete';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class MarkAsRead {\n  static readonly type = '[Notifications] MarkAsRead';\n  constructor(public readonly payload: AppNotification) {}\n}\n\nexport class MarkAllAsRead {\n  static readonly type = '[Notifications] MarkAllAsRead';\n}\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\nimport { Injectable } from '@angular/core';\nimport { AddNotification, DeleteNotification, MarkAllAsRead, MarkAsRead } from './notifications.actions';\nimport { SendWebSocketAction } from '@ngx-starter-kit/socketio-plugin';\nimport { SwPush } from '@angular/service-worker';\nimport { AppNotification } from './app-notification.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsHandler {\n  constructor(private actions$: Actions, private store: Store, private readonly swPush: SwPush) {\n    this.actions$\n      .pipe(ofActionSuccessful(DeleteNotification))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n    this.actions$\n      .pipe(ofActionSuccessful(MarkAsRead))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n    this.actions$\n      .pipe(ofActionSuccessful(MarkAllAsRead))\n      .subscribe(action => this.store.dispatch(new SendWebSocketAction(action)));\n\n    if (this.swPush.isEnabled) {\n      this.swPush.messages.subscribe((message: { notification: Notification }) => {\n        if (message.notification.data.targetType) {\n          this.store.dispatch(new AddNotification(new AppNotification(message.notification.data)));\n        }\n      });\n      this.swPush.notificationClicks.subscribe(({ action, notification: { title, ...notification } }) => {\n        console.log(`action: ${action}, title: ${title}, notification`, notification);\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { SharedFlexLayoutModule, SharedPerfectScrollbarModule } from '@ngx-starter-kit/shared';\nimport { ClickOutsideModule, DateFnsModule, NgLetModule } from '@ngx-starter-kit/ngx-utils';\n\nimport { NotificationsState } from './notifications.state';\nimport { NotificationsHandler } from './notifications.handler';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nconst matModules = [MatButtonModule, MatIconModule, MatBadgeModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    [...matModules],\n    NgLetModule,\n    DateFnsModule,\n    ClickOutsideModule,\n    SharedPerfectScrollbarModule,\n    SharedFlexLayoutModule,\n    NgxsModule.forFeature([NotificationsState]),\n  ],\n  declarations: [NotificationsComponent],\n  exports: [NotificationsComponent],\n})\nexport class NotificationsModule {\n  // HINT: NotificationsHandler is injected here to initialize it as Module Run Block\n  constructor(notificationsHandler: NotificationsHandler) {}\n}\n","import { Entity } from '@ngx-starter-kit/shared';\n\nexport enum TargetType {\n  ALL = 'all',\n  USER = 'user',\n  TOPIC = 'topic',\n}\nexport enum NotificationColor {\n  WARN = 'warn',\n  ACCENT = 'accent',\n  PRIMARY = 'primary',\n}\n\nexport enum NotificationIcon {\n  NOTIFICATIONS = 'notifications',\n  NOTIFICATIONS_ACTIVE = 'notifications_active',\n  SHOPPING_BASKET = 'shopping_basket',\n  EJECT = 'eject',\n  CACHED = 'cached',\n  CODE = 'code',\n}\n\nexport class AppNotification extends Entity {\n  public id: number;\n  public title: string;\n  public body: string;\n  public target: string;\n  public targetType: TargetType;\n  public icon: NotificationIcon;\n  public color: NotificationColor;\n  public read: boolean;\n  public native: boolean;\n  public isActive: boolean;\n  public createdAt: Date;\n  public updatedAt?: Date;\n}\n","import { isDevMode, Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/**\n * \\@docs-private\n */\nclass MatBadgeBase {\n}\n/** @type {?} */\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/**\n * Directive to display a text badge.\n */\nclass MatBadge extends _MatBadgeMixinBase {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _ariaDescriber\n     * @param {?} _renderer\n     * @param {?=} _animationMode\n     */\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the badge has any content.\n         */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /**\n         * Size of the badge. Can be 'small', 'medium', or 'large'.\n         */\n        this.size = 'medium';\n        /**\n         * Unique id for the badge\n         */\n        this._id = nextId++;\n        if (isDevMode()) {\n            /** @type {?} */\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /**\n     * The color of the badge. Can be `primary`, `accent`, or `warn`.\n     * @return {?}\n     */\n    get color() { return this._color; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /**\n     * Whether the badge should overlap its contents or not\n     * @return {?}\n     */\n    get overlap() { return this._overlap; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /**\n     * Message used to describe the decorated element via aria-describedby\n     * @return {?}\n     */\n    get description() { return this._description; }\n    /**\n     * @param {?} newDescription\n     * @return {?}\n     */\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            /** @type {?} */\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /**\n     * Whether the badge is hidden.\n     * @return {?}\n     */\n    get hidden() { return this._hidden; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /**\n     * Whether the badge is above the host or not\n     * @return {?}\n     */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /**\n     * Whether the badge is after the host or not\n     * @return {?}\n     */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const contentChange = changes['content'];\n        if (contentChange) {\n            /** @type {?} */\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     * @return {?}\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /**\n     * Injects a span element into the DOM with the content.\n     * @private\n     * @return {?}\n     */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    }\n    /**\n     * Creates the badge element\n     * @private\n     * @return {?}\n     */\n    _createBadgeElement() {\n        /** @type {?} */\n        const badgeElement = this._renderer.createElement('span');\n        /** @type {?} */\n        const activeClass = 'mat-badge-active';\n        /** @type {?} */\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    badgeElement.classList.add(activeClass);\n                }));\n            }));\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /**\n     * Sets the aria-label property on the element\n     * @private\n     * @param {?} newDescription\n     * @param {?} oldDescription\n     * @return {?}\n     */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        /** @type {?} */\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /**\n     * Adds css theme class given the color to the component host\n     * @private\n     * @param {?} colorPalette\n     * @return {?}\n     */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /**\n     * Clears any existing badges that might be left over from server-side rendering.\n     * @private\n     * @param {?} cssClass\n     * @return {?}\n     */\n    _clearExistingBadges(cssClass) {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            /** @type {?} */\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_hidden;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_overlap;\n    /**\n     * Whether the badge has any content.\n     * @type {?}\n     */\n    MatBadge.prototype._hasContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._overlap;\n    /**\n     * Position the badge should reside.\n     * Accepts any combination of 'above'|'below' and 'before'|'after'\n     * @type {?}\n     */\n    MatBadge.prototype.position;\n    /**\n     * The content for the badge\n     * @type {?}\n     */\n    MatBadge.prototype.content;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._description;\n    /**\n     * Size of the badge. Can be 'small', 'medium', or 'large'.\n     * @type {?}\n     */\n    MatBadge.prototype.size;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._hidden;\n    /**\n     * Unique id for the badge\n     * @type {?}\n     */\n    MatBadge.prototype._id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._badgeElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { ImmutableContext } from '@ngxs-labs/immer-adapter';\nimport { Action, NgxsAfterBootstrap, Selector, State, StateContext } from '@ngxs/store';\nimport { removeItem } from '@ngxs/store/operators';\nimport { tap } from 'rxjs/operators';\nimport { AppNotification } from './app-notification.model';\nimport {\n  AddNotification,\n  DeleteNotification,\n  FetchNotifications,\n  MarkAllAsRead,\n  MarkAsRead,\n} from './notifications.actions';\nimport { NotificationsService } from './notifications.service';\nimport { Injectable } from '@angular/core';\n\n/** @dynamic */\n@State<AppNotification[]>({\n  name: 'notifications',\n  defaults: [],\n})\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsState implements NgxsAfterBootstrap {\n  constructor(private notificationsService: NotificationsService) {}\n\n  @Selector()\n  static unReadCount(state: AppNotification[]) {\n    return state.filter((note) => !note.read).length;\n  }\n\n  ngxsAfterBootstrap(ctx: StateContext<AppNotification[]>) {\n    console.log('State initialized, now getting Notifications.');\n    /**\n     * well, this way, it will be called before dashboard is routed due to preloadingStrategy.\n     * we will loose lazy loading benefits. so lets use ngxsAfterBootstrap on component to load initial data.\n     */\n    // ctx.dispatch(new FetchNotifications())\n  }\n\n  @ImmutableContext()\n  @Action(AddNotification)\n  add(ctx: StateContext<AppNotification[]>, { payload }: AddNotification) {\n    ctx.setState((state: AppNotification[]) => {\n      state.push(payload);\n      return state;\n    });\n  }\n\n  @Action(FetchNotifications, { cancelUncompleted: true })\n  fetchNotifications({ getState, patchState, setState }: StateContext<AppNotification[]>) {\n    return this.notificationsService.getAll().pipe(tap((res) => setState(res)));\n  }\n\n  // @ImmutableContext()\n  // @Action(DeleteNotification)\n  // delete(ctx: StateContext<AppNotification[]>, { payload }: DeleteNotification) {\n  //   ctx.setState((state: AppNotification[]) => {\n  //     return state.splice(state.findIndex(note => note.id === payload.id), 1);\n  //     // or (slower):\n  //     // return state.filter(note => note.id !== payload.id);\n  //   });\n  // }\n\n  @Action(DeleteNotification)\n  delete(ctx: StateContext<AppNotification[]>, { payload }: DeleteNotification) {\n    ctx.setState(removeItem<AppNotification>((note) => note.id === payload.id));\n  }\n\n  @ImmutableContext()\n  @Action(MarkAsRead)\n  markAsRead(ctx: StateContext<AppNotification[]>, { payload }: MarkAsRead) {\n    ctx.setState((state: AppNotification[]) => {\n      state[state.findIndex((note) => note.id === payload.id)].read = true;\n      return state;\n    });\n  }\n\n  @ImmutableContext()\n  @Action(MarkAllAsRead)\n  markAllAsRead(ctx: StateContext<AppNotification[]>) {\n    ctx.setState((state: AppNotification[]) => {\n      state.forEach((item) => {\n        item.read = true;\n      });\n      return state;\n    });\n  }\n}\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r27._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r31 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r31._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { NgModule } from '@angular/core';\nimport { QuickpanelComponent } from './quickpanel.component';\nimport { CommonModule } from '@angular/common';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SharedFlexLayoutModule, SharedPerfectScrollbarModule } from '@ngx-starter-kit/shared';\n\nconst matModules = [MatListModule, MatProgressBarModule, MatSidenavModule, MatTabsModule];\n\n@NgModule({\n  imports: [CommonModule, [...matModules], SharedFlexLayoutModule, SharedPerfectScrollbarModule],\n  exports: [QuickpanelComponent],\n  declarations: [QuickpanelComponent],\n})\nexport class QuickpanelModule {}\n","import { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Directive, ElementRef, Optional, Input, TemplateRef, EventEmitter, isDevMode, SkipSelf, ViewContainerRef, ChangeDetectorRef, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-styling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction DragCSSStyleDeclaration() { }\nif (false) {\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.webkitUserDrag;\n    /** @type {?} */\n    DragCSSStyleDeclaration.prototype.MozUserSelect;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/transition-duration.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the behavior of DragRef.\n * @record\n */\nfunction DragRefConfig() { }\nif (false) {\n    /**\n     * Minimum amount of pixels that the user should\n     * drag, before the CDK initiates a drag sequence.\n     * @type {?}\n     */\n    DragRefConfig.prototype.dragStartThreshold;\n    /**\n     * Amount the pixels the user should drag before the CDK\n     * considers them to have changed the drag direction.\n     * @type {?}\n     */\n    DragRefConfig.prototype.pointerDirectionChangeThreshold;\n}\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * \\@docs-private\n * @record\n */\nfunction DragRefInternal() { }\n/**\n * Template that can be used to create a drag helper element (e.g. a preview or a placeholder).\n * @record\n * @template T\n */\nfunction DragHelperTemplate() { }\nif (false) {\n    /** @type {?} */\n    DragHelperTemplate.prototype.template;\n    /** @type {?} */\n    DragHelperTemplate.prototype.viewContainer;\n    /** @type {?} */\n    DragHelperTemplate.prototype.context;\n}\n/**\n * Template that can be used to create a drag preview element.\n * @record\n * @template T\n */\nfunction DragPreviewTemplate() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragPreviewTemplate.prototype.matchSize;\n}\n/**\n * Point on the page or within an element.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     * @return {?}\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const parent = (/** @type {?} */ (element.parentNode));\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            /** @type {?} */\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n            this._initialContainer = this._dropContainer;\n            this._initialIndex = this._dropContainer.getItemIndex(this);\n        }\n        else {\n            this._initialContainer = this._initialIndex = (/** @type {?} */ (undefined));\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        /** @type {?} */\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        (/** @type {?} */ (this._anchor.parentNode)).replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewClass = this.previewClass;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if ((/** @type {?} */ (previewConfig)).matchSize) {\n                matchElementSize(preview, this._rootElement);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach((/**\n                 * @param {?} className\n                 * @return {?}\n                 */\n                className => preview.classList.add(className)));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /**\n     * Gets the drag start delay, based on the event type.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getDragStartDelay(event) {\n        /** @type {?} */\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n}\nif (false) {\n    /**\n     * Element displayed next to the user's pointer while the element is dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._preview;\n    /**\n     * Reference to the view of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRef;\n    /**\n     * Reference to the view of the placeholder element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderRef;\n    /**\n     * Element that is rendered instead of the draggable item while it is being sorted.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholder;\n    /**\n     * Coordinates within the element at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionInElement;\n    /**\n     * Coordinates on the page at which the user picked up the element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pickupPositionOnPage;\n    /**\n     * Anchor node used to save the place in the DOM where the element was\n     * picked up so that it can be restored at the end of the drag sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._anchor;\n    /**\n     * CSS `transform` applied to the element when it isn't being dragged. We need a\n     * passive transform in order for the dragged element to retain its new position\n     * after the user has stopped dragging and because we need to know the relative\n     * position in case they start dragging again. This corresponds to `element.style.transform`.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._passiveTransform;\n    /**\n     * CSS `transform` that is applied to the element while it's being dragged.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._activeTransform;\n    /**\n     * Inline `transform` value that the element had before the first dragging sequence.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialTransform;\n    /**\n     * Whether the dragging sequence has been started. Doesn't\n     * necessarily mean that the element has been moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasStartedDragging;\n    /**\n     * Whether the element has moved since the user started dragging it.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._hasMoved;\n    /**\n     * Drop container in which the DragRef resided when dragging began.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialContainer;\n    /**\n     * Index at which the item started in its initial container.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._initialIndex;\n    /**\n     * Cached scroll position on the page when the element was picked up.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollPosition;\n    /**\n     * Emits when the item is being moved.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._moveEvents;\n    /**\n     * Keeps track of the direction in which the user is dragging along each axis.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDirectionDelta;\n    /**\n     * Pointer position at which the last change in the delta occurred.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerPositionAtLastDirectionChange;\n    /**\n     * Root DOM node of the drag instance. This is the element that will\n     * be moved around as the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElement;\n    /**\n     * Inline style value of `-webkit-tap-highlight-color` at the time the\n     * dragging was started. Used to restore the value once we're done dragging.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._rootElementTapHighlight;\n    /**\n     * Subscription to pointer movement events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMoveSubscription;\n    /**\n     * Subscription to the event that is dispatched when the user lifts their pointer.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUpSubscription;\n    /**\n     * Subscription to the viewport being scrolled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._scrollSubscription;\n    /**\n     * Subscription to the viewport being resized.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._resizeSubscription;\n    /**\n     * Time at which the last touch event occurred. Used to avoid firing the same\n     * events multiple times on touch devices where the browser will fire a fake\n     * mouse event for each touch event, after a certain time.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._lastTouchEventTime;\n    /**\n     * Time at which the last dragging sequence was started.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragStartTime;\n    /**\n     * Cached reference to the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryElement;\n    /**\n     * Whether the native dragging interactions have been enabled on the root element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._nativeInteractionsEnabled;\n    /**\n     * Cached dimensions of the preview element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewRect;\n    /**\n     * Cached dimensions of the boundary element.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._boundaryRect;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._placeholderTemplate;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._handles;\n    /**\n     * Registered handles that are currently disabled.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabledHandles;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dropContainer;\n    /**\n     * Layout direction of the item.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._direction;\n    /**\n     * Axis along which dragging is locked.\n     * @type {?}\n     */\n    DragRef.prototype.lockAxis;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    DragRef.prototype.dragStartDelay;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    DragRef.prototype.previewClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._disabled;\n    /**\n     * Emits as the drag sequence is being prepared.\n     * @type {?}\n     */\n    DragRef.prototype.beforeStarted;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    DragRef.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    DragRef.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    DragRef.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    DragRef.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    DragRef.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    DragRef.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    DragRef.prototype.moved;\n    /**\n     * Arbitrary data that can be attached to the drag item.\n     * @type {?}\n     */\n    DragRef.prototype.data;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    DragRef.prototype.constrainPosition;\n    /**\n     * Handler for the `mousedown`/`touchstart` events.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerDown;\n    /**\n     * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerMove;\n    /**\n     * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._pointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragRef.prototype._dragDropRegistry;\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param {?} node Node to be removed.\n * @return {?}\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n/**\n * Matches the target element's size to the source's size.\n * @param {?} target Element that needs to be resized.\n * @param {?} source Element whose size needs to be matched.\n * @return {?}\n */\nfunction matchElementSize(target, source) {\n    /** @type {?} */\n    const sourceRect = source.getBoundingClientRect();\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drop-list-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Entry in the position cache for draggable items.\n * \\@docs-private\n * @record\n */\nfunction CachedItemPosition() { }\nif (false) {\n    /**\n     * Instance of the drag item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.drag;\n    /**\n     * Dimensions of the item.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.clientRect;\n    /**\n     * Amount by which the item has been moved since dragging started.\n     * @type {?}\n     */\n    CachedItemPosition.prototype.offset;\n}\n/**\n * Object holding the scroll position of something.\n * @record\n */\nfunction ScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ScrollPosition.prototype.top;\n    /** @type {?} */\n    ScrollPosition.prototype.left;\n}\n/** @enum {number} */\nconst AutoScrollVerticalDirection = {\n    NONE: 0, UP: 1, DOWN: 2,\n};\n/** @enum {number} */\nconst AutoScrollHorizontalDirection = {\n    NONE: 0, LEFT: 1, RIGHT: 2,\n};\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * \\@docs-private\n * @record\n */\nfunction DropListRefInternal() { }\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Cached positions of the scrollable parent elements.\n         */\n        this._parentPositions = new Map();\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n         */\n        this._cachedShadowRoot = null;\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || ((/** @type {?} */ (styles))).scrollSnapType || '';\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?=} index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 11.0.0 `previousIndex` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?} distance Distance the user has dragged since the start of the dragging sequence.\n     * @param {?=} previousIndex Index of the item when dragging started.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} elements Elements that can be scrolled.\n     * @return {THIS}\n     */\n    withScrollableParents(elements) {\n        /** @type {?} */\n        const element = coerceElement((/** @type {?} */ (this)).element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        (/** @type {?} */ (this))._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !isPointerNearClientRect(this._clientRect, pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} element\n         * @return {?}\n         */\n        (position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections((/** @type {?} */ (element)), position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = (/** @type {?} */ (element));\n                }\n            }\n        }));\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the positions of the configured scrollable parents.\n     * @private\n     * @return {?}\n     */\n    _cacheParentPositions() {\n        this._parentPositions.clear();\n        this._parentPositions.set(this._document, {\n            scrollPosition: (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition(),\n        });\n        this._scrollableElements.forEach((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => {\n            /** @type {?} */\n            const clientRect = getMutableClientRect(element);\n            // We keep the ClientRect cached in two properties, because it's referenced in a lot of\n            // performance-sensitive places and we want to avoid the extra lookups. The `element` is\n            // guaranteed to always be in the `_scrollableElements` so this should always match.\n            if (element === this.element) {\n                this._clientRect = clientRect;\n            }\n            this._parentPositions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect\n            });\n        }));\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        /** @type {?} */\n        const styles = coerceElement(this.element).style;\n        ((/** @type {?} */ (styles))).scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrolledParent Element that was scrolled.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @return {?}\n     */\n    _updateAfterScroll(scrolledParent, newTop, newLeft) {\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support `contains`\n        // on the `document`.\n        /** @type {?} */\n        const scrolledParentNode = scrolledParent === this._document ? scrolledParent.documentElement : scrolledParent;\n        /** @type {?} */\n        const scrollPosition = (/** @type {?} */ (this._parentPositions.get(scrolledParent))).scrollPosition;\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this._parentPositions.forEach((/**\n         * @param {?} position\n         * @param {?} node\n         * @return {?}\n         */\n        (position, node) => {\n            if (position.clientRect && scrolledParent !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        }));\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._getShadowRoot().elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const target = (/** @type {?} */ (event.target));\n                /** @type {?} */\n                const position = this._parentPositions.get(target);\n                if (position) {\n                    /** @type {?} */\n                    let newTop;\n                    /** @type {?} */\n                    let newLeft;\n                    if (target === this._document) {\n                        /** @type {?} */\n                        const scrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                        newTop = scrollPosition.top;\n                        newLeft = scrollPosition.left;\n                    }\n                    else {\n                        newTop = ((/** @type {?} */ (target))).scrollTop;\n                        newLeft = ((/** @type {?} */ (target))).scrollLeft;\n                    }\n                    this._updateAfterScroll(target, newTop, newLeft);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        }));\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     * @private\n     * @return {?}\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            /** @type {?} */\n            const shadowRoot = (/** @type {?} */ (_getShadowRoot(coerceElement(this.element))));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\nif (false) {\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    DropListRef.prototype.element;\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.disabled;\n    /**\n     * Whether sorting items within the list is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.sortingDisabled;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    DropListRef.prototype.lockAxis;\n    /**\n     * Whether auto-scrolling the view when the user\n     * moves their pointer close to the edges is disabled.\n     * @type {?}\n     */\n    DropListRef.prototype.autoScrollDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    DropListRef.prototype.enterPredicate;\n    /**\n     * Emits right before dragging has started.\n     * @type {?}\n     */\n    DropListRef.prototype.beforeStarted;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    DropListRef.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    DropListRef.prototype.exited;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    DropListRef.prototype.dropped;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    DropListRef.prototype.sorted;\n    /**\n     * Arbitrary data that can be attached to the drop list.\n     * @type {?}\n     */\n    DropListRef.prototype.data;\n    /**\n     * Whether an item in the list is being dragged.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._isDragging;\n    /**\n     * Cache of the dimensions of all the items inside the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._itemPositions;\n    /**\n     * Cached positions of the scrollable parent elements.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._parentPositions;\n    /**\n     * Cached `ClientRect` of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._clientRect;\n    /**\n     * Draggable items that are currently active inside the container. Includes the items\n     * from `_draggables`, as well as any items that have been dragged in, but haven't\n     * been dropped yet.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeDraggables;\n    /**\n     * Keeps track of the item that was last swapped with the dragged item, as\n     * well as what direction the pointer was moving in when the swap occured.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._previousSwap;\n    /**\n     * Draggable items in the container.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._draggables;\n    /**\n     * Drop lists that are connected to the current one.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._siblings;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._orientation;\n    /**\n     * Connected siblings that currently have a dragged item.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._activeSiblings;\n    /**\n     * Layout direction of the drop list.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._direction;\n    /**\n     * Subscription to the window being scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportScrollSubscription;\n    /**\n     * Vertical direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._verticalScrollDirection;\n    /**\n     * Horizontal direction in which the list is currently scrolling.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._horizontalScrollDirection;\n    /**\n     * Node that is being auto-scrolled.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollNode;\n    /**\n     * Used to signal to the current auto-scroll sequence when to stop.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._stopScrollTimers;\n    /**\n     * Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._cachedShadowRoot;\n    /**\n     * Reference to the document.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._document;\n    /**\n     * Elements that can be scrolled while the user is dragging.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._scrollableElements;\n    /**\n     * Initial value for the element's `scroll-snap-type` style.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._initialScrollSnap;\n    /**\n     * Starts the interval that'll auto-scroll the element.\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._startScrollInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._dragDropRegistry;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DropListRef.prototype._viewportRuler;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param {?} rect ClientRect to check against.\n * @param {?} pointerX Coordinates along the X axis.\n * @param {?} pointerY Coordinates along the Y axis.\n * @return {?}\n */\nfunction isPointerNearClientRect(rect, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    /** @type {?} */\n    const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n    /** @type {?} */\n    const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._document;\n    /**\n     * Registered drop container instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dropInstances;\n    /**\n     * Registered drag item instances.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._dragInstances;\n    /**\n     * Drag item instances that are currently being dragged.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._activeDragInstances;\n    /**\n     * Keeps track of the event listeners that we've bound to the `document`.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._globalListeners;\n    /**\n     * Emits the `touchmove` or `mousemove` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerMove;\n    /**\n     * Emits the `touchend` or `mouseup` events that are dispatched\n     * while the user is dragging a drag item instance.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.pointerUp;\n    /**\n     * Emits when the viewport has been scrolled while the user is dragging an item.\n     * @type {?}\n     */\n    DragDropRegistry.prototype.scroll;\n    /**\n     * Event listener that will prevent the default browser action while the user is dragging.\n     * \\@param event Event whose default action should be prevented.\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._preventDefaultWhileDragging;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDropRegistry.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    DragDrop.prototype._dragDropRegistry;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Event emitted when the user starts dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragStart() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragStart.prototype.source;\n}\n/**\n * Event emitted when the user releases an item, before any animations have started.\n * @record\n * @template T\n */\nfunction CdkDragRelease() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragRelease.prototype.source;\n}\n/**\n * Event emitted when the user stops dragging a draggable.\n * @record\n * @template T\n */\nfunction CdkDragEnd() { }\nif (false) {\n    /**\n     * Draggable that emitted the event.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.source;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragEnd.prototype.distance;\n}\n/**\n * Event emitted when the user moves an item into a new drop container.\n * @record\n * @template T, I\n */\nfunction CdkDragEnter() { }\nif (false) {\n    /**\n     * Container into which the user has moved the item.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.container;\n    /**\n     * Item that was moved into the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.item;\n    /**\n     * Index at which the item has entered the container.\n     * @type {?}\n     */\n    CdkDragEnter.prototype.currentIndex;\n}\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n * @record\n * @template T, I\n */\nfunction CdkDragExit() { }\nif (false) {\n    /**\n     * Container from which the user has a removed an item.\n     * @type {?}\n     */\n    CdkDragExit.prototype.container;\n    /**\n     * Item that was removed from the container.\n     * @type {?}\n     */\n    CdkDragExit.prototype.item;\n}\n/**\n * Event emitted when the user drops a draggable item inside a drop container.\n * @record\n * @template T, O\n */\nfunction CdkDragDrop() { }\nif (false) {\n    /**\n     * Index of the item when it was picked up.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousIndex;\n    /**\n     * Current index of the item.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.currentIndex;\n    /**\n     * Item that is being dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.item;\n    /**\n     * Container in which the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.container;\n    /**\n     * Container from which the item was picked up. Can be the same as the `container`.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.previousContainer;\n    /**\n     * Whether the user's pointer was over the container when the item was dropped.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.isPointerOverContainer;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragDrop.prototype.distance;\n}\n/**\n * Event emitted as the user is dragging a draggable item.\n * @record\n * @template T\n */\nfunction CdkDragMove() { }\nif (false) {\n    /**\n     * Item that is being dragged.\n     * @type {?}\n     */\n    CdkDragMove.prototype.source;\n    /**\n     * Position of the user's pointer on the page.\n     * @type {?}\n     */\n    CdkDragMove.prototype.pointerPosition;\n    /**\n     * Native event that is causing the dragging.\n     * @type {?}\n     */\n    CdkDragMove.prototype.event;\n    /**\n     * Distance in pixels that the user has dragged since the drag sequence started.\n     * @type {?}\n     */\n    CdkDragMove.prototype.distance;\n    /**\n     * Indicates the direction in which the user is dragging the element along each axis.\n     * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n     * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n     * that the position hasn't changed.\n     * @type {?}\n     */\n    CdkDragMove.prototype.delta;\n}\n/**\n * Event emitted when the user swaps the position of two drag items.\n * @record\n * @template T, I\n */\nfunction CdkDragSortEvent() { }\nif (false) {\n    /**\n     * Index from which the item was sorted previously.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.previousIndex;\n    /**\n     * Index that the item is currently in.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.currentIndex;\n    /**\n     * Container that the item belongs to.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.container;\n    /**\n     * Item that is being sorted.\n     * @type {?}\n     */\n    CdkDragSortEvent.prototype.item;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-parent.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-handle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 8)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] } });\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragHandle.ngAcceptInputType_disabled;\n    /**\n     * Closest parent draggable instance.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._parentDrag;\n    /**\n     * Emits when the state of the handle has changed.\n     * @type {?}\n     */\n    CdkDragHandle.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragHandle.prototype._disabled;\n    /** @type {?} */\n    CdkDragHandle.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" } });\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Context data to be added to the placeholder template instance.\n     * @type {?}\n     */\n    CdkDragPlaceholder.prototype.data;\n    /** @type {?} */\n    CdkDragPlaceholder.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag-preview.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /**\n     * Whether the preview should preserve the same size as the item that is being dragged.\n     * @return {?}\n     */\n    get matchSize() { return this._matchSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" } });\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDragPreview.ngAcceptInputType_matchSize;\n    /**\n     * Context data to be added to the preview template instance.\n     * @type {?}\n     */\n    CdkDragPreview.prototype.data;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDragPreview.prototype._matchSize;\n    /** @type {?} */\n    CdkDragPreview.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n * @record\n */\nfunction DragDropConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.lockAxis;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.dragStartDelay;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.constrainPosition;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.previewClass;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.boundaryElement;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.rootElementSelector;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.draggingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.sortingDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listAutoScrollDisabled;\n    /** @type {?|undefined} */\n    DragDropConfig.prototype.listOrientation;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drag.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return (/** @type {?} */ (merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => {\n                    return item._stateChanges.pipe(startWith(item));\n                })))));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const dragStartDelay = this.dragStartDelay;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPreview, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkDragHandle, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CdkDragHandle, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPreview]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CdkDragPlaceholder]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDrag.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._destroyed;\n    /**\n     * Reference to the underlying drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype._dragRef;\n    /**\n     * Elements that can be used to drag the draggable item.\n     * @type {?}\n     */\n    CdkDrag.prototype._handles;\n    /**\n     * Element that will be used as a template to create the draggable item's preview.\n     * @type {?}\n     */\n    CdkDrag.prototype._previewTemplate;\n    /**\n     * Template for placeholder element rendered to show where a draggable would be dropped.\n     * @type {?}\n     */\n    CdkDrag.prototype._placeholderTemplate;\n    /**\n     * Arbitrary data to attach to this drag instance.\n     * @type {?}\n     */\n    CdkDrag.prototype.data;\n    /**\n     * Locks the position of the dragged element along the specified axis.\n     * @type {?}\n     */\n    CdkDrag.prototype.lockAxis;\n    /**\n     * Selector that will be used to determine the root draggable element, starting from\n     * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n     * when trying to enable dragging on an element that you might not have access to.\n     * @type {?}\n     */\n    CdkDrag.prototype.rootElementSelector;\n    /**\n     * Node or selector that will be used to determine the element to which the draggable's\n     * position will be constrained. If a string is passed in, it'll be used as a selector that\n     * will be matched starting from the element's parent and going up the DOM until a match\n     * has been found.\n     * @type {?}\n     */\n    CdkDrag.prototype.boundaryElement;\n    /**\n     * Amount of milliseconds to wait after the user has put their\n     * pointer down before starting to drag the element.\n     * @type {?}\n     */\n    CdkDrag.prototype.dragStartDelay;\n    /**\n     * Sets the position of a `CdkDrag` that is outside of a drop container.\n     * Can be used to restore the element's position for a returning user.\n     * @type {?}\n     */\n    CdkDrag.prototype.freeDragPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._disabled;\n    /**\n     * Function that can be used to customize the logic of how the position of the drag item\n     * is limited while it's being dragged. Gets called with a point containing the current position\n     * of the user's pointer on the page and should return a point describing where the item should\n     * be rendered.\n     * @type {?}\n     */\n    CdkDrag.prototype.constrainPosition;\n    /**\n     * Class to be added to the preview element.\n     * @type {?}\n     */\n    CdkDrag.prototype.previewClass;\n    /**\n     * Emits when the user starts dragging the item.\n     * @type {?}\n     */\n    CdkDrag.prototype.started;\n    /**\n     * Emits when the user has released a drag item, before any animations have started.\n     * @type {?}\n     */\n    CdkDrag.prototype.released;\n    /**\n     * Emits when the user stops dragging an item in the container.\n     * @type {?}\n     */\n    CdkDrag.prototype.ended;\n    /**\n     * Emits when the user has moved the item into a new container.\n     * @type {?}\n     */\n    CdkDrag.prototype.entered;\n    /**\n     * Emits when the user removes the item its container by dragging it into another container.\n     * @type {?}\n     */\n    CdkDrag.prototype.exited;\n    /**\n     * Emits when the user drops the item inside a container.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropped;\n    /**\n     * Emits as the user is dragging the item. Use with caution,\n     * because this event will fire for every pixel that the user has dragged.\n     * @type {?}\n     */\n    CdkDrag.prototype.moved;\n    /**\n     * Element that the draggable is attached to.\n     * @type {?}\n     */\n    CdkDrag.prototype.element;\n    /**\n     * Droppable container that the draggable is a part of.\n     * @type {?}\n     */\n    CdkDrag.prototype.dropContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDrag.prototype._changeDetectorRef;\n}\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup'\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkDropListGroup.ngAcceptInputType_disabled;\n    /**\n     * Drop lists registered inside the group.\n     * @type {?}\n     */\n    CdkDropListGroup.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropListGroup.prototype._disabled;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/directives/drop-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * \\@docs-private\n * @record\n */\nfunction CdkDropListInternal() { }\nconst ɵ0 = undefined;\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     * @param {?=} _scrollDispatcher\n     * @param {?=} config\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group, _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n        if (this._scrollDispatcher) {\n            /** @type {?} */\n            const scrollableParents = this._scrollDispatcher\n                .getAncestorScrollContainers(this.element)\n                .map((/**\n             * @param {?} scrollable\n             * @return {?}\n             */\n            scrollable => scrollable.getElementRef().nativeElement));\n            this._dropListRef.withScrollableParents(scrollableParents);\n        }\n    }\n    /**\n     * Registers an items with the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Removes an item from the drop list.\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /**\n     * Gets the registered items in the list, sorted by their position in the DOM.\n     * @return {?}\n     */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            /** @type {?} */\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     *\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, previousContainer._dropListRef, isPointerOverContainer, { x: 0, y: 0 });\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Assigns the default input values based on a provided config object.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /**\n     * Syncs up the registered drag items with underlying drop list ref.\n     * @private\n     * @return {?}\n     */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._dragRef)));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CdkDropListGroup, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CdkDropListGroup, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\nif (false) {\n    /**\n     * Keeps track of the drop lists that are currently on the page.\n     * @type {?}\n     * @private\n     */\n    CdkDropList._dropLists;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_sortingDisabled;\n    /** @type {?} */\n    CdkDropList.ngAcceptInputType_autoScrollDisabled;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._destroyed;\n    /**\n     * Reference to the underlying drop list instance.\n     * @type {?}\n     */\n    CdkDropList.prototype._dropListRef;\n    /**\n     * Other draggable containers that this container is connected to and into which the\n     * container's items can be transferred. Can either be references to other drop containers,\n     * or their unique IDs.\n     * @type {?}\n     */\n    CdkDropList.prototype.connectedTo;\n    /**\n     * Arbitrary data to attach to this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.data;\n    /**\n     * Direction in which the list is oriented.\n     * @type {?}\n     */\n    CdkDropList.prototype.orientation;\n    /**\n     * Unique ID for the drop zone. Can be used as a reference\n     * in the `connectedTo` of another `CdkDropList`.\n     * @type {?}\n     */\n    CdkDropList.prototype.id;\n    /**\n     * Locks the position of the draggable elements inside the container along the specified axis.\n     * @type {?}\n     */\n    CdkDropList.prototype.lockAxis;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._disabled;\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @type {?}\n     */\n    CdkDropList.prototype.sortingDisabled;\n    /**\n     * Function that is used to determine whether an item\n     * is allowed to be moved into a drop container.\n     * @type {?}\n     */\n    CdkDropList.prototype.enterPredicate;\n    /**\n     * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n     * @type {?}\n     */\n    CdkDropList.prototype.autoScrollDisabled;\n    /**\n     * Emits when the user drops an item inside the container.\n     * @type {?}\n     */\n    CdkDropList.prototype.dropped;\n    /**\n     * Emits when the user has moved a new drag item into this container.\n     * @type {?}\n     */\n    CdkDropList.prototype.entered;\n    /**\n     * Emits when the user removes an item from the container\n     * by dragging it into another container.\n     * @type {?}\n     */\n    CdkDropList.prototype.exited;\n    /**\n     * Emits as the user is swapping items while actively dragging.\n     * @type {?}\n     */\n    CdkDropList.prototype.sorted;\n    /**\n     * Keeps track of the items that are registered with this container. Historically we used to\n     * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n     * well which means that we can't handle cases like dragging the headers of a `mat-table`\n     * correctly. What we do instead is to have the items register themselves with the container\n     * and then we sort them based on their position in the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._unsortedItems;\n    /**\n     * Element that the drop list is attached to.\n     * @type {?}\n     */\n    CdkDropList.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._group;\n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * \\@breaking-change 11.0.0\n     * @type {?}\n     * @private\n     */\n    CdkDropList.prototype._scrollDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/drag-drop-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/drag-drop/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_CONFIG_FACTORY, CDK_DROP_LIST, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_b };\n\n//# sourceMappingURL=drag-drop.js.map","/*!\n* screenfull\n* v5.0.2 - 2020-02-13\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (element) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\n\t\t\t\telement = element || document.documentElement;\n\n\t\t\t\tvar returnPromise = element[fn.requestFullscreen]();\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (!this.isFullscreen) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\n\t\t\t\tvar returnPromise = document[fn.exitFullscreen]();\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (element) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(element);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = {isEnabled: false};\n\t\t} else {\n\t\t\twindow.screenfull = {isEnabled: false};\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tisEnabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n"]}